[
    {
        "id": "2d41a8ed5aea3449",
        "type": "tab",
        "label": "Autre - Node gestion etc..",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb15c917381dd273",
        "type": "tab",
        "label": "Page First welcoming",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a707f17e5367291d",
        "type": "tab",
        "label": "Page Home",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db1e7a22029cc2a4",
        "type": "tab",
        "label": "Preview",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e988301e60e4b458",
        "type": "tab",
        "label": "Sample",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "70f558eb9d60b6fc",
        "type": "tab",
        "label": "Acquisition",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "00a14f98244d252e",
        "type": "tab",
        "label": "Segmentation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f260ed9417849607",
        "type": "tab",
        "label": "Page visualization",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5047c566973ee3a1",
        "type": "tab",
        "label": "Page settings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b70df4b6cc88d09a",
        "type": "tab",
        "label": "Hardware settings",
        "disabled": false,
        "info": "> ",
        "env": []
    },
    {
        "id": "a697ff46c6e7b7fb",
        "type": "tab",
        "label": "Monitoring",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5dc348791e54690",
        "type": "tab",
        "label": "Flux 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "819880c202d2361a",
        "type": "tab",
        "label": "Visualization Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4237eacb62444cc7",
        "type": "group",
        "z": "db1e7a22029cc2a4",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7c15a6aca3b44d2e",
            "f8467f680ae4f627",
            "b2dbc032f8e38df8",
            "b3f67037ca280e20",
            "b86113b166fecbb9",
            "774a6b171946cda1",
            "ee0252f79ad5e696",
            "c866246764dec8a6",
            "e6eaab7bd19e4bfd",
            "2cb8a38663ecb8ba",
            "1ab62a6e28ceeacb",
            "ec1137fb63fbb85a",
            "0422d9f47a0bcf6c",
            "373862dd79b24cb3",
            "44ea67cf59bbe48f"
        ],
        "x": 24,
        "y": 99,
        "w": 1192,
        "h": 202
    },
    {
        "id": "a6c708e75fee0abb",
        "type": "group",
        "z": "db1e7a22029cc2a4",
        "name": "Streaming",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ae325f7a4e54fd51"
        ],
        "x": 404,
        "y": 319,
        "w": 192,
        "h": 82
    },
    {
        "id": "c285048823f34bc0",
        "type": "group",
        "z": "70f558eb9d60b6fc",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7bcdca966429e51e",
            "25b3ad405bfa567a",
            "c7e80bc0431e15d7",
            "bf4e6ca4f9cb03d0",
            "b6d0e22f33ca686c",
            "2a5d62263d874923",
            "c46dc09dcaa89b8c",
            "478e79c6f72c6a53",
            "b2e678c70a46968c",
            "e7ef6ef1f343a096",
            "c65cad12fbc1ec52",
            "c17dbbdcd5d63f06",
            "3163b083f704c234",
            "8f8904dea405bc9f",
            "41261010b645e245"
        ],
        "x": 184,
        "y": 119,
        "w": 1192,
        "h": 202
    },
    {
        "id": "5f803d43d3f15b83",
        "type": "group",
        "z": "70f558eb9d60b6fc",
        "name": "Streaming",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "2ef2375e2641e206"
        ],
        "x": 574,
        "y": 339,
        "w": 192,
        "h": 82
    },
    {
        "id": "610c7571a6ee5612",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c3c3454d430487e0",
            "83366805126c40c9",
            "62ed056b8dcaa302",
            "97a70986fa0406ce",
            "86d23d1c6a0ea540",
            "87f5b98130be3cd8",
            "7e6b0fe8d3df5f29",
            "85ae464a86f572ec",
            "c0aa6894fa9aaf74",
            "ebc182ac620954af",
            "a7e174825f5991b0",
            "5c29c3693e422965",
            "dd2350a61698dc85",
            "88baa8ae55dc9fe2",
            "f7640955206f3cad"
        ],
        "x": 224,
        "y": 199,
        "w": 1192,
        "h": 202
    },
    {
        "id": "3e8b16808b1bfff5",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Net specificity",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cc28e6514a5a9c99",
            "f92c7e06d2ed0d87",
            "73f91661b6841190",
            "7d0319cde5add08f",
            "27c7bd9710ac7319",
            "2cb31920428a948a",
            "76c578ddabf2971c",
            "71664d572a015628",
            "9b5ddb73e366a41d",
            "6109a08395735bbd",
            "7bee2ea08d6b9f54",
            "22424630f98f525f",
            "a514467c6bc076c0"
        ],
        "x": 84,
        "y": 1059,
        "w": 1202,
        "h": 202
    },
    {
        "id": "fcefc59d8d36e714",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Other Information - Vertical Net",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "470cceda379e27fc",
            "f31535161df5937b",
            "ba086b5748dc75a9",
            "ebabbfe97e25d57a",
            "be6eeee0eb1be6d8",
            "b8678d0aef18a2b8",
            "52c9cc5d25da1cd7",
            "38b39c419f51dc17",
            "dfed6cc941515453",
            "3ccab9026a638be4",
            "b33763b35fe6bed5",
            "5ff224fdd65af7b4",
            "1c5a11c4281aa967",
            "ffcf9902cdd41ad1",
            "0c3837abf17b6e69",
            "c727fe7b031df253"
        ],
        "x": 84,
        "y": 1639,
        "w": 1262,
        "h": 242
    },
    {
        "id": "fb17654b4a11e0db",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Other Information - Niskin bottle",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0eec8b84ecf95b07",
            "5ac56b2b093b7f88",
            "b5126cbae5244cd0",
            "d691c85dafa9e96e",
            "e1a92eec5d78dfc2",
            "78ed3523acf4aa56",
            "c50cd75b1ff8b242",
            "d87add2bc6bd4ca6",
            "8e84a78cf2bc0972",
            "6863a516472cae2d",
            "05ce26a33861a872",
            "31086f2f8fadc1a9",
            "a64633dc848b180d"
        ],
        "x": 84,
        "y": 1899,
        "w": 1282,
        "h": 202
    },
    {
        "id": "8f90fd4103e79371",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Bottle specificity",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4a4db8d5c9ce9226",
            "8602fcc44b294bfc",
            "5de1187ebfd8bc79",
            "b708f61bae3b3542"
        ],
        "x": 84,
        "y": 1279,
        "w": 1202,
        "h": 82
    },
    {
        "id": "99e9870d6e66aeaf",
        "type": "group",
        "z": "00a14f98244d252e",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3e8b5c7dc322501d",
            "eec02edaf7da6b2e",
            "8cf785fffe790177",
            "d68c231c98bf92e0",
            "b1eacad4b3bf6e97",
            "1e4493ea93992368",
            "a004902c262b883a",
            "db8dbeb996228096",
            "21fa8983c634e8d6",
            "c7380afc08bb239e",
            "c632cc613a0f8ce5",
            "25b53f7dfdeeeecc",
            "7ac29261ba9159db",
            "3f6329f6f64a5d57",
            "a9b6da2f2e6a066a"
        ],
        "x": 64,
        "y": 99,
        "w": 1192,
        "h": 202
    },
    {
        "id": "cd7cd2c05c7f55bf",
        "type": "group",
        "z": "00a14f98244d252e",
        "name": "Acquisition list",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d417adf0e2e7759b",
            "d39a23df09b43d2b",
            "4b6824e2ecaa9016",
            "343ad9e58c44f9d9",
            "ee4f56191c0a79e9"
        ],
        "x": 404,
        "y": 319,
        "w": 412,
        "h": 122
    },
    {
        "id": "3bb6cedcc43ce23c",
        "type": "group",
        "z": "a707f17e5367291d",
        "name": "Header-home",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c356e55229da7519"
        ],
        "x": 674,
        "y": 279,
        "w": 192,
        "h": 82
    },
    {
        "id": "1daf5cfc8e29e5ad",
        "type": "group",
        "z": "a707f17e5367291d",
        "name": "Top-header-home",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ed5c88bb575ee514",
            "3f1969eeced7c689",
            "7150e1ace23a0ffe",
            "a9f01d97a7e9cb66",
            "b5fb72779a3a06ab",
            "4b83892743cbc177",
            "d4af39c15f3540b2",
            "61aef8544c46a619",
            "c11d292985db0bd7"
        ],
        "x": 284,
        "y": 99,
        "w": 1242,
        "h": 162
    },
    {
        "id": "d6362eced379ae80",
        "type": "group",
        "z": "a707f17e5367291d",
        "name": "first-line-home",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "1e5f2afc41a16b02",
            "77b032808eca46e4",
            "0e78c20a20947374"
        ],
        "x": 674,
        "y": 379,
        "w": 522,
        "h": 82
    },
    {
        "id": "d3d7be8ef5f940c4",
        "type": "group",
        "z": "00a14f98244d252e",
        "name": "Acquisition queue",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "af3cbcd9f5f35be3",
            "cf4fbc0932d87cc7",
            "c18005dcbaf22026",
            "9529b63ced697421",
            "49ea401a0745e446",
            "42fc3d43830febaa",
            "aa582b7c4e2ce8c7",
            "67b91503eb38afe7",
            "a0368732ccfa08d8",
            "62d2042e91fbe197",
            "d721115905e941f3",
            "cf21ab67185f9d54",
            "d3b2e7d1bba0372d",
            "6d941e58139bc4ef",
            "e6ba170eea1efeb4",
            "193d3837469bc271",
            "2cf602d6c4ccb957",
            "2298a8a5a04dade7"
        ],
        "x": 104,
        "y": 459,
        "w": 992,
        "h": 322
    },
    {
        "id": "490dfe89220d57c8",
        "type": "group",
        "z": "f260ed9417849607",
        "name": "Header",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4d86c733bf64b966",
            "4e72a7308ee22e01",
            "6f6cce3a5af545a4",
            "7f0eed3e70085a04",
            "d59f4d5d0eee9d10",
            "fb75e319685b7992",
            "b4b8a2b6c5179ad4",
            "4d9f44edfc258244",
            "9dcc078c686a89b8",
            "5a2fd5aa883e6a41"
        ],
        "x": 94,
        "y": 139,
        "w": 852,
        "h": 162
    },
    {
        "id": "856d9c3d6ae49cc6",
        "type": "group",
        "z": "f260ed9417849607",
        "name": "Chart Section",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "fill": "#ffefbf",
            "fill-opacity": "0.43"
        },
        "nodes": [
            "019af3477dfde6a9",
            "4f7542d8f7329158",
            "5fe96956d7f339e3",
            "fe2841e73b262323",
            "85270dcda34b8cc8"
        ],
        "x": 54,
        "y": 1939,
        "w": 852,
        "h": 202
    },
    {
        "id": "0d384e544ffce204",
        "type": "group",
        "z": "f260ed9417849607",
        "name": "Top Page",
        "style": {
            "stroke": "#000000",
            "fill": "#bfdbef",
            "label": true,
            "color": "#000000",
            "fill-opacity": "0.45"
        },
        "nodes": [
            "90c3a646e08cf822",
            "217abb3abac21001",
            "3a99d3e5ba59a12d",
            "d9a24d94ae3bdddb",
            "758f20607e7c5eba"
        ],
        "x": 8,
        "y": 313,
        "w": 2424,
        "h": 1441.5
    },
    {
        "id": "8fc02aa23897ae78",
        "type": "group",
        "z": "fb15c917381dd273",
        "name": "header-first-visit",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "20208cc0649c9fba"
        ],
        "x": 514,
        "y": 219,
        "w": 212,
        "h": 82
    },
    {
        "id": "7d3251a1e9bb91bc",
        "type": "group",
        "z": "fb15c917381dd273",
        "name": "title-first-visit",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "48814ebcfe772953"
        ],
        "x": 514,
        "y": 319,
        "w": 192,
        "h": 82
    },
    {
        "id": "1001f50c9610fbab",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "header-settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fc701c9ad326380a",
            "679e3c949c5dce47",
            "4a6052524bce45c6",
            "b1e3240bad8585c3",
            "3519c483c429e46f",
            "51af5dbb613ee249",
            "d3d0015f9eb7b566",
            "aefc0f84026bcf7b",
            "9f4d9eacaefc1402"
        ],
        "x": 144,
        "y": 139,
        "w": 1252,
        "h": 142
    },
    {
        "id": "c8544c656ab24cf4",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "Sample settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "60b2ecc0d6e457c8",
            "8b6ce849b7c7c43f",
            "53b390b93b29c5fa",
            "4e5baf21e265d811"
        ],
        "x": 144,
        "y": 619,
        "w": 942,
        "h": 82
    },
    {
        "id": "149a607c8eda744a",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "Operator settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "33b7801889f49dfe",
            "c52bf2a4ca8f30e3",
            "def19b85f4af5b99",
            "4716e00ccb75257f",
            "460fb659adbbae17",
            "7b3e64e2512b4f9f"
        ],
        "x": 144,
        "y": 299,
        "w": 982,
        "h": 122
    },
    {
        "id": "8832a7e3b9ea8c13",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "Preview settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4cebedc5cc8a9e7b",
            "323fc05b6b6661cf",
            "683c6eaea5e163cb",
            "a0d6e1698fda59ed",
            "8b25d62dcb29d8ee",
            "82c806b98af85f3b",
            "26a14f41d013e47a",
            "b07c9313574e2c5e"
        ],
        "x": 114,
        "y": 439,
        "w": 1032,
        "h": 162
    },
    {
        "id": "5518fb6d8287c2dc",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "Acquition settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "3405fdbeca45c434",
            "50a812cd9b3daf49",
            "bfc1c9e460621e6b",
            "e726426c28381b18",
            "e17de7cede28b990",
            "fb3284d43226bc67"
        ],
        "x": 104,
        "y": 719,
        "w": 1062,
        "h": 122
    },
    {
        "id": "da310b26268026a0",
        "type": "group",
        "z": "b70df4b6cc88d09a",
        "name": "header-hardware-settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "55974a9928ce597e",
            "68dcdfd23b3a33a9",
            "1e8f3d0638de936c",
            "49a5004745cdf3c3",
            "2599555452533b5a",
            "13fc468b0d772e60",
            "02992a4ffb79bff1",
            "0d78c0467054ebc9",
            "c7beb866c037aefc"
        ],
        "x": 324,
        "y": 159,
        "w": 1152,
        "h": 142
    },
    {
        "id": "872edfac5cde1d2c",
        "type": "group",
        "z": "b70df4b6cc88d09a",
        "name": "Hardware settings section two",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4651884da3cb8f8e",
            "74e49188881722bf"
        ],
        "x": 484,
        "y": 599,
        "w": 462,
        "h": 82
    },
    {
        "id": "e878c471eeb2f3b4",
        "type": "group",
        "z": "b70df4b6cc88d09a",
        "name": "Hardware settings section three",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f3feab8365d70286",
            "944fd4bbbb946194",
            "3a156da7c106e28d",
            "4c0ac6db11a8f2c3"
        ],
        "x": 144,
        "y": 699,
        "w": 802,
        "h": 82
    },
    {
        "id": "90297191dbca9961",
        "type": "group",
        "z": "b70df4b6cc88d09a",
        "name": "Hardware settings section four",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "18082ce944ac9542",
            "0d01236006fd6ee9"
        ],
        "x": 484,
        "y": 799,
        "w": 462,
        "h": 82
    },
    {
        "id": "290796618b24955f",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "Segmentation settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5feeca33f3a87c8a",
            "7bfa8347d6717246",
            "1d6f4ea4e54b0656",
            "ea3288b5bc6bc136"
        ],
        "x": 184,
        "y": 859,
        "w": 902,
        "h": 82
    },
    {
        "id": "6720ea496a9e645e",
        "type": "group",
        "z": "2d41a8ed5aea3449",
        "name": "Data restoration - WARNING",
        "style": {
            "stroke": "#000000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6a5d78b1bdbbd9da",
            "9a59e8d02ffe1f9b",
            "4469155952188120",
            "b45db1e61d1984ce",
            "caa5d00ff15afc7b",
            "28eb8fb70252bece",
            "d09d2878c5a4f034",
            "8777af2465094b01",
            "71229c84c971a227",
            "50beb12661979952",
            "401bfc3969550dac",
            "c3daa12c86987eb9",
            "c5ca778e3eda6a52",
            "569d67a3e424fbfc",
            "70bdda69151a2d51",
            "6cc482054923eb78",
            "59fb45c7686d6613",
            "be3b221fc2df4911",
            "47793af3c5948f4c",
            "ea3ed4500ce285e0",
            "74edaec95cafb2d9",
            "752f586529da1398",
            "f67384bd93fa9723",
            "d67a089534fb33a1",
            "4782940c3eb11f57",
            "0cee35de3e61c695",
            "bfce8bcf0432af22",
            "dedd2f376269d92d",
            "89246bd4b7b399ea",
            "ef1abfee73208836",
            "13cdc4d42826fa8f",
            "dda11a33a13eb2d5",
            "872ca1ac17bbd6d5",
            "4c23fa82d4496339",
            "931e4aba3ed98eab",
            "7e1481c754e52498"
        ],
        "x": 94,
        "y": 173,
        "w": 1598,
        "h": 934
    },
    {
        "id": "925817a4bacd25ee",
        "type": "group",
        "z": "5047c566973ee3a1",
        "name": "reset button",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "23ffd2c116cbdf71",
            "250fac5d08b457a3",
            "13849494e0caeed1",
            "5218538b73a8aa1d",
            "6db5780f32d06404"
        ],
        "x": 554,
        "y": 959,
        "w": 722,
        "h": 122
    },
    {
        "id": "7cb61834f7876229",
        "type": "group",
        "z": "a697ff46c6e7b7fb",
        "name": "header-monitoring",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "49bf72922f5349fd",
            "c2be1508adc96095",
            "078a7c562c7ec691",
            "7b83d675be7b73a9",
            "4207f0b5f0838c18",
            "e7a72f71ca32a7be",
            "7992408ecc427d92",
            "67fcf51f541bd536",
            "757e7132e148e450"
        ],
        "x": 104,
        "y": 179,
        "w": 1172,
        "h": 142
    },
    {
        "id": "6dabc68acbd23974",
        "type": "group",
        "z": "a697ff46c6e7b7fb",
        "name": "Right pannel",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f8fd4c2266066516",
            "0395251fd0d40dfe",
            "ee91ce21184552fa",
            "ab09fc7b9f3e8189",
            "04b077947f323ffb",
            "4bd4ed61fe231982",
            "07b89d6d2f243410",
            "ac21946563059ca9",
            "1a8330a03101a150",
            "cba7a0cba93534cc",
            "7fd6408cf7e06683",
            "d015e87016b2d964",
            "7ba43cf89d3a06cd",
            "b96b929fdeaef889",
            "31e5b0e4d97debdb"
        ],
        "x": 264,
        "y": 479,
        "w": 1392,
        "h": 182
    },
    {
        "id": "cec7b5c348ba4e10",
        "type": "group",
        "z": "a697ff46c6e7b7fb",
        "name": "Left pannel",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7e44e412732eb023"
        ],
        "x": 414,
        "y": 379,
        "w": 192,
        "h": 82
    },
    {
        "id": "a193634e73cb129b",
        "type": "group",
        "z": "b70df4b6cc88d09a",
        "name": "hardware settings section one",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c5c51a15b8e79bf3",
            "2b02520ad1df73ae",
            "b0f02965c34beb87",
            "303805b28bef8dbe",
            "0aead36053762ea4",
            "7d5d703c8feb5408",
            "e9b7b351f0e36cb9",
            "7d7c8138a237f36d",
            "e8694a78adb3d88a",
            "102834d0d6eb6a38",
            "d3a5f61d61a11b45",
            "6ca3f7475a1bb35d",
            "bef597cefab44dce",
            "f8e5f6cb539b3f29",
            "453c20a23e389c2c"
        ],
        "x": 164,
        "y": 319,
        "w": 1182,
        "h": 262
    },
    {
        "id": "5387cbd03cda0166",
        "type": "group",
        "z": "db1e7a22029cc2a4",
        "name": "Settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7c2460ce034f4740",
            "4d881b94510f4523",
            "e76753ed4e6ec711",
            "7f41b4c29c7b9203",
            "b439202bb729a0e3",
            "f25e0f5152d059c9",
            "6739b10df9f1d57b",
            "f1a9c4c1beb3f6db",
            "30fca39cc406ed23",
            "b5e0a7a9cb47a50b",
            "e59fec7a28f6d723",
            "ff6a9f74b20d4443",
            "13dc7e99c3b3cafc",
            "bffac6466a2ad434",
            "7a6313a038e7fb05",
            "53e24b200c3a5f0f",
            "ad4d0fbf355e167c",
            "79716f3ce5c936ab"
        ],
        "x": 54,
        "y": 419,
        "w": 912,
        "h": 482
    },
    {
        "id": "0ba7fbaa34399b50",
        "type": "group",
        "z": "a707f17e5367291d",
        "name": "second-line-home",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6d32866022cd0317",
            "9c55db6c6db0bda3",
            "776a66175a11c854",
            "c12b20cf2c1520ae",
            "35ea264db9f15f9b",
            "0e0b3ccea673a1ba",
            "98944d374580fe02",
            "05a7e133906e9ca9",
            "d4c9cf552809b2e8",
            "1163a00d165fb437",
            "77c2eece35acdabc",
            "8ded6e7b8d7f625d",
            "7116c7bc43621124",
            "f66af7340c87d7de",
            "df09cb6825581861",
            "603a844dea8314bb",
            "434fc82c807acbb4"
        ],
        "x": 164,
        "y": 479,
        "w": 902,
        "h": 402
    },
    {
        "id": "45c6a7006373dadb",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Starting point",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "83a6ffa643836e87",
            "cd0ffd27aadc1ff1",
            "525d190603249cae",
            "72b7984ea35d8a21",
            "458b64fddb9c05d6",
            "96ab8a6338e4fcfc",
            "0f42da474afce82c",
            "3370481fa03529d1",
            "e401e74e5001fd4e",
            "f1cd6cda6811df0d",
            "86625c5739968525"
        ],
        "x": 84,
        "y": 699,
        "w": 1162,
        "h": 162
    },
    {
        "id": "95c11e857d45c6ae",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Ending point",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "7749d4dc3f8e7fa5",
            "2bb3a49785cacf3b",
            "fc386a9e16260470",
            "44f2e8c09ba525bd",
            "e1496d26ab368e0a",
            "0d4af74dc3740347",
            "ac3ec79e3b41827f",
            "fb2959a5122f4779",
            "6a44d416b4b28ead",
            "d8c320a906f03e95",
            "30d76989325c8687"
        ],
        "x": 84,
        "y": 879,
        "w": 1162,
        "h": 162
    },
    {
        "id": "307fb977cf47b651",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Sample general information",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "23a443593bbc53fe",
            "697ae94309963b9b",
            "ceccdeb615cdc48b",
            "35bf8991beb7e84d",
            "6836b771497a13ae",
            "bac194ac08ecd558",
            "ab8f773ee48978da",
            "0caf8dc53c166886",
            "a1f5a28590776828",
            "26384e9142c6e77d",
            "7220b5161dc33941"
        ],
        "x": 174,
        "y": 419,
        "w": 1352,
        "h": 202
    },
    {
        "id": "b41373330b156c48",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "Other Information - Horizontal Net",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "de68f6faec1d0aec",
            "d2e3027e09f33d42",
            "11d0f008572b1816",
            "88988d2b5efe7a55",
            "aab491fd4d8d370e",
            "b59379492732a989",
            "b4ae98a7ea25b34c",
            "aafeb9eb3283012d",
            "2ea39cad69e2deed",
            "ccc99ab3b0fae92f",
            "df2075943eba1d2d",
            "d066cad88c9c9fd0",
            "b8e827b49ed71ded",
            "86ae07e38e28ca04",
            "06f62ec6bb72808a",
            "2fe68d76dd3ae605"
        ],
        "x": 84,
        "y": 1379,
        "w": 1302,
        "h": 242
    },
    {
        "id": "2bcb4919f141230f",
        "type": "group",
        "z": "e988301e60e4b458",
        "name": "TO DO",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffcf3f",
            "fill-opacity": "0.71",
            "label": true
        },
        "nodes": [
            "b08415909e5dc4da",
            "ed805c7828d607cc"
        ],
        "x": 588,
        "y": 2133,
        "w": 464,
        "h": 234
    },
    {
        "id": "b383604c2ffb0c81",
        "type": "group",
        "z": "70f558eb9d60b6fc",
        "name": "update_config",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000",
            "fill": "#ffffff"
        },
        "nodes": [
            "fb9d64e1d38df424",
            "d40e81478f29c1fd",
            "5c846bbe8d829d09",
            "f7c549d688a82217",
            "c156111030f8a27d",
            "66b5dbde2d2c4978",
            "ef1499f9032e38e2",
            "9fafb0cdbf808e08",
            "ac6013d701d061e8",
            "e85a9d29696e99ff",
            "fe9d0a3dfde010c9",
            "9297c1303d0ee9c3",
            "c3aceb9c96df8b7f",
            "c60830e67ed5eb74",
            "4d6b8ff374ab04e3",
            "dab3f2c5661aa8cb",
            "a8339dd574181c71",
            "472821529981cf6d",
            "0769aafda6e1b0e7",
            "99c17632bfa31f50",
            "fe00896803b982bf",
            "9cdb5df1dba5e667",
            "5b086554d036cbde",
            "c2ad4cea7159a08e",
            "cea09d01c3bacaa7",
            "6b7022fcf0d5108a",
            "0e6be75a67384bdf",
            "4feb75276a5af405",
            "614a445455c9ebce",
            "cea7ab000f782c70",
            "0ba03d1e83cfe141",
            "7264fd4534476f08",
            "87c72e161a760ea1",
            "f6e7e0d05af5b212",
            "75ce2f8d97d68069",
            "b2c43aaf95412f25",
            "5b71ea0212473d82",
            "425e378462938661",
            "c0cd42a36e735f09",
            "17a57f860b746d9c",
            "37e59749715142c8",
            "984b3bce0eba0dc7",
            "d3b072c2497a5209",
            "6d5bce164621a153",
            "12d2c8b03fc1f242",
            "1fe601d84a9f0d02",
            "c5da8fccb31815ae",
            "689c1b47df4cd992",
            "a38d15cbeda1a02c",
            "8c7975e3abdfb950",
            "ecbe7f58e169c89c",
            "b8d71671448af045",
            "4063bd2bb8af8a95",
            "487d2cd3e69f4cec",
            "313e2908de9d681e",
            "59ade27756b2fd23",
            "bb5a3a8b59d9f674",
            "f8726f9e02382b5e",
            "7fdabca73a0a1855",
            "d82329d2ef996f64",
            "48419516ba1c0132",
            "26f5054a4321ef3d",
            "832eddbe6e69bb73",
            "6e7da51db1340b5c",
            "cfb0c8e7bf206814",
            "124b794f9816c66b",
            "481aaacc17a72f65",
            "53c6eb15fd0715c7",
            "26c65a6ec5883d4a",
            "44bfabe506b330e1",
            "55ecdb80fdc69378",
            "a9c93db64ecfa9a5",
            "a905312fb8938f6f",
            "f37f959bc9aadfc2",
            "95164b69e98df231",
            "f52f2584fc95aab6",
            "3f11847f343ced62",
            "3dce28226792d1eb",
            "1f1e48b0064cddc7",
            "ae4f1437d5284f21",
            "01518df3bebb092b",
            "f7a5b12f274aca4b",
            "7449cab14c396834",
            "a3c2c0038a541f40",
            "9b1768f64542705b",
            "fab0fd5a61ae1dcd",
            "e19f686978cee1d6",
            "e5ad38b0e760da7b",
            "a27ac2d9c1ec545f",
            "4cb46d4b9e2bf275",
            "1203080efaebcc0d",
            "6530ccdb60829ae5",
            "d382992324069c5d",
            "749f53cf1cdc61f9"
        ],
        "x": 134,
        "y": 739,
        "w": 1682,
        "h": 1002
    },
    {
        "id": "3b32c3c9506eb933",
        "type": "group",
        "z": "70f558eb9d60b6fc",
        "name": "Settings",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dc1b246968e8333a",
            "2efa775925b01a42",
            "9f562d703ae1ccbf",
            "a8b40501e4c53fed",
            "997c71e9dcf596e8",
            "6def4e7e67623547",
            "883c8bcbd98bb3c3",
            "f65e14920a75ce9f",
            "20f0245cbefbbf69",
            "4317b389f6b1b156",
            "60bc270ddfa20f0b",
            "b4a6261d50d0a9c3",
            "16496890b192797c",
            "c51927142025c58c",
            "edd15056c8b5ffc8",
            "14dab3e6993ce1dd",
            "c6633d19eafe05ef",
            "650a00ed7ac1e9b8",
            "25f6794686ddf057",
            "b7d43a5399350e4c",
            "b0669e2b7f125e7e",
            "bff53e3e25fde770"
        ],
        "x": 134,
        "y": 439,
        "w": 1512,
        "h": 282
    },
    {
        "id": "5c8dc5f5e1904bf8",
        "type": "group",
        "z": "fb15c917381dd273",
        "name": "first-visit-form",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "43f2c97055fc26be",
            "0565dc25419690e3",
            "90d9c21321164d49",
            "37fdca294eb2d1bb",
            "dcc0c648c7c57223",
            "8b05263aee3303bf",
            "2cba5a92e292ae0f",
            "9ed31adfa207532c",
            "d3a5a70db54745f0",
            "f6c532036b5081b0",
            "cae0178a8a69f787",
            "db90716e8f85a03f",
            "eac22c776f85072b",
            "469d021252c5af93",
            "840870e225e30144",
            "695a202180a55638"
        ],
        "x": 34,
        "y": 419,
        "w": 1582,
        "h": 222
    },
    {
        "id": "96bb330907da5bdb",
        "type": "group",
        "z": "fb15c917381dd273",
        "name": "First visit",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "26ef12e53ec2958f",
            "803915abe34bbd0f",
            "bfac68a2ad929ed7",
            "6b477d3de64a57fd",
            "350889dfdbf346b1",
            "955cc34dc652948a",
            "c24d1751dd739fe4",
            "d80ab3b457ba2653",
            "ddb9c4fcb2355d4c"
        ],
        "x": 34,
        "y": 59,
        "w": 992,
        "h": 142
    },
    {
        "id": "b08415909e5dc4da",
        "type": "group",
        "z": "e988301e60e4b458",
        "g": "2bcb4919f141230f",
        "name": "Other Information - Lab Culture & Demo / Test",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5b2b9e8bb104b3d7"
        ],
        "x": 614,
        "y": 2159,
        "w": 412,
        "h": 82
    },
    {
        "id": "ed805c7828d607cc",
        "type": "group",
        "z": "e988301e60e4b458",
        "g": "2bcb4919f141230f",
        "name": "Custom sample metadata",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e7fdcbc88dc9b248"
        ],
        "x": 614,
        "y": 2259,
        "w": 272,
        "h": 82
    },
    {
        "id": "90c3a646e08cf822",
        "type": "group",
        "z": "f260ed9417849607",
        "g": "0d384e544ffce204",
        "name": "Map",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "94d3348c2fa75e5f",
            "c1e21bd9819edc62",
            "09bfbcafc6b0851b",
            "db4e7fdbc5e0118f",
            "2dcb31ce415f81c3",
            "7786016a46447829",
            "89615d017cc8a981"
        ],
        "x": 114,
        "y": 339,
        "w": 692,
        "h": 222
    },
    {
        "id": "13cdc4d42826fa8f",
        "type": "group",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "Sample metadata",
        "style": {
            "label": true,
            "stroke": "#000000",
            "color": "#000000"
        },
        "nodes": [
            "aefe7bf6d57b98c3",
            "28f0e4b4a1588515",
            "d022b35e669b39d1",
            "a68c89dcf712e634",
            "98e4f743473e2afc",
            "e01f0c8cba4709ce",
            "66ef5ae4e5f9bd59",
            "dee737db75e5db3e",
            "90ef93ec881b494e",
            "ba8f3510278b9962",
            "37c9983936759ce1",
            "e710471b5191006f",
            "bbdb7ae0d167cbba",
            "fb1a569a997da8a1",
            "5c9ba1f9c301a8e8",
            "9ba81934916fbcf7",
            "1e7ae904374abcd6",
            "1bb428d37b010ce8",
            "efd114de3f33308b",
            "9cfda0ca343555fb",
            "a40cc1b5a685f25f",
            "6dffe97616090f22",
            "1c6b535a721438af",
            "37621fc63e964f84",
            "ec0610c6d1a0bee2",
            "f9eea1bd8c4f6c69",
            "d5f5eede02c25e8a",
            "d343450c61db41f7",
            "510ed87eb40bcbfd",
            "1c6fee1f472d8e7d",
            "5a9438e26f1afdc9",
            "a81c6159825755b3",
            "1e98e7c781cf01c1",
            "e909cfe8c1a643a1",
            "8cf136cc352c41ed",
            "b43c55797e299adf",
            "dcaadb963bc56149",
            "1b9f3b3d691ce0f5",
            "609369c36282f33c",
            "ec8fd890d587c626",
            "52b5b6ab8e06a73d",
            "287bb1b845a62702"
        ],
        "x": 1174,
        "y": 199,
        "w": 492,
        "h": 882
    },
    {
        "id": "217abb3abac21001",
        "type": "group",
        "z": "f260ed9417849607",
        "g": "0d384e544ffce204",
        "name": "Select DataFrame",
        "style": {
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#000000",
            "fill-opacity": "0.65"
        },
        "nodes": [
            "b53fa58bab471031",
            "e4c5ac606ec6a5db",
            "19dbf1af317825a6",
            "00cbf4bcc851b630",
            "7eb37a75f138d6c6",
            "c57055b8cd4e52fd",
            "c3bad434668c251d",
            "5299cd86668a8449",
            "730cbd2b78f5828b",
            "6a0aacfdb4ef9b75",
            "cc7a2fc1b2854427",
            "9aa0c8749b9f1030",
            "92915fe2ec89ef89",
            "3604caf66d1604b6",
            "50d076d2b05a3a6b",
            "ed47364d2ee05dd4",
            "b094db16ee10b12b",
            "31363c34d65e5218",
            "dad2dff397f06377",
            "e2d064d340c9f011",
            "8bcdfc2623a6d65c",
            "6860b65791664f1d",
            "1e962f2079c6f2e3",
            "d35ec9faaebe3bd4",
            "c12d91f312ba4389",
            "74cf38c8d80b39c7",
            "2ec82ed343666992",
            "a5da80d9e95dfdaf",
            "4c5dadcb54550cbb",
            "c0095bd3c4fd5369",
            "1e70d69aa2625e53",
            "78412c7f6dc52b8f",
            "9640278eb6d47dab",
            "452df08781166706",
            "2fe093ecfa16aa73",
            "58b70a617c6a0213",
            "d80c1ba1cd41c454"
        ],
        "x": 34,
        "y": 899,
        "w": 1752,
        "h": 829.5
    },
    {
        "id": "3a99d3e5ba59a12d",
        "type": "group",
        "z": "f260ed9417849607",
        "g": "0d384e544ffce204",
        "name": "DataTable",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0d159c22ef7345c9",
            "f9ea49beed099d6f",
            "20f133774f79275e",
            "1d8bc6ea7056cbdd",
            "4d0362defd7a3b29",
            "7e538b792d597d2e",
            "1b3f2f52d79a978f"
        ],
        "x": 974,
        "y": 599,
        "w": 692,
        "h": 262
    },
    {
        "id": "d9a24d94ae3bdddb",
        "type": "group",
        "z": "f260ed9417849607",
        "g": "0d384e544ffce204",
        "name": "Timeline",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f222f4ac9670330a",
            "716a9546a10d44d7",
            "86312631e7454d0e",
            "891e46bad4e67dc3",
            "1b8975860cf1197a",
            "b5cd94b563000b24",
            "677adf66aaeb8215"
        ],
        "x": 134,
        "y": 659,
        "w": 712,
        "h": 222
    },
    {
        "id": "758f20607e7c5eba",
        "type": "group",
        "z": "f260ed9417849607",
        "g": "0d384e544ffce204",
        "name": "InfoTable",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6dc5f707f93bece4",
            "48c4e8cea0f3babe",
            "e3eb9d72533782c1",
            "00b0d1365d72f7ca",
            "36f0f5b05b237f22",
            "6f59b7c66be79b8f",
            "1328d8289798347b"
        ],
        "x": 1714,
        "y": 599,
        "w": 692,
        "h": 262
    },
    {
        "id": "cae0178a8a69f787",
        "type": "junction",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "x": 800,
        "y": 600,
        "wires": [
            [
                "f6c532036b5081b0"
            ]
        ]
    },
    {
        "id": "db90716e8f85a03f",
        "type": "junction",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "x": 800,
        "y": 560,
        "wires": [
            [
                "d3a5a70db54745f0"
            ]
        ]
    },
    {
        "id": "43f40797e7f6bb4b",
        "type": "ui-page",
        "name": "Home",
        "ui": "1eeac55ba6b9065f",
        "path": "/home",
        "icon": "home",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 2,
        "className": "home-page",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "b5447ffdf167fa24",
        "type": "ui-page",
        "name": "Shutdown",
        "ui": "1eeac55ba6b9065f",
        "path": "/shutdown",
        "icon": "power",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 10,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "ae9894da80aed523",
        "type": "ui-group",
        "name": "Section-shutdown",
        "page": "b5447ffdf167fa24",
        "width": "12",
        "height": "12",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8c9f114bff281989",
        "type": "ui-page",
        "name": "First welcoming",
        "ui": "1eeac55ba6b9065f",
        "path": "/first-welcoming",
        "icon": "human-greeting",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 1,
        "className": "",
        "visible": "false",
        "disabled": "false"
    },
    {
        "id": "1eeac55ba6b9065f",
        "type": "ui-base",
        "name": "PlanktoScope Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "none",
        "titleBarStyle": "hidden"
    },
    {
        "id": "c0ea559892f9bd33",
        "type": "ui-theme",
        "name": "FairsSope Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#000000",
            "bgPage": "#ffffff",
            "groupBg": "#ffffff",
            "groupOutline": "#ffffff"
        },
        "sizes": {
            "pagePadding": "0px",
            "groupGap": "0px",
            "groupBorderRadius": "0px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "6a4834caf5af80e2",
        "type": "ui-page",
        "name": "Settings",
        "ui": "1eeac55ba6b9065f",
        "path": "/settings",
        "icon": "cog",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 8,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c37f9bbd954cb6ec",
        "type": "ui-page",
        "name": "Preview",
        "ui": "1eeac55ba6b9065f",
        "path": "/preview-2",
        "icon": "eye-outline",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0eba0fc7dc39a413",
        "type": "ui-group",
        "name": "header-preview-2",
        "page": "c37f9bbd954cb6ec",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "5255f6592469c975",
        "type": "ui-group",
        "name": "streaming-preview-2",
        "page": "c37f9bbd954cb6ec",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "31ed58b19db5ea9a",
        "type": "ui-group",
        "name": "settings-preview-2",
        "page": "c37f9bbd954cb6ec",
        "width": "4",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "37a234524bb1b554",
        "type": "ui-page",
        "name": "Acquisition",
        "ui": "1eeac55ba6b9065f",
        "path": "/acquisition-2",
        "icon": "camera",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "87b4aa991f82d46e",
        "type": "ui-group",
        "name": "header-acquisition-2",
        "page": "37a234524bb1b554",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cba12c582214576b",
        "type": "ui-group",
        "name": "streaming-acquisition-2",
        "page": "37a234524bb1b554",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0e652f1b8a07fae8",
        "type": "ui-group",
        "name": "settings-acquisition-2",
        "page": "37a234524bb1b554",
        "width": "4",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c392bc525769b274",
        "type": "ui-page",
        "name": "Sample",
        "ui": "1eeac55ba6b9065f",
        "path": "/sample-2",
        "icon": "file",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0b7f28fdbeca7b10",
        "type": "ui-group",
        "name": "header-sample-2",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "551ae149f5d39078",
        "type": "ui-group",
        "name": "sample-general-information",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cc5bd9fa98de3240",
        "type": "ui-group",
        "name": "starting-point-sample-2",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6207a599159ef6eb",
        "type": "ui-group",
        "name": "ending-point-sample-2",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "019885275bda6e73",
        "type": "ui-group",
        "name": "net-specificity-sample-2",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 5,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c55346437d043dfc",
        "type": "ui-group",
        "name": "other-information-horizontal-net",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 10,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "391804fc6b034024",
        "type": "ui-group",
        "name": "other-information-vertical-net",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 9,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "77017b73f99465f8",
        "type": "ui-group",
        "name": "other-information-niskin-bottle",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 8,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "69bf6fd7c08e68d1",
        "type": "ui-group",
        "name": "bottle-specificity-sample-2",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 6,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "21166fbb24dbe7f0",
        "type": "ui-group",
        "name": "other-information-lab-culture-&-demo",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 7,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "164f1a56da832d3d",
        "type": "ui-group",
        "name": "custom-sample-metadata",
        "page": "c392bc525769b274",
        "width": "12",
        "height": "1",
        "order": 11,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "5e6b607c2476b7d4",
        "type": "ui-page",
        "name": "Segmentation",
        "ui": "1eeac55ba6b9065f",
        "path": "/segmentation-2",
        "icon": "puzzle",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3b6f841875ac2355",
        "type": "ui-group",
        "name": "acquisition-table-segmentation-2",
        "page": "5e6b607c2476b7d4",
        "width": "8",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8c5ef97069f3c9a4",
        "type": "ui-group",
        "name": "acquisition-queue-segmentaiton-2",
        "page": "5e6b607c2476b7d4",
        "width": "4",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c877701142780a50",
        "type": "ui-group",
        "name": "header-segmentation-2",
        "page": "5e6b607c2476b7d4",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "fe5ac81b9b90bbe8",
        "type": "ui-group",
        "name": "header-home",
        "page": "43f40797e7f6bb4b",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "19eab4219ae8d1c5",
        "type": "ui-group",
        "name": "top-header-home",
        "page": "43f40797e7f6bb4b",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "01c285b5c14e108c",
        "type": "ui-group",
        "name": "first-line-home",
        "page": "43f40797e7f6bb4b",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "40a338c84b60c947",
        "type": "ui-group",
        "name": "second-line-home",
        "page": "43f40797e7f6bb4b",
        "width": "12",
        "height": "1",
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "662357e16a28be28",
        "type": "ui-page",
        "name": "Visualization",
        "ui": "1eeac55ba6b9065f",
        "path": "/visualization",
        "icon": "chart-line",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "5e45a13758b9c23e",
        "type": "ui-group",
        "name": "header-visualization",
        "page": "662357e16a28be28",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a973d821cae4ecce",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8a90010318b784c1",
        "type": "ui-group",
        "name": "prepare-bare",
        "page": "662357e16a28be28",
        "width": "6",
        "height": "6",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3e24a8d86ead8f60",
        "type": "ui-group",
        "name": "chart-section",
        "page": "662357e16a28be28",
        "width": "12",
        "height": "1",
        "order": 5,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3da386409fa03189",
        "type": "persistent values config",
        "name": "Setting Metadata",
        "values": [
            {
                "id": "a820b210-1122-11ef-859a-e74349e74cab",
                "name": "first-visit",
                "datatype": "bool",
                "default": true,
                "description": "First visit of the user on the PlanktoScope",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "1e747130-1d0e-11ef-8a67-d1728875f042",
                "name": "coord-format",
                "datatype": "str",
                "default": "Decimal degrees (DD)",
                "description": "Format of coordonates",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "3a134aa0-42a3-11ef-89ad-e57161842148",
                "name": "operator_name",
                "datatype": "str",
                "default": "Manu Prakash",
                "description": "Name of the operator",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "456f9de0-42a3-11ef-89ad-e57161842148",
                "name": "operator_email",
                "datatype": "str",
                "default": "manu@fairscope.com",
                "description": "Email of the operator",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "ceeda8d0-42aa-11ef-89ad-e57161842148",
                "name": "flowrate_preset",
                "datatype": "json",
                "default": "[\"0.01\",\"0.1\",\"1\",\"45\"]",
                "description": "Operator/default preset for the floware",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "4552e290-42ad-11ef-89ad-e57161842148",
                "name": "volume_preset",
                "datatype": "json",
                "default": "[\"0.01\",\"0.1\",\"1\"]",
                "description": "Operator/default preset for the volume",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "59a90800-42ad-11ef-89ad-e57161842148",
                "name": "focus_preset",
                "datatype": "json",
                "default": "[\"0.10\",\"0.50\",\"10\",\"45\"]",
                "description": "Operator/default preset for the focus",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "002259e0-42c0-11ef-89ad-e57161842148",
                "name": "delay_to_stabilized",
                "datatype": "str",
                "default": "2",
                "description": "Delay to stabilize an image",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "16042860-42c0-11ef-89ad-e57161842148",
                "name": "flowrate_in_between",
                "datatype": "str",
                "default": "2",
                "description": "TODO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "54330ee0-437d-11ef-946b-75401899c243",
                "name": "MSTS",
                "datatype": "str",
                "default": "10",
                "description": "Minimal size to segment",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "b3ccc830-4505-11ef-a4b1-fb6c49220709",
                "name": "dataset_path",
                "datatype": "str",
                "default": "",
                "description": "absolute path of the selected dataset",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "bad09130-49af-11ef-9331-19c39f8156d0",
                "name": "model_selected",
                "datatype": "str",
                "default": "",
                "description": "Selecte model of the planktoscope",
                "scope": "global",
                "storage": "default"
            }
        ]
    },
    {
        "id": "f215418ba0dbaaad",
        "type": "ui-group",
        "name": "Select Dataframe",
        "page": "662357e16a28be28",
        "width": "6",
        "height": "4",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "400ac2d25a74a84a",
        "type": "ui-group",
        "name": "header-first-visit",
        "page": "8c9f114bff281989",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f24088188d1c3619",
        "type": "ui-group",
        "name": "title-first-visit",
        "page": "8c9f114bff281989",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "53be399084e00805",
        "type": "ui-group",
        "name": "first-visit-form",
        "page": "8c9f114bff281989",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "1cdfa74c2156e48f",
        "type": "ui-group",
        "name": "settings-header",
        "page": "6a4834caf5af80e2",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0531957b8d4ecb7d",
        "type": "ui-group",
        "name": "settings",
        "page": "6a4834caf5af80e2",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "1d404f13a8a402cc",
        "type": "ui-page",
        "name": "Hardware",
        "ui": "1eeac55ba6b9065f",
        "path": "/hardware",
        "icon": "cog-box",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 9,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "66feb1d92e90139e",
        "type": "ui-group",
        "name": "header-hardware-settings",
        "page": "1d404f13a8a402cc",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a0214d355e87bc40",
        "type": "ui-group",
        "name": "hardware-settings",
        "page": "1d404f13a8a402cc",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a5e8ca3745d09cfc",
        "type": "ui-page",
        "name": "Monitoring",
        "ui": "1eeac55ba6b9065f",
        "path": "/monitoring",
        "icon": "chart-line",
        "layout": "grid",
        "theme": "c0ea559892f9bd33",
        "order": 11,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "88ffa2caedbdccbb",
        "type": "ui-group",
        "name": "header-monitoring",
        "page": "a5e8ca3745d09cfc",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "d80f187d2b6ea2f1",
        "type": "ui-group",
        "name": "left-pannel",
        "page": "a5e8ca3745d09cfc",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "176d84b611842be2",
        "type": "persistent values config",
        "name": "Hard-coded value",
        "values": [
            {
                "id": "120f5c10-49a6-11ef-9331-19c39f8156d0",
                "name": "model_list",
                "datatype": "json",
                "default": "[\"PlanktoScope v2.1\",\"PlanktoScope v2.3\",\"PlanktoScope v2.5\",\"PlanktoScope v2.6\"]",
                "description": "List of the available models",
                "scope": "global",
                "storage": "default"
            }
        ]
    },
    {
        "id": "0dfabcaf117a1a54",
        "type": "persistent values config",
        "name": "Sample Metadata",
        "values": [
            {
                "id": "8dad4db0-4e50-11ef-86a5-e9c7b2057935",
                "name": "project_name",
                "datatype": "str",
                "default": "default project name",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "90285fd0-4e50-11ef-86a5-e9c7b2057935",
                "name": "sample_id",
                "datatype": "str",
                "default": "default id",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "907912f0-4dc3-11ef-86a5-e9c7b2057935",
                "name": "starting_point_date",
                "datatype": "str",
                "default": "0000-00-00",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "aa48e480-4dc3-11ef-86a5-e9c7b2057935",
                "name": "starting_point_time",
                "datatype": "str",
                "default": "00:00",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "b5faaac0-4dc3-11ef-86a5-e9c7b2057935",
                "name": "starting_point_gps",
                "datatype": "json",
                "default": "{}",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "d66c06a0-4dc3-11ef-86a5-e9c7b2057935",
                "name": "ending_point_date",
                "datatype": "str",
                "default": "0000-00-00",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "d6b592c0-4dc3-11ef-86a5-e9c7b2057935",
                "name": "ending_point_time",
                "datatype": "str",
                "default": "00:00",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "d6e55550-4dc3-11ef-86a5-e9c7b2057935",
                "name": "ending_point_gps",
                "datatype": "json",
                "default": "{}",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "80f7c120-4e52-11ef-86a5-e9c7b2057935",
                "name": "mouth_opening_diam",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "82b15800-4e52-11ef-86a5-e9c7b2057935",
                "name": "length_of_the_net",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "8330e840-4e52-11ef-86a5-e9c7b2057935",
                "name": "mesh_size",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "836ae400-4e52-11ef-86a5-e9c7b2057935",
                "name": "volume_of_the_collector",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
                "name": "filtered_volume",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
                "name": "dillution_factor",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
                "name": "sieve_mesh_size",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "4195d170-4e5c-11ef-86a5-e9c7b2057935",
                "name": "depth_of_the_sample",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
                "name": "sample_comment",
                "datatype": "str",
                "default": "",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "21548210-4e63-11ef-86a5-e9c7b2057935",
                "name": "volume_of_the_bottle",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
                "name": "depth_min",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "978fb080-4e63-11ef-86a5-e9c7b2057935",
                "name": "depth_max",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "c0901960-4e64-11ef-86a5-e9c7b2057935",
                "name": "depth",
                "datatype": "str",
                "default": "0",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "5ecde410-4ff8-11ef-8af0-151edf01ff7c",
                "name": "sampling_gear",
                "datatype": "str",
                "default": "",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            }
        ]
    },
    {
        "id": "842103bc1301dfb9",
        "type": "persistent values config",
        "name": "Acquisition Metadata",
        "values": [
            {
                "id": "cb9cb620-4ffd-11ef-8af0-151edf01ff7c",
                "name": "acquisition_id",
                "datatype": "str",
                "default": "default",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "18a9dd30-5017-11ef-8af0-151edf01ff7c",
                "name": "acquisition_comment",
                "datatype": "str",
                "default": "default",
                "description": "TO DO",
                "scope": "global",
                "storage": "default"
            }
        ]
    },
    {
        "id": "4f4513db7c879892",
        "type": "persistent values config",
        "name": "Visualization_Graphs",
        "values": [
            {
                "id": "f2795c20-4991-11ef-9554-a70fc822169d",
                "name": "map",
                "datatype": "str",
                "default": "",
                "description": "url of the map",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "a9ee5ba0-4995-11ef-9554-a70fc822169d",
                "name": "datatable",
                "datatype": "str",
                "default": "",
                "description": "url of the datatable",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "2a3ef590-5011-11ef-8a3a-f1ecc38ac21c",
                "name": "infotable",
                "datatype": "str",
                "default": "",
                "description": "",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "b2a02b80-4999-11ef-9554-a70fc822169d",
                "name": "chartsection_charts",
                "datatype": "json",
                "default": "[]",
                "description": "array of charts url",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "98b8b560-4a6c-11ef-aec9-29e63ad077bb",
                "name": "chartsection_metadata",
                "datatype": "json",
                "default": "[]",
                "description": "object metadatas to create graphs",
                "scope": "global",
                "storage": "default"
            },
            {
                "id": "c3613240-4d89-11ef-8784-530357231a16",
                "name": "timeline",
                "datatype": "str",
                "default": "",
                "description": "url of the timeline",
                "scope": "global",
                "storage": "default"
            }
        ]
    },
    {
        "id": "3b6f8b6b4fefa74c",
        "type": "ui-group",
        "name": "Timeline",
        "page": "662357e16a28be28",
        "width": "12",
        "height": "3",
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9a59e8d02ffe1f9b",
        "type": "inject",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "Reset ALL",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 480,
        "wires": [
            [
                "401bfc3969550dac"
            ]
        ]
    },
    {
        "id": "ba2c8b29b89da0f2",
        "type": "exec",
        "z": "2d41a8ed5aea3449",
        "d": true,
        "command": "pip install -r /home/pi/Visualization-plot/requirements.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 100,
        "wires": [
            [
                "adba3d76093b90b5",
                "d1b174f3a21fd9cc"
            ],
            [],
            []
        ]
    },
    {
        "id": "adba3d76093b90b5",
        "type": "debug",
        "z": "2d41a8ed5aea3449",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1b174f3a21fd9cc",
        "type": "exec",
        "z": "2d41a8ed5aea3449",
        "d": true,
        "command": "python /home/pi/Visualization-plot/controller.py",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "6bade76e305b0cc7"
            ],
            [],
            []
        ]
    },
    {
        "id": "18557cb938c26901",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "name": "link in 52",
        "links": [
            "97790217bf3c2c85"
        ],
        "x": 125,
        "y": 100,
        "wires": [
            [
                "ba2c8b29b89da0f2"
            ]
        ]
    },
    {
        "id": "6bade76e305b0cc7",
        "type": "debug",
        "z": "2d41a8ed5aea3449",
        "name": "Controller.py OUTPUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 40,
        "wires": []
    },
    {
        "id": "6a5d78b1bdbbd9da",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "a820b210-1122-11ef-859a-e74349e74cab",
        "value": "first-visit",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 540,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4469155952188120",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "1e747130-1d0e-11ef-8a67-d1728875f042",
        "value": "coord-format",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 560,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b45db1e61d1984ce",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 570,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "caa5d00ff15afc7b",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "456f9de0-42a3-11ef-89ad-e57161842148",
        "value": "operator_email",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 560,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "28eb8fb70252bece",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "ceeda8d0-42aa-11ef-89ad-e57161842148",
        "value": "flowrate_preset",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 570,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d09d2878c5a4f034",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "4552e290-42ad-11ef-89ad-e57161842148",
        "value": "volume_preset",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 560,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8777af2465094b01",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "59a90800-42ad-11ef-89ad-e57161842148",
        "value": "focus_preset",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 560,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "71229c84c971a227",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "002259e0-42c0-11ef-89ad-e57161842148",
        "value": "delay_to_stabilized",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 980,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "50beb12661979952",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "16042860-42c0-11ef-89ad-e57161842148",
        "value": "flowrate_in_between",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 980,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "401bfc3969550dac",
        "type": "link out",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "mode": "link",
        "links": [
            "0cee35de3e61c695",
            "47793af3c5948f4c",
            "569d67a3e424fbfc",
            "59fb45c7686d6613",
            "6cc482054923eb78",
            "70bdda69151a2d51",
            "752f586529da1398",
            "be3b221fc2df4911",
            "c3daa12c86987eb9",
            "c5ca778e3eda6a52",
            "dda11a33a13eb2d5",
            "ea3ed4500ce285e0",
            "ef1abfee73208836",
            "7e1481c754e52498"
        ],
        "x": 315,
        "y": 420,
        "wires": []
    },
    {
        "id": "c3daa12c86987eb9",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 63",
        "links": [
            "401bfc3969550dac"
        ],
        "x": 405,
        "y": 220,
        "wires": [
            [
                "6a5d78b1bdbbd9da"
            ]
        ]
    },
    {
        "id": "c5ca778e3eda6a52",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 64",
        "links": [
            "401bfc3969550dac"
        ],
        "x": 405,
        "y": 280,
        "wires": [
            [
                "4469155952188120"
            ]
        ]
    },
    {
        "id": "569d67a3e424fbfc",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 65",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 340,
        "wires": [
            [
                "b45db1e61d1984ce"
            ]
        ]
    },
    {
        "id": "70bdda69151a2d51",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 66",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 400,
        "wires": [
            [
                "caa5d00ff15afc7b"
            ]
        ]
    },
    {
        "id": "6cc482054923eb78",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 67",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 460,
        "wires": [
            [
                "28eb8fb70252bece"
            ]
        ]
    },
    {
        "id": "59fb45c7686d6613",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 68",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 520,
        "wires": [
            [
                "d09d2878c5a4f034"
            ]
        ]
    },
    {
        "id": "be3b221fc2df4911",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 69",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 580,
        "wires": [
            [
                "8777af2465094b01"
            ]
        ]
    },
    {
        "id": "47793af3c5948f4c",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 70",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 805,
        "y": 220,
        "wires": [
            [
                "71229c84c971a227"
            ]
        ]
    },
    {
        "id": "ea3ed4500ce285e0",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 71",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 805,
        "y": 280,
        "wires": [
            [
                "50beb12661979952"
            ]
        ]
    },
    {
        "id": "74edaec95cafb2d9",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "54330ee0-437d-11ef-946b-75401899c243",
        "value": "MSTS",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 940,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "752f586529da1398",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 76",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 805,
        "y": 340,
        "wires": [
            [
                "74edaec95cafb2d9"
            ]
        ]
    },
    {
        "id": "f67384bd93fa9723",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "reset",
        "links": [
            "250fac5d08b457a3"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "d67a089534fb33a1"
            ]
        ]
    },
    {
        "id": "d67a089534fb33a1",
        "type": "link out",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "mode": "link",
        "links": [
            "569d67a3e424fbfc",
            "70bdda69151a2d51",
            "6cc482054923eb78",
            "59fb45c7686d6613",
            "be3b221fc2df4911",
            "47793af3c5948f4c",
            "ea3ed4500ce285e0",
            "752f586529da1398",
            "0cee35de3e61c695",
            "f51f31818cb618a7",
            "ef1abfee73208836",
            "7e1481c754e52498"
        ],
        "x": 315,
        "y": 220,
        "wires": []
    },
    {
        "id": "4782940c3eb11f57",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "176d84b611842be2",
        "valuesConfigName": "Hard-coded value",
        "valueId": "120f5c10-49a6-11ef-9331-19c39f8156d0",
        "value": "model_list",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 590,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0cee35de3e61c695",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 82",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 640,
        "wires": [
            [
                "4782940c3eb11f57"
            ]
        ]
    },
    {
        "id": "bfce8bcf0432af22",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "write",
        "msgProperty": "payload.acq_instrument",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 600,
        "y": 740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dedd2f376269d92d",
        "type": "file in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "Get Model",
        "filename": "/home/pi/PlanktoScope/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 310,
        "y": 780,
        "wires": [
            [
                "89246bd4b7b399ea"
            ]
        ]
    },
    {
        "id": "89246bd4b7b399ea",
        "type": "function",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "Get model variable",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst cellType = parsedData.acq_instrument;\n\nmsg.payload = {\n    acq_instrument: cellType\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 740,
        "wires": [
            [
                "bfce8bcf0432af22"
            ]
        ]
    },
    {
        "id": "ef1abfee73208836",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 87",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 165,
        "y": 780,
        "wires": [
            [
                "dedd2f376269d92d"
            ]
        ]
    },
    {
        "id": "aefe7bf6d57b98c3",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8dad4db0-4e50-11ef-86a5-e9c7b2057935",
        "value": "project_name",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1420,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "28f0e4b4a1588515",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "90285fd0-4e50-11ef-86a5-e9c7b2057935",
        "value": "sample_id",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1410,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d022b35e669b39d1",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "907912f0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_date",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1440,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a68c89dcf712e634",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "aa48e480-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_time",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "98e4f743473e2afc",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 127",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 240,
        "wires": [
            [
                "aefe7bf6d57b98c3"
            ]
        ]
    },
    {
        "id": "e01f0c8cba4709ce",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 128",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 280,
        "wires": [
            [
                "28f0e4b4a1588515"
            ]
        ]
    },
    {
        "id": "66ef5ae4e5f9bd59",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 129",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 320,
        "wires": [
            [
                "d022b35e669b39d1"
            ]
        ]
    },
    {
        "id": "dee737db75e5db3e",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 130",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 360,
        "wires": [
            [
                "a68c89dcf712e634"
            ]
        ]
    },
    {
        "id": "90ef93ec881b494e",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "b5faaac0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_gps",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ba8f3510278b9962",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 131",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 400,
        "wires": [
            [
                "90ef93ec881b494e"
            ]
        ]
    },
    {
        "id": "dda11a33a13eb2d5",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "reset sample metadata",
        "links": [
            "401bfc3969550dac"
        ],
        "x": 155,
        "y": 320,
        "wires": [
            [
                "872ca1ac17bbd6d5"
            ]
        ]
    },
    {
        "id": "872ca1ac17bbd6d5",
        "type": "link out",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link out 102",
        "mode": "link",
        "links": [
            "98e4f743473e2afc",
            "e01f0c8cba4709ce",
            "66ef5ae4e5f9bd59",
            "dee737db75e5db3e",
            "ba8f3510278b9962",
            "37c9983936759ce1",
            "fb1a569a997da8a1",
            "9ba81934916fbcf7",
            "1bb428d37b010ce8",
            "9cfda0ca343555fb",
            "ebb8215ea0abb97f",
            "fdc6cc58ee4c89bd",
            "6dffe97616090f22",
            "37621fc63e964f84",
            "f9eea1bd8c4f6c69",
            "d343450c61db41f7",
            "1c6fee1f472d8e7d",
            "a81c6159825755b3",
            "e909cfe8c1a643a1",
            "b43c55797e299adf",
            "1b9f3b3d691ce0f5",
            "ec8fd890d587c626",
            "287bb1b845a62702"
        ],
        "x": 315,
        "y": 320,
        "wires": []
    },
    {
        "id": "37c9983936759ce1",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 132",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 440,
        "wires": [
            [
                "e710471b5191006f"
            ]
        ]
    },
    {
        "id": "e710471b5191006f",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d66c06a0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_date",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bbdb7ae0d167cbba",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6b592c0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_time",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fb1a569a997da8a1",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 133",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 480,
        "wires": [
            [
                "bbdb7ae0d167cbba"
            ]
        ]
    },
    {
        "id": "5c9ba1f9c301a8e8",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6e55550-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_gps",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9ba81934916fbcf7",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 134",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 520,
        "wires": [
            [
                "5c9ba1f9c301a8e8"
            ]
        ]
    },
    {
        "id": "1e7ae904374abcd6",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "80f7c120-4e52-11ef-86a5-e9c7b2057935",
        "value": "mouth_opening_diam",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1440,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1bb428d37b010ce8",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 135",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 560,
        "wires": [
            [
                "1e7ae904374abcd6"
            ]
        ]
    },
    {
        "id": "efd114de3f33308b",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "82b15800-4e52-11ef-86a5-e9c7b2057935",
        "value": "length_of_the_net",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9cfda0ca343555fb",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 136",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 600,
        "wires": [
            [
                "efd114de3f33308b"
            ]
        ]
    },
    {
        "id": "a40cc1b5a685f25f",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8330e840-4e52-11ef-86a5-e9c7b2057935",
        "value": "mesh_size",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1410,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6dffe97616090f22",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 137",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 640,
        "wires": [
            [
                "a40cc1b5a685f25f"
            ]
        ]
    },
    {
        "id": "1c6b535a721438af",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "836ae400-4e52-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_collector",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1450,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "37621fc63e964f84",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 138",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 680,
        "wires": [
            [
                "1c6b535a721438af"
            ]
        ]
    },
    {
        "id": "ec0610c6d1a0bee2",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "filtered_volume",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1420,
        "y": 720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f9eea1bd8c4f6c69",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 139",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 720,
        "wires": [
            [
                "ec0610c6d1a0bee2"
            ]
        ]
    },
    {
        "id": "d5f5eede02c25e8a",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1420,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d343450c61db41f7",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 140",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 760,
        "wires": [
            [
                "d5f5eede02c25e8a"
            ]
        ]
    },
    {
        "id": "510ed87eb40bcbfd",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1c6fee1f472d8e7d",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 141",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 800,
        "wires": [
            [
                "510ed87eb40bcbfd"
            ]
        ]
    },
    {
        "id": "5a9438e26f1afdc9",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "4195d170-4e5c-11ef-86a5-e9c7b2057935",
        "value": "depth_of_the_sample",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1440,
        "y": 840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a81c6159825755b3",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 142",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 840,
        "wires": [
            [
                "5a9438e26f1afdc9"
            ]
        ]
    },
    {
        "id": "1e98e7c781cf01c1",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sample_comment",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 880,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e909cfe8c1a643a1",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 143",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 880,
        "wires": [
            [
                "1e98e7c781cf01c1"
            ]
        ]
    },
    {
        "id": "8cf136cc352c41ed",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "21548210-4e63-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_bottle",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1440,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b43c55797e299adf",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 144",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 920,
        "wires": [
            [
                "8cf136cc352c41ed"
            ]
        ]
    },
    {
        "id": "dcaadb963bc56149",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_min",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1410,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1b9f3b3d691ce0f5",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 145",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 960,
        "wires": [
            [
                "dcaadb963bc56149"
            ]
        ]
    },
    {
        "id": "609369c36282f33c",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "978fb080-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_max",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1410,
        "y": 1000,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ec8fd890d587c626",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 146",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 1000,
        "wires": [
            [
                "609369c36282f33c"
            ]
        ]
    },
    {
        "id": "52b5b6ab8e06a73d",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "c0901960-4e64-11ef-86a5-e9c7b2057935",
        "value": "depth",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1390,
        "y": 1040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "287bb1b845a62702",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "13cdc4d42826fa8f",
        "name": "link in 147",
        "links": [
            "872ca1ac17bbd6d5"
        ],
        "x": 1215,
        "y": 1040,
        "wires": [
            [
                "52b5b6ab8e06a73d"
            ]
        ]
    },
    {
        "id": "4c23fa82d4496339",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "Reset all",
        "links": [
            "9f65e288ffde4e1f",
            "bfac68a2ad929ed7"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "401bfc3969550dac"
            ]
        ]
    },
    {
        "id": "931e4aba3ed98eab",
        "type": "persistent value",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "1e747130-1d0e-11ef-8a67-d1728875f042",
        "value": "coord-format",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 590,
        "y": 700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7e1481c754e52498",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "g": "6720ea496a9e645e",
        "name": "link in 181",
        "links": [
            "401bfc3969550dac",
            "d67a089534fb33a1"
        ],
        "x": 405,
        "y": 700,
        "wires": [
            [
                "931e4aba3ed98eab"
            ]
        ]
    },
    {
        "id": "a15686c4b2da8224",
        "type": "exec",
        "z": "2d41a8ed5aea3449",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Reboot",
        "x": 1380,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "960c1b4e1358e139",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "name": "Reboot",
        "links": [
            "d4af39c15f3540b2",
            "ec1137fb63fbb85a",
            "88baa8ae55dc9fe2",
            "e7ef6ef1f343a096",
            "3f6329f6f64a5d57",
            "aefc0f84026bcf7b",
            "0d78c0467054ebc9",
            "67fcf51f541bd536"
        ],
        "x": 1285,
        "y": 60,
        "wires": [
            [
                "a15686c4b2da8224"
            ]
        ]
    },
    {
        "id": "6810166ee9e618d8",
        "type": "link in",
        "z": "2d41a8ed5aea3449",
        "name": "Shutdown",
        "links": [
            "61aef8544c46a619",
            "1ab62a6e28ceeacb",
            "f7640955206f3cad",
            "c65cad12fbc1ec52",
            "a9b6da2f2e6a066a",
            "9f4d9eacaefc1402",
            "c7beb866c037aefc",
            "757e7132e148e450"
        ],
        "x": 1285,
        "y": 120,
        "wires": [
            [
                "bde1030622d41c2d"
            ]
        ]
    },
    {
        "id": "bde1030622d41c2d",
        "type": "exec",
        "z": "2d41a8ed5aea3449",
        "command": "sudo shutdown -force",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Shutdown",
        "x": 1380,
        "y": 120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c24d1751dd739fe4",
        "type": "link out",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "3c65f10b5789b40f",
            "1204489b4eaf1bfe",
            "57fd38433196163e",
            "5144a6f881adaa91",
            "469d021252c5af93"
        ],
        "x": 355,
        "y": 160,
        "wires": []
    },
    {
        "id": "43dd46a8e4c6e486",
        "type": "ui-control",
        "z": "fb15c917381dd273",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1200,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f2332fa1b7e6397e",
        "type": "link in",
        "z": "fb15c917381dd273",
        "name": "link in 37",
        "links": [
            "5a6d4529c23e5762",
            "284e47ae04575ac7",
            "dcc0c648c7c57223",
            "d80ab3b457ba2653"
        ],
        "x": 1095,
        "y": 140,
        "wires": [
            [
                "43dd46a8e4c6e486"
            ]
        ]
    },
    {
        "id": "350889dfdbf346b1",
        "type": "ui-event",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "955cc34dc652948a",
                "ddb9c4fcb2355d4c"
            ]
        ]
    },
    {
        "id": "20208cc0649c9fba",
        "type": "ui-template",
        "z": "fb15c917381dd273",
        "g": "8fc02aa23897ae78",
        "group": "400ac2d25a74a84a",
        "page": "",
        "ui": "",
        "name": "header-first-visit",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"header-first-visit-container\">\n    <div class=\"header-first-visit-container-left\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\"\n        alt=\"PlanktoScope logo\"\n      />\n      <p>PlanktoScope GUI</p>\n    </div>\n\n    <div class=\"header-first-visit-container-right\">\n      <div class=\"header-first-visit-information-container\">\n        <p id=\"date\"></p>\n        <p>-</p>\n        <p id=\"time-first-visit\"></p>\n        <span\n          class=\"mdi mdi-account\"\n          :style=\"{ color: 'black' }\"\n        ></span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n  },\n};\n</script>\n\n<style>\n  .header-first-visit-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    border-bottom: 1px solid black;\n    display: flex;\n  }\n\n  .header-first-visit-container-left {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 1rem;\n  }\n\n  .header-first-visit-container-left img {\n    height: 2vw;\n    width: 2vw;\n    margin-right: 0.6rem;\n  }\n\n  .header-first-visit-container-left p {\n    font-size: 1vw;\n    color: black;\n    font-weight: 600;\n  }\n\n  .header-first-visit-container-right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .header-first-visit-information-container {\n    display: flex;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-first-visit-information-container p {\n    margin: 0 5px;\n    font-size: 1vw;\n    color: black;\n    font-weight: bold;\n  }\n\n  .header-first-visit-information-container span {\n    color: black;\n    font-size: 35px;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "48814ebcfe772953",
        "type": "ui-template",
        "z": "fb15c917381dd273",
        "g": "7d3251a1e9bb91bc",
        "group": "f24088188d1c3619",
        "page": "",
        "ui": "",
        "name": "title-first-visit",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"title-first-visit-container\">\n        <div class=\"title-first-visit-image-container\">\n            <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"PlanktoScope logo\">\n        </div>\n        <div class=\"title-first-visit-message-container\">\n            <p id=\"first-p-first-visit\">Welcome on the <span id=\"planktoscope\">PlanktoScope</span></p>\n            <p id=\"second-p-first-visit\">We glad to have you here for the first time</p>\n        </div>\n    </div>\n</template>\n\n<style>\n    .title-first-visit-container {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .title-first-visit-image-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-bottom: 2rem;\n    }\n\n    .title-first-visit-image-container img {\n        height: 6vw;\n        width: 6vw;\n    }\n\n    .title-first-visit-message-container {\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .title-first-visit-message-container p#first-p-first-visit {\n        font-size: 2.8vw;\n        font-weight: 50;\n        color: black;\n    }\n\n    .title-first-visit-message-container span#planktoscope {\n        font-weight: bold;\n        color: #0a6eca;\n    }\n\n    .title-first-visit-message-container p#second-p-first-visit {\n        font-weight: 1;\n        font-size: 1.5vw;\n    }\n\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "43f2c97055fc26be",
        "type": "ui-template",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "group": "53be399084e00805",
        "page": "",
        "ui": "",
        "name": "first-visit-form",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"form-container\">\n    <div class=\"first-visit-form-block-one\">\n      <p id=\"first-visit-block-one-title\">Operator</p>\n      <div class=\"first-visit-input-container\">\n        <label class=\"my-first-visit-label\">Name</label>\n        <v-text-field \n          v-model=\"operator.name\" \n          @input=\"updatePayload\"\n          clearable variant=\"outlined\" \n          density=\"compact\"\n        ></v-text-field>\n      </div>\n      <div class=\"first-visit-input-container\">\n        <label class=\"my-first-visit-label\">Email</label>\n        <v-text-field \n          v-model=\"operator.email\"\n          @input=\"updatePayload\"\n          clearable variant=\"outlined\"\n          density=\"compact\"\n        ></v-text-field>\n      </div>\n    </div>\n\n    <div class=\"first-visit-form-block-two\">\n      <p id=\"first-visit-block-two-title\">Hardware</p>\n      <div class=\"first-visit-input-container\">\n        <label class=\"my-first-visit-label\">Model</label>\n        <v-select\n          label=\"Select your model\"\n          v-model=\"model_selected\"\n          @input=\"updatePayload\"\n          :items=\"model_list\"\n          variant=\"outlined\"\n          density=\"compact\"\n        ></v-select>\n      </div>\n    </div>\n\n    <div class=\"button-container\">\n      <v-btn\n        color=\"#0a6eca\"\n        variant=\"flat\"\n        class=\"first-visit-custom-button\"\n        @click=\"validateForm\"\n      >\n        Validate\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n        first_visit: true,\n        model_list: [],\n        model_selected: \"\",\n        operator: {\n            name: '',\n            email: '',\n        }\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n          \n          if (payload.first_visit) {\n            this.first_visit = payload.first_visit;\n          }\n          if (payload.model_list) {\n            this.model_list = payload.model_list;\n          }\n          if (payload.model_selected) {\n            this.model_selected = payload.model_selected;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    updatePayload() {\n        const payload = {\n            operator: this.operator,\n            hardware: this.model_selected,\n        };\n        \n        this.send({ payload });\n    },\n    validateForm() {\n      if (!this.operator.name || !this.operator.email || !this.model_selected) {\n        this.send({payload : \"test\"})\n        return;\n      }\n\n      this.send({\n        payload: {\n          operator: this.operator,\n          hardware: this.model_selected,\n          firstVisit: this.first_visit\n        }\n      });\n    }\n  },\n}\n</script>\n\n<style scoped>\n.first-visit-custom-button {\n  border-radius: 8px;\n  font-size: 1vw;\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.first-visit-form-block-one, .first-visit-form-block-two {\n  width: 80%;\n  max-width: 600px;\n  padding: 1rem;\n  border: 1px solid black;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n}\n\np#first-visit-block-one-title, p#first-visit-block-two-title {\n  font-size: 1.5vw;\n  margin-bottom: 1rem;\n}\n\n.first-visit-input-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0rem 0rem 1rem 1.4rem;\n}\n\n.my-first-visit-label {\n  font-size: 1.2vw;\n  min-width: 10rem;\n}\n\n.button-container {\n  display: flex;\n  justify-content: flex-end;\n  width: 80%;\n  max-width: 600px;\n}\n\n.v-input__details {\n  display: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "0565dc25419690e3",
                "cae0178a8a69f787",
                "db90716e8f85a03f"
            ]
        ]
    },
    {
        "id": "90d9c21321164d49",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "a820b210-1122-11ef-859a-e74349e74cab",
        "value": "first-visit",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1220,
        "y": 460,
        "wires": [
            [
                "8b05263aee3303bf"
            ],
            []
        ]
    },
    {
        "id": "0565dc25419690e3",
        "type": "switch",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "If \"validate\"",
        "property": "payload.firstVisit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "37fdca294eb2d1bb",
                "9ed31adfa207532c"
            ]
        ]
    },
    {
        "id": "37fdca294eb2d1bb",
        "type": "change",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 460,
        "wires": [
            [
                "90d9c21321164d49"
            ]
        ]
    },
    {
        "id": "dcc0c648c7c57223",
        "type": "link out",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "link out 65",
        "mode": "link",
        "links": [
            "f2332fa1b7e6397e"
        ],
        "x": 1575,
        "y": 460,
        "wires": []
    },
    {
        "id": "8b05263aee3303bf",
        "type": "change",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"page\": \"Home\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 460,
        "wires": [
            [
                "dcc0c648c7c57223"
            ]
        ]
    },
    {
        "id": "eac22c776f85072b",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "176d84b611842be2",
        "valuesConfigName": "Hard-coded value",
        "valueId": "120f5c10-49a6-11ef-9331-19c39f8156d0",
        "value": "model_list",
        "command": "read",
        "msgProperty": "payload.model_list",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 330,
        "y": 460,
        "wires": [
            [
                "43f2c97055fc26be"
            ],
            []
        ]
    },
    {
        "id": "469d021252c5af93",
        "type": "link in",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "link in 80",
        "links": [
            "c24d1751dd739fe4"
        ],
        "x": 75,
        "y": 520,
        "wires": [
            [
                "eac22c776f85072b",
                "840870e225e30144",
                "695a202180a55638"
            ]
        ]
    },
    {
        "id": "2cba5a92e292ae0f",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1280,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9ed31adfa207532c",
        "type": "function",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "Set payload == model",
        "func": "const buffer = msg.payload.hardware;\n\nmsg.payload = buffer;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "2cba5a92e292ae0f"
            ]
        ]
    },
    {
        "id": "840870e225e30144",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "payload.model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "43f2c97055fc26be"
            ],
            []
        ]
    },
    {
        "id": "d3a5a70db54745f0",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "write",
        "msgProperty": "payload.operator.name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1280,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f6c532036b5081b0",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "456f9de0-42a3-11ef-89ad-e57161842148",
        "value": "operator_email",
        "command": "write",
        "msgProperty": "payload.operator.email",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1280,
        "y": 600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "695a202180a55638",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "5c8dc5f5e1904bf8",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "a820b210-1122-11ef-859a-e74349e74cab",
        "value": "first-visit",
        "command": "read",
        "msgProperty": "payload.first_visit",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 320,
        "y": 580,
        "wires": [
            [
                "43f2c97055fc26be"
            ],
            []
        ]
    },
    {
        "id": "955cc34dc652948a",
        "type": "delay",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "c24d1751dd739fe4"
            ]
        ]
    },
    {
        "id": "26ef12e53ec2958f",
        "type": "persistent value",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "a820b210-1122-11ef-859a-e74349e74cab",
        "value": "first-visit",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 440,
        "y": 120,
        "wires": [
            [
                "803915abe34bbd0f"
            ],
            []
        ]
    },
    {
        "id": "803915abe34bbd0f",
        "type": "switch",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "First visit ? ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 120,
        "wires": [
            [
                "bfac68a2ad929ed7"
            ],
            [
                "6b477d3de64a57fd"
            ]
        ]
    },
    {
        "id": "bfac68a2ad929ed7",
        "type": "link out",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "link out 109",
        "mode": "link",
        "links": [
            "4c23fa82d4496339"
        ],
        "x": 735,
        "y": 100,
        "wires": []
    },
    {
        "id": "6b477d3de64a57fd",
        "type": "change",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "Set paylaod to go Home",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"page\": \"Home\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "d80ab3b457ba2653"
            ]
        ]
    },
    {
        "id": "d80ab3b457ba2653",
        "type": "link out",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "link out 110",
        "mode": "link",
        "links": [
            "f2332fa1b7e6397e"
        ],
        "x": 985,
        "y": 140,
        "wires": []
    },
    {
        "id": "ddb9c4fcb2355d4c",
        "type": "switch",
        "z": "fb15c917381dd273",
        "g": "96bb330907da5bdb",
        "name": "",
        "property": "payload.page.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "First welcoming",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "26ef12e53ec2958f"
            ]
        ]
    },
    {
        "id": "0007fbbf1742c6e8",
        "type": "ui-control",
        "z": "a707f17e5367291d",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 180,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2cc4d8075a852a14",
        "type": "link in",
        "z": "a707f17e5367291d",
        "name": "link in 26",
        "links": [
            "8031f131ae7c416c",
            "8f7050414b8d9323",
            "b4e7ea1a2671a24b",
            "6f565fc38299fa2a",
            "0e78c20a20947374",
            "7150e1ace23a0ffe",
            "9be9795ec75136f3",
            "e83cc6473d7c6e2e"
        ],
        "x": 75,
        "y": 40,
        "wires": [
            [
                "0007fbbf1742c6e8"
            ]
        ]
    },
    {
        "id": "c356e55229da7519",
        "type": "ui-template",
        "z": "a707f17e5367291d",
        "g": "3bb6cedcc43ce23c",
        "group": "fe5ac81b9b90bbe8",
        "page": "",
        "ui": "",
        "name": "header-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"header-home-container\">\n        <div class=\"header-home-image-container\">\n            <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"PlanktoScope logo\">\n        </div>\n        <div class=\"header-home-message-container\">\n            <p>Welcome on the <span id=\"planktoscope\">PlanktoScope GUI</span></p>\n        </div>\n    </div>\n</template>\n\n<style>\n    .header-home-container {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .header-home-image-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .header-home-image-container img {\n        height: 5.5vw;\n        width: 5.5vw;\n        margin-right: 20px;\n    }\n\n    .header-home-message-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .header-home-message-container p {\n        font-size: 2.5vw;\n        font-weight: 100;\n        color: black;\n    }\n\n    .header-home-message-container span#version {\n        color: #076eac;\n    }\n\n    .header-home-message-container span#planktoscope {\n        font-weight: bold;\n        /* color: #076eac; */\n    }\n\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ed5c88bb575ee514",
        "type": "ui-template",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "group": "19eab4219ae8d1c5",
        "page": "",
        "ui": "",
        "name": "top-header-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-container\">\n    <div class=\"header-top-home-container-left\" @click=\"navigateToHome\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\"\n        alt=\"PlanktoScope logo\"\n      />\n      <p>PlanktoScope GUI</p>\n    </div>\n\n    <div class=\"header-top-home-container-right\">\n      <div class=\"header-top-home-information-container\">\n        <p id=\"date\"></p>\n        <p>-</p>\n        <p id=\"time-first-visit\"></p>\n        <span\n          class=\"mdi mdi-account-circle\"\n          @click=\"menu = true\"\n        ></span>\n      </div>\n    </div>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list-item>\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account-circle</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Gallery', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n    navigateToHome() {\n      this.send(\"Home\");\n    }\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-container {\n    position: fixed !important;\n    top: 0 !important;\n    left: 0 !important;\n    width: 100% !important;\n    border-bottom: 1px solid black !important;\n    display: flex !important;\n  }\n\n  .header-top-home-container-left {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 1rem;\n    cursor: pointer;\n  }\n\n  .header-top-home-container-left img {\n    height: 2vw;\n    width: 2vw;\n    margin-right: 0.6rem;\n  }\n\n  .header-top-home-container-left p {\n    font-size: 1vw;\n    color: black;\n    font-weight: 600;\n  }\n\n  .header-top-home-container-right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: #066fac;\n    font-size: 25px;\n    padding: 10px 5px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "3f1969eeced7c689"
            ]
        ]
    },
    {
        "id": "1e5f2afc41a16b02",
        "type": "ui-template",
        "z": "a707f17e5367291d",
        "g": "d6362eced379ae80",
        "group": "01c285b5c14e108c",
        "page": "",
        "ui": "",
        "name": "first-line-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"first-line-container\">\n        <div id=\"size\" class=\"item1\" @click=\"handleClick(1)\">\n            <section class=\"first-line-section-middle\">\n                <span class=\"mdi mdi-eye\"></span>\n                <p id=\"first-p\">Launch the preview</p>\n                <p id=\"second-p\">Check if you can see anything</p>\n            </section>\n        </div>\n        <div id=\"size\" class=\"item2\" @click=\"handleClick(2)\">\n            <section class=\"first-line-section-corner\">\n                <span class=\"mdi mdi-open-in-new\"></span>\n            </section>\n            <section class=\"first-line-section-middle\">\n                <span class=\"mdi mdi mdi-image\"></span>\n                <p id=\"first-p\">Gallery</p>\n                <p id=\"second-p\">Check out the collected images and objects.</p>\n            </section>\n        </div>\n        <div id=\"size\" class=\"item3\" @click=\"handleClick(3)\">\n            <section class=\"first-line-section-middle\">\n                <span class=\"mdi mdi mdi-bullseye\"></span>\n                <p id=\"first-p\">Calibration</p>\n                <p id=\"second-p\">Adjust your settings to ensure accurate measurements.</p>\n            </section>\n        </div>\n        <div class=\"item4\" @click=\"handleClick(4)\">\n            <section class=\"first-line-section-corner\">\n                <span class=\"mdi mdi-open-in-new\"></span>\n            </section>\n            <section class=\"first-line-section-middle-v2\">\n                <span class=\"mdi mdi-text-box-search-outline\"></span>\n                <section class=\"first-line-section-middle-text\">\n                    <p id=\"first-p\">Learn how to use PlanktoScope</p>\n                    <p id=\"second-p\">Find detailed instructions here.</p>\n                </section>\n            </section>\n        </div>\n        <div class=\"item5\" @click=\"handleClick(5)\">\n            <section class=\"first-line-section-middle-v2\">\n                <span class=\"mdi mdi mdi-chart-line\"></span>\n                <section class=\"first-line-section-middle-text\">\n                    <p id=\"first-p\">Monitoring</p>\n                    <p id=\"second-p\">Keep track of system performance.</p>\n                </section>\n            </section>\n        </div>\n        <div class=\"item6\" @click=\"handleClick(6)\">\n            <section class=\"first-line-section-corner\">\n                <span class=\"mdi mdi-open-in-new\"></span>\n            </section>\n            <section class=\"first-line-section-middle-v2\">\n                <span class=\"mdi mdi mdi-message-alert\"></span>\n                <section class=\"first-line-section-middle-text\">\n                    <p id=\"first-p\">Submit a feedback</p>\n                    <p id=\"second-p\">We'd love to hear your thoughts and improve!</p>\n                </section>\n            </section>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        methods: {\n            handleClick(itemNumber) {\n                const currentUrl = new URL(window.location.href);\n                const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n                if (itemNumber == 2) {\n                    const relativePath = '/ps/data/browse/files/';\n                    const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n                    open(fullUrl.href, '_blank');\n                } else if (itemNumber == 4) {\n                    open(\"http://192.168.1.32/ps/docs/\", '_blank');\n                } else if (itemNumber == 6) {\n                    open(\"https://www.fairscope.com/helpdesk\", '_blank');\n                } else {\n                    this.send({payload: itemNumber});\n                }\n            }\n        }\n    };\n</script>\n\n<style>\n    .first-line-container {\n        display: grid;\n        margin: 0% 12% 1% 12%;\n        grid-template-columns: 2fr 2fr 2fr; \n        grid-template-rows: 2fr 1fr;\n        gap: 25px;\n    }\n\n    .first-line-section-corner {\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    .first-line-section-corner span {\n        position: absolute;\n        color: gray;\n        font-size: 1.5vw;\n        margin-right: 5px;\n    }\n\n    .first-line-section-middle {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n    }\n\n    .first-line-section-middle span.mdi {\n        color: #076eac;\n        font-size: 7vw;\n        margin: 2vw 5px 18px 0px;\n        line-height: 0.6;\n    }\n\n    .first-line-section-middle-v2 {\n        display: flex;\n        justify-content: left;\n        align-items: center;\n    }\n\n    .first-line-section-middle-v2 span.mdi {\n        color: #076eac;\n        font-size: 3vw;\n        margin: 1.5vw 10px 25px 10px;\n        line-height: 0.4;\n    }\n\n    .first-line-section-middle-text {\n        display: flex;\n        flex-direction: column;\n        margin: 1.5vw 0 0 0;\n    }\n\n    .first-line-container div {\n        border: 1px solid #E0E0E0;\n        border-radius: 5px;\n        cursor: pointer;\n    }\n\n    .first-line-container div:hover {\n        background :#f6f6f6;\n    }\n\n    .first-line-container div#size {\n        height: 12vw;\n    }\n\n    .item1 {\n        grid-column: 1 / 2;\n        grid-row: 1 / span 2;\n    }\n\n    .item1 p#first-p {\n        font-weight: bold;\n        font-size: 1.5vw;\n        margin-bottom: 10px;\n    }\n\n    .item1 p#second-p {\n        font-size: 0.7vw;\n    }\n\n    .item2 {\n        grid-column: 2 / 3;\n        grid-row: 1 / span 2;\n    }\n\n    .item2 p#first-p {\n        font-weight: bold;\n        font-size: 1.5vw;\n        margin-bottom: 10px;\n    }\n\n    .item2 p#second-p {\n        font-size: 0.7vw;\n    }\n\n    .item3 {\n        grid-column: 3 / 3;\n        grid-row: 1 / span 2;\n    }\n    \n    .item3 p#first-p {\n        font-weight: bold;\n        font-size: 1.5vw;\n        margin-bottom: 10px;\n    }\n    \n    .item3 p#second-p {\n        font-size: 0.7vw;\n    }\n\n    .item4 {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n    }\n\n    .item4 p#first-p {\n        font-weight: bold;\n        font-size: 0.9vw;\n        margin-bottom: 10px;\n    }\n\n    .item4 p#second-p {\n        font-size: 0.7vw;\n        margin-bottom: 25px;\n    }\n\n    .item5 {\n        grid-column: 2 / 3; \n        grid-row: 2 / 3;\n    }\n\n    .item5 p#first-p {\n        font-weight: bold;\n        font-size: 0.9vw;\n        margin-bottom: 10px;\n    }\n\n    .item5 p#second-p {\n        font-size: 0.7vw;\n        margin-bottom: 25px;\n    }\n\n    .item6 {\n        grid-column: 3 / 4; \n        grid-row: 2 / 3;\n    }\n    \n    .item6 p#first-p {\n        font-weight: bold;\n        font-size: 0.9vw;\n        margin-bottom: 10px;\n    }\n    \n    .item6 p#second-p {\n        font-size: 0.7vw;\n        margin-bottom: 25px;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "77b032808eca46e4"
            ]
        ]
    },
    {
        "id": "6d32866022cd0317",
        "type": "ui-template",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "group": "40a338c84b60c947",
        "page": "",
        "ui": "",
        "name": "second-line-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div class=\"grid-container\">\n        <div class=\"first-line-container-2\">\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-desktop-classic\"></span>\n                    <p>Model of your machine</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ model }}</p>\n                </section>\n            </div>\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-numeric\"></span>\n                    <p>Serial number</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ serialNumber || \"Work in progress - Wainting back\" }}</p>\n                </section>\n            </div>\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-robot\"></span>\n                    <p>Name of your machine</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ machineName }}</p>\n                </section>\n            </div>\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-code-tags-check\"></span>\n                    <p>Software version</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ softwareVersion }}</p>\n                </section>\n            </div>\n        </div>\n        <div class=\"second-line-container-2\">\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-database\"></span>\n                    <p>Storage</p>\n                </section>\n                <section class=\"bottom-section bottom-section-slider\">\n                    <v-progress-linear\n                        v-model=\"storage\"\n                        height=\"20\"\n                        max=\"200\"\n                        ref=\"progressBar\"\n                    >\n                        <template v-slot:default=\"{ value }\">\n                            <strong>{{ storage }} Gb / {{ maxStorage }} Gb </strong>\n                        </template>\n                    </v-progress-linear>\n                </section>\n            </div>\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-file-image\"></span>\n                    <p>Number of image acquired</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ numberOfImage || \"Work in progress - Wainting back\" }}</p>\n                </section>\n            </div>\n            <div class=\"grid-item\">\n                <section class=\"top-section\">\n                    <span class=\"mdi mdi-select-all\"></span>\n                    <p>Number of objects segmented</p>\n                </section>\n                <section class=\"bottom-section\">\n                    <p>{{ numberOfObject || \"Work in progress - Wainting back\" }}</p>\n                </section>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['msg'],\n    data() {\n        return {\n            model: null,\n            serialNumber: null,\n            machineName: null,\n            softwareVersion: null,\n            storage: 0,\n            maxStorage: 0,\n            numberOfImage: null,\n            numberOfObject: null,\n        };\n    },\n    watch: {\n        msg: {\n            handler(newVal) {\n                if (newVal.payload) {\n                    const { payload } = newVal;\n                    if (payload.model_selected !== undefined) {\n                        this.model = payload.model_selected;\n                    }\n                    if (payload.serialNumber !== undefined) {\n                        this.serialNumber = payload.serialNumber;\n                    }\n                    if (payload.machineName !== undefined) {\n                        this.machineName = payload.machineName;\n                    }\n                    if (payload.version !== undefined) {\n                        this.softwareVersion = payload.version;\n                    }\n                    if (payload.storage !== undefined) {\n                        this.storage = payload.storage;\n                        this.updateProgressColor(payload.storage);\n                    }\n                    if (payload.maxStorage !== undefined) {\n                        this.maxStorage = payload.maxStorage;\n                    }\n                    if (payload.acquiredImage !== undefined) {\n                        this.numberOfImage = payload.acquiredImage;\n                    }\n                    if (payload.segmentedObjects !== undefined) {\n                        this.numberOfObject = payload.segmentedObjects;\n                    }\n                }\n            },\n            deep: true,\n            immediate: true\n        }\n    },\n    methods: {\n        updateProgressColor(value) {\n            const progressBar = this.$refs.progressBar.$el.querySelector('.v-progress-linear__determinate');\n            \n            if (progressBar) {\n                const greenThreshold = this.maxStorage * 0.25;  // 25% de maxStorage\n                const yellowThreshold = this.maxStorage * 0.50; // 50% de maxStorage\n                const orangeThreshold = this.maxStorage * 0.75; // 75% de maxStorage\n                \n                let color = 'green';\n\n                if (value <= greenThreshold) {\n                    color = 'green';\n                } else if (value <= yellowThreshold) {\n                    color = 'yellow';\n                } else if (value <= orangeThreshold) {\n                    color = 'orange';\n                } else if (value > orangeThreshold) {\n                    color = 'red';\n                }\n\n                progressBar.style.backgroundColor = color;\n            }\n        }\n    }\n};\n</script>\n\n<style>\n    .grid-container {\n        display: flex;\n        flex-direction: column;\n        gap: 25px;\n        margin: 0% 12%;\n    }\n\n    .first-line-container-2,\n    .second-line-container-2 {\n        display: grid;\n        gap: 25px;\n    }\n\n    .first-line-container-2 {\n        grid-template-columns: repeat(4, 1fr);\n    }\n\n    .second-line-container-2 {\n        grid-template-columns: repeat(3, 1fr);\n    }\n\n    .grid-item {\n        border: 1px solid rgba(10, 110, 202, 0.3);\n        border-radius: 5px;\n        background-color: rgba(48, 164, 220, 0.1);\n        height: 5vw;\n    }\n\n    .top-section {\n        display: flex;\n        align-items: center;\n    }\n\n    .top-section span {\n        color: #076eac;\n        font-size: 2vw;\n        margin: 0 15px 0 7px;\n    }\n\n    .top-section p {\n        font-size: 0.9vw;\n        font-weight: bold;\n    }\n\n    .bottom-section p {\n        font-size: 0.9vw;\n        margin-left: 7px;\n    }\n\n    .bottom-section-slider {\n        padding: 0rem 1rem;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 600,
        "wires": [
            [
                "9c55db6c6db0bda3"
            ]
        ]
    },
    {
        "id": "77b032808eca46e4",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "d6362eced379ae80",
        "name": "Prepare payload to navigate",
        "func": "var itemNumber = msg.payload;\n\nif (itemNumber == 1) {\n    msg.payload = {\"page\":\"Preview\"}\n} else if (itemNumber == 3) {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (itemNumber == 5) {\n    msg.payload = {\"page\":\"Monitoring\"}\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "0e78c20a20947374"
            ]
        ]
    },
    {
        "id": "0e78c20a20947374",
        "type": "link out",
        "z": "a707f17e5367291d",
        "g": "d6362eced379ae80",
        "name": "link out 61",
        "mode": "link",
        "links": [
            "2cc4d8075a852a14"
        ],
        "x": 1155,
        "y": 420,
        "wires": []
    },
    {
        "id": "77c2eece35acdabc",
        "type": "inject",
        "z": "a707f17e5367291d",
        "d": true,
        "g": "0ba7fbaa34399b50",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"model\":\"PlanktoScope v2.6\",\"serialNumber\":\"U178\",\"version\":\"PlanktoScope OS v2024.1.0\",\"acquiredImage\":\"12 580\",\"segmentedObjects\":\"329 000\",\"storage\":45}",
        "payloadType": "json",
        "x": 950,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "9c55db6c6db0bda3",
        "type": "debug",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 600,
        "wires": []
    },
    {
        "id": "3f1969eeced7c689",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "c11d292985db0bd7"
            ]
        ]
    },
    {
        "id": "7150e1ace23a0ffe",
        "type": "link out",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "link out 67",
        "mode": "link",
        "links": [
            "2cc4d8075a852a14"
        ],
        "x": 1485,
        "y": 140,
        "wires": []
    },
    {
        "id": "603a844dea8314bb",
        "type": "file in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "",
        "filename": "/usr/share/planktoscope/installer-versioning.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "df09cb6825581861"
            ]
        ]
    },
    {
        "id": "35ea264db9f15f9b",
        "type": "http request",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Get storage",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/admin/prometheus/api/v1/query?query=100%20-%20((node_filesystem_avail_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D%20*%20100)%20%2F%20node_filesystem_size_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D)",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "0e0b3ccea673a1ba"
            ]
        ]
    },
    {
        "id": "8ded6e7b8d7f625d",
        "type": "http request",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Get MaxSpace",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://92.167.184.163/admin/prometheus/api/v1/query?query=node_filesystem_size_bytes%7Bmountpoint%3D%22%2F%22%2Cfstype!%3D%22rootfs%22%7D",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 720,
        "wires": [
            [
                "7116c7bc43621124"
            ]
        ]
    },
    {
        "id": "776a66175a11c854",
        "type": "file in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "",
        "filename": "/var/lib/planktoscope/machine-name",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "c12b20cf2c1520ae"
            ]
        ]
    },
    {
        "id": "c12b20cf2c1520ae",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Set payload.machineName",
        "func": "const machineName = msg.payload;\n\nmsg.payload = {\n    machineName: machineName\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "6d32866022cd0317"
            ]
        ]
    },
    {
        "id": "0e0b3ccea673a1ba",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Set payload.storage",
        "func": "const parsedData = JSON.parse(msg.payload);\n\n// Extraire la valeur souhaitée\nconst value = parsedData.data.result[0].value[1];\n\n// Arrondir la valeur à une décimale\nconst roundedValue = Math.round(value * 10) / 10;\n\n// Créer un nouveau payload avec la valeur arrondie\nmsg.payload = {\n    storage: roundedValue\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 680,
        "wires": [
            [
                "6d32866022cd0317"
            ]
        ]
    },
    {
        "id": "98944d374580fe02",
        "type": "persistent value",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "payload.model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 440,
        "y": 520,
        "wires": [
            [
                "6d32866022cd0317"
            ],
            []
        ]
    },
    {
        "id": "05a7e133906e9ca9",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "link in 88",
        "links": [
            "913867d97ba2a2ca",
            "2b081acaeb1f304d",
            "cfa47830686d6be3",
            "064155ee1c670211"
        ],
        "x": 235,
        "y": 520,
        "wires": [
            [
                "98944d374580fe02"
            ]
        ]
    },
    {
        "id": "d4c9cf552809b2e8",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "link in 89",
        "links": [
            "913867d97ba2a2ca",
            "2b081acaeb1f304d",
            "cfa47830686d6be3",
            "064155ee1c670211"
        ],
        "x": 235,
        "y": 560,
        "wires": [
            [
                "776a66175a11c854"
            ]
        ]
    },
    {
        "id": "1163a00d165fb437",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "link in 90",
        "links": [
            "913867d97ba2a2ca",
            "2b081acaeb1f304d",
            "cfa47830686d6be3",
            "064155ee1c670211"
        ],
        "x": 235,
        "y": 640,
        "wires": [
            [
                "35ea264db9f15f9b"
            ]
        ]
    },
    {
        "id": "71876f75ae3e4ba6",
        "type": "ui-event",
        "z": "a707f17e5367291d",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "2b081acaeb1f304d"
            ]
        ]
    },
    {
        "id": "2b081acaeb1f304d",
        "type": "link out",
        "z": "a707f17e5367291d",
        "name": "link out 93",
        "mode": "link",
        "links": [
            "05a7e133906e9ca9",
            "d4c9cf552809b2e8",
            "1163a00d165fb437",
            "f6f9ae031743a71a",
            "f66af7340c87d7de",
            "434fc82c807acbb4",
            "b5fb72779a3a06ab"
        ],
        "x": 255,
        "y": 100,
        "wires": []
    },
    {
        "id": "7116c7bc43621124",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Set payload.maxStorage",
        "func": "// Parse the JSON payload\nconst parsedData = JSON.parse(msg.payload);\n\n// Extract the desired value (in bytes)\nconst valueInBytes = parsedData.data.result[0].value[1];\n\n// Convert the value to a float\nconst numericValueInBytes = parseFloat(valueInBytes);\n\n// Convert bytes to gigabytes\nconst valueInGB = numericValueInBytes / (1024 * 1024 * 1024);\n\n// Round the value to one decimal place\nconst roundedValueInGB = Math.round(valueInGB * 10) / 10;\n\n// Create a new payload with the rounded value in GB\nmsg.payload = {\n    maxStorage: roundedValueInGB\n};\n\n// Return the updated msg object\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 760,
        "wires": [
            [
                "6d32866022cd0317"
            ]
        ]
    },
    {
        "id": "f66af7340c87d7de",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "link in 97",
        "links": [
            "913867d97ba2a2ca",
            "2b081acaeb1f304d",
            "cfa47830686d6be3",
            "064155ee1c670211"
        ],
        "x": 235,
        "y": 720,
        "wires": [
            [
                "8ded6e7b8d7f625d"
            ]
        ]
    },
    {
        "id": "df09cb6825581861",
        "type": "function",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "Set payload.version",
        "func": "// Exemple de msg.payload tel qu'il est reçu\nconst rawPayload = msg.payload;\n\n// Diviser le texte en lignes\nconst lines = rawPayload.split('\\n');\n\n// Initialiser une variable pour stocker la version\nlet version = null;\n\n// Parcourir chaque ligne pour trouver celle avec la clé 'version'\nfor (const line of lines) {\n    // Vérifier si la ligne contient la clé 'version'\n    if (line.trim().startsWith('version:')) {\n        // Extraire la valeur après 'version:'\n        version = line.split(':')[1].trim().replace(/\"/g, ''); // Supprimer les guillemets éventuels\n        break;\n    }\n}\n\n// Créer le payload avec la version extraite\nmsg.payload = {\n    version: version\n};\n\n// Retourner le message avec le nouveau payload\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "6d32866022cd0317"
            ]
        ]
    },
    {
        "id": "434fc82c807acbb4",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "0ba7fbaa34399b50",
        "name": "link in 148",
        "links": [
            "913867d97ba2a2ca",
            "2b081acaeb1f304d",
            "cfa47830686d6be3",
            "064155ee1c670211"
        ],
        "x": 205,
        "y": 800,
        "wires": [
            [
                "603a844dea8314bb"
            ]
        ]
    },
    {
        "id": "a9f01d97a7e9cb66",
        "type": "persistent value",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.profilName",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 520,
        "y": 180,
        "wires": [
            [
                "ed5c88bb575ee514"
            ],
            []
        ]
    },
    {
        "id": "b5fb72779a3a06ab",
        "type": "link in",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "link in 156",
        "links": [
            "2b081acaeb1f304d"
        ],
        "x": 325,
        "y": 180,
        "wires": [
            [
                "a9f01d97a7e9cb66"
            ]
        ]
    },
    {
        "id": "4b83892743cbc177",
        "type": "switch",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1380,
        "y": 200,
        "wires": [
            [
                "d4af39c15f3540b2"
            ],
            [
                "61aef8544c46a619"
            ]
        ]
    },
    {
        "id": "d4af39c15f3540b2",
        "type": "link out",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "link out 112",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1485,
        "y": 180,
        "wires": []
    },
    {
        "id": "61aef8544c46a619",
        "type": "link out",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "link out 113",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1485,
        "y": 220,
        "wires": []
    },
    {
        "id": "c11d292985db0bd7",
        "type": "switch",
        "z": "a707f17e5367291d",
        "g": "1daf5cfc8e29e5ad",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "7150e1ace23a0ffe"
            ],
            [
                "4b83892743cbc177"
            ]
        ]
    },
    {
        "id": "7c15a6aca3b44d2e",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "group": "0eba0fc7dc39a413",
        "page": "",
        "ui": "",
        "name": "Title",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"center-container\" @click=\"navigateToHome\">\n        <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"PlanktoScope Logo\" class=\"center-image-1\">\n        <h3>PlanktoScope GUI</h3>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        navigateToHome() {\n            this.send(\"Clicked!\");\n        }\n    }\n}\n</script>\n\n<style scoped>\n    h3 {\n        font-size: 1vw;\n    }\n\n    .center-container {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .center-image-1 {\n        margin-right: 25px;\n        max-width: 40px;\n        line-height: 0px;\n    }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "b86113b166fecbb9"
            ]
        ]
    },
    {
        "id": "f8467f680ae4f627",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "group": "0eba0fc7dc39a413",
        "page": "",
        "ui": "",
        "name": "Step bar",
        "order": 2,
        "width": "7",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"1\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n          @click=\"stepClicked(1)\"\n          class=\"selected-step\"\n        >\n          Preview\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n          @click=\"stepClicked(2)\"\n        >\n          Sample\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n          @click=\"stepClicked(3)\"\n        >\n          Acquisition\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"4\"\n          editable\n          @click=\"stepClicked(4)\"\n        >\n          Segmentation\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"5\"\n          editable\n          @click=\"stepClicked(5)\"\n        >\n          Visualisation\n        </v-stepper-item>\n\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        this.send(step);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  div.v-stepper.v-sheet {\n    background-color: transparent;\n    box-shadow: none;\n    border-radius: 0px;\n    overflow: hidden;\n  }\n\n  .v-stepper-header {\n    display: flex;\n    align-items: center;\n  }\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 180,
        "wires": [
            [
                "b3f67037ca280e20"
            ]
        ]
    },
    {
        "id": "b2dbc032f8e38df8",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "group": "0eba0fc7dc39a413",
        "page": "",
        "ui": "",
        "name": "Information",
        "order": 3,
        "width": "3",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-information-container\">\n    <p id=\"date\"></p>\n    <p>-</p>\n    <p id=\"time-first-visit\"></p>\n    <span\n      class=\"mdi mdi-account\"\n      :style=\"{ color: 'black' }\"\n      @click=\"menu = true\"\n    ></span>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Gallery', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "2cb8a38663ecb8ba"
            ]
        ]
    },
    {
        "id": "b3f67037ca280e20",
        "type": "function",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "Format command to change page",
        "func": "const numberStringMap = {\n  1: \"Preview\",\n  2: \"Sample\",\n  3: \"Acquisition\",\n  4: \"Segmentation\",\n  5: \"Visualization\"\n};\n\nconst key = numberStringMap[msg.payload];\n\nif (key) {\n  msg.payload = { \"page\": numberStringMap[msg.payload] };\n} else {\n  console.log(`Key not found for value: ${msg.payload}`);\n  msg.payload = { \"page\": null };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "ee0252f79ad5e696"
            ]
        ]
    },
    {
        "id": "ae325f7a4e54fd51",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "a6c708e75fee0abb",
        "group": "5255f6592469c975",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "8",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"image-zoom-container\"\n       @touchstart=\"handleTouchStart\"\n       @touchmove.prevent=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       @mousemove=\"handleMouseMove\"\n       @mouseleave=\"handleMouseLeave\">\n    <div class=\"image-wrapper\">\n        <img :src=\"dynamicImageUrl\" ref=\"image\">\n    </div>\n    <!--<div class=\"zoomed-image\" :style=\"zoomedImageStyle\"></div>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      zoomedImageStyle: {\n        display: 'none',\n        backgroundImage: '',\n        backgroundSize: 'cover',\n        transformOrigin: 'center center',\n        transform: 'scale(2)', // Facteur de zoom initial\n        pointerEvents: 'none',\n        position: 'absolute',\n        width: '150px', // Taille réduite de l'image zoomée\n        height: '200px', // Taille réduite de l'image zoomée\n        border: '1px solid black',\n        zIndex: '1000',\n      },\n      touchStartX: 0,\n      touchStartY: 0,\n      isTouching: false,\n      dynamicImageUrl: ''\n    };\n  },\n  mounted() {\n    this.setDynamicImageUrl();\n  },\n  methods: {\n    setDynamicImageUrl() {\n      const currentUrl = new URL(window.location.href);\n      const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n      const relativePath = '/ps/hal/camera/streams/preview.mjpg';\n      const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n      this.dynamicImageUrl = fullUrl.href;\n    },\n    handleMouseMove(e) {\n      if (!this.isTouching) {\n        this.updateZoomPosition(e);\n      }\n    },\n    handleTouchStart(e) {\n      const touch = e.touches[0];\n      this.touchStartX = touch.clientX;\n      this.touchStartY = touch.clientY;\n      this.isTouching = true;\n      this.updateZoomPosition(touch);\n    },\n    handleTouchMove(e) {\n      if (this.isTouching) {\n        const touch = e.touches[0];\n        this.updateZoomPosition(touch);\n      }\n    },\n    handleTouchEnd() {\n      this.isTouching = false;\n      this.zoomedImageStyle.display = 'none';\n    },\n    handleMouseLeave() {\n      if (!this.isTouching) {\n        this.zoomedImageStyle.display = 'none';\n      }\n    },\n    updateZoomPosition(e) {\n      const { left, top, width, height } = this.$refs.image.getBoundingClientRect();\n\n      const x = e.clientX - left;\n      const y = e.clientY - top;\n\n      const zoomBoxSize = 100;\n\n      // Calcul des déplacements pour centrer l'image zoomée sur le curseur/toucher\n      const zoomedX = -(x * 2 - zoomBoxSize / 2);\n      const zoomedY = -(y * 2 - zoomBoxSize / 2);\n\n      // Positionne l'image zoomée centrée sur le curseur/toucher\n      this.zoomedImageStyle.display = 'block';\n      this.zoomedImageStyle.backgroundImage = `url(${this.$refs.image.src})`;\n      this.zoomedImageStyle.backgroundSize = `${width * 2}px ${height * 2}px`;\n      this.zoomedImageStyle.backgroundPosition = `${zoomedX}px ${zoomedY}px`;\n      this.zoomedImageStyle.top = `${e.clientY - zoomBoxSize * 2 + 60}px`;\n      this.zoomedImageStyle.left = `${e.clientX - zoomBoxSize / 2}px`;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.image-zoom-container {\n  /*cursor: none;*/\n  border: 1px solid black;\n  border-radius: 5px;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.image-wrapper {\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.image-wrapper img {\n  display: block;\n  width: 100%;\n  height: auto;\n  transition: transform 0.2s ease-out;\n}\n\n.zoomed-image {\n  position: absolute;\n  top: 50%; /* Centre vertical */\n  left: 50%; /* Centre horizontal */\n  transform: translate(-50%, -50%); /* Centrer l'image zoomée */\n  width: 150px; /* Taille réduite de l'image zoomée */\n  height: 300px; /* Taille réduite de l'image zoomée */\n  pointer-events: none;\n  z-index: 1000;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7c2460ce034f4740",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "group": "31ed58b19db5ea9a",
        "page": "",
        "ui": "",
        "name": "Pump settings",
        "order": 1,
        "width": "4",
        "height": "2",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Pump</h2>\n    <div class=\"horizontal-alignment\">\n      <v-slider color=\"#0a6eca\" v-model=\"flowrate\" label=\"Flowrate\" step=\"0.1\" max=\"45\" class=\"my-slider custom-slider\"></v-slider>\n      <v-text-field variant=\"outlined\" v-model=\"flowrate\" suffix=\"ml/min\" density=\"compact\" append-inner-icon=\"mdi-information\" @click:append-inner=\"openDialog1\" class=\"my-v-text\"></v-text-field>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"dialog1 = false\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <v-btn-toggle v-model=\"selectedFlowratePreset\" variant=\"outlined\" density=\"confortable\" color=\"#0a6eca\" divided class=\"toggle presetToggle\">\n      <v-btn style=\"padding: 10px;\" v-for=\"(preset, index) in flowrate_preset\" :key=\"index\">{{ preset }}</v-btn>\n    </v-btn-toggle>\n\n    <div class=\"horizontal-alignment\">\n      <v-slider color=\"#0a6eca\" v-model=\"volume\" label=\"Volume\" step=\"0.05\" max=\"1\" class=\"my-slider custom-slider\"></v-slider>\n      <v-text-field variant=\"outlined\" v-model=\"volume\" suffix=\"ml\" density=\"compact\" append-inner-icon=\"mdi-information\" @click:append-inner=\"openDialog2\" class=\"my-v-text\"></v-text-field>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"dialog2 = false\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <v-btn-toggle v-model=\"selectedVolumePreset\" variant=\"outlined\" density=\"confortable\" color=\"#0a6eca\" divided class=\"toggle presetToggle\">\n      <v-btn style=\"padding: 10px;\"><span class=\"mdi mdi-infinity\"></span></v-btn>\n      <v-btn style=\"padding: 10px;\" v-for=\"(preset, index) in volume_preset\" :key=\"index\">{{ preset }}</v-btn>\n    </v-btn-toggle>\n\n    <v-btn-toggle\n      v-model=\"toggle\"\n      variant=\"outlined\"\n      density=\"confortable\"\n      color=\"#0a6eca\"\n      divided\n      class=\"toggle\"\n    >\n      <v-btn style=\"padding: 10px;\"><v-icon left>mdi-rotate-left</v-icon>Backward</v-btn>\n      <v-btn style=\"padding: 10px;\"><v-icon left>mdi-square</v-icon>Stop</v-btn>\n      <v-btn style=\"padding: 10px;\">Forward<v-icon right>mdi-rotate-right</v-icon></v-btn>\n    </v-btn-toggle>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      toggle: 1,\n      selectedFlowratePreset: null,\n      selectedVolumePreset: null,\n      volume_preset: [],\n      flowrate_preset: [],\n      flowrate: 0,\n      volume: 0,\n    };\n  },\n  methods: {\n    openDialog1() {\n      this.dialog1 = true;\n    },\n    openDialog2() {\n      this.dialog2 = true;\n    },\n    checkFlowratePreset() {\n      const index = this.flowrate_preset.indexOf(this.flowrate);\n      this.selectedFlowratePreset = index !== -1 ? index : null;\n    },\n    checkVolumePreset() {\n      if (this.selectedVolumePreset === 0) {\n        this.volume = \"Infinity\";\n      } else {\n        const index = this.volume_preset.indexOf(this.volume);\n        this.selectedVolumePreset = index !== -1 ? index + 1 : null;\n      }\n    }\n  },\n  watch: {\n    flowrate(newVal) {\n        if (newVal === '' || newVal === null || newVal < 0) {\n            this.flowrate = 0;\n        } else {\n            this.checkFlowratePreset();\n        }\n    },\n    volume(newVal) {\n        if (newVal === '' || newVal === null || newVal < 0) {\n            this.volume = 0;\n        } else {\n            this.checkVolumePreset();\n        }\n    },\n    selectedFlowratePreset(newVal) {\n      if (newVal !== null) {\n        this.flowrate = this.flowrate_preset[newVal];\n        if (this.flowrate == null) {\n            this.flowrate = 0;\n        }\n      }\n    },\n    selectedVolumePreset(newVal) {\n      if (newVal === 0) {\n        this.volume = \"Infinity\";\n      } else if (newVal !== null) {\n        this.volume = this.volume_preset[newVal - 1];\n        if (this.volume == null) {\n            this.volume = 0;\n        }\n      }\n    },\n    toggle(newVal) {\n        let action = 'move';\n        let payload = {};\n\n        switch (this.toggle) {\n            case 0: \n                payload = {\n                    \"action\": action,\n                    \"direction\": 'BACKWARD',\n                    \"volume\": this.volume,\n                    \"flowrate\": this.flowrate\n                };\n                break;\n            case 1:\n                payload = {\n                    \"action\": 'stop',\n                };\n                break;\n            case 2:\n                payload = {\n                    \"action\": action,\n                    \"direction\": 'FORWARD',\n                    \"volume\": this.volume,\n                    \"flowrate\": this.flowrate\n                };\n                break;\n        }\n        this.send({\n            payload: payload,\n            topic: 'actuator/pump'\n        });\n    },\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.flowrate_preset) {\n            this.flowrate_preset = msg.flowrate_preset;\n          }\n          if (msg.volume_preset) {\n            this.volume_preset = msg.volume_preset;\n          }\n          if (msg.payload.status && msg.payload.status == \"Done\") {\n            this.toggle = 1;\n          }\n        });\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n};\n</script>\n\n<style scoped>\nh2 {\n  color: #0a6eca !important;\n}\n\n.my-slider {\n  padding-right: 15px;\n  flex: 1;\n}\n\n.my-v-text {\n  flex: 0.5;\n}\n\ndiv.v-slider {\n  font-weight: bolder;\n}\n\ndiv .v-btn-toggle {\n  background-color: #ffffff;\n}\n\n.my-v-text > .v-input__control {\n  background-color: #ffffff;\n  border-radius: 5px;\n}\n\n.container {\n  padding: 10px 10px;\n  background-color: rgba(10, 110, 202, 0.1);\n  border: solid black 1px;\n  border-radius: 5px;\n}\n\n.horizontal-alignment {\n  display: flex;\n  align-items: center;\n}\n\n.toggle {\n  width: 100%;\n  border-color: #0a6eca;\n  color: #0a6eca;\n}\n\n.presetToggle {\n  margin-bottom: 1rem;\n}\n\n.toggle .v-btn--active {\n  background-color: #0a6eca !important;\n  color: white !important;\n}\n\n.custom-slider .v-slider__label {\n  font-size: 0.9vw;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 520,
        "wires": [
            [
                "bffac6466a2ad434"
            ]
        ]
    },
    {
        "id": "4d881b94510f4523",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "group": "31ed58b19db5ea9a",
        "page": "",
        "ui": "",
        "name": "Focus settings",
        "order": 2,
        "width": "4",
        "height": "2",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Focus</h2>\n    <div class=\"horizontal-alignment\">\n      <v-slider color=\"#0a6eca\" label=\"Distance\" step=\"0.10\" max=\"45\" min=\"0\" v-model=\"distance\" class=\"my-slider custom-slider\"></v-slider>\n      <v-text-field variant=\"outlined\" v-model=\"distance\" density=\"compact\" suffix=\"mm\" append-inner-icon=\"mdi-information\" @click:append-inner=\"openDialog\" class=\"my-v-text\"></v-text-field>\n      <v-dialog v-model=\"dialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"dialog = false\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <v-btn-toggle v-model=\"selectedDistancePreset\" variant=\"outlined\" density=\"comfortable\" color=\"#0a6eca\" divided class=\"toggle presetToggle\">\n      <v-btn style=\"padding: 10px;\" v-for=\"(preset, index) in focus_preset\" :key=\"index\">{{ preset }}</v-btn>\n    </v-btn-toggle>\n\n    <v-btn-toggle v-model=\"toggle\" variant=\"outlined\" density=\"comfortable\" color=\"#0a6eca\" divided class=\"toggle\">\n      <v-btn style=\"padding: 10px;\"><v-icon>mdi-arrow-left-thin-circle-outline</v-icon>Closer</v-btn>\n      <v-btn style=\"padding: 10px;\"><v-icon>mdi-square</v-icon>Stop</v-btn>\n      <v-btn style=\"padding: 10px;\">Further<v-icon>mdi-arrow-right-thin-circle-outline</v-icon></v-btn>\n    </v-btn-toggle>\n  </div>\n</template>\n\n<script>\n    export default {\n      data() {\n        return {\n          distance: 0,\n          dialog: false,\n          toggle: 1,\n          selectedDistancePreset: null,\n          focus_preset: [],\n        };\n      },\n      methods: {\n        openDialog() {\n          this.dialog = true;\n        },\n        checkDistancePreset() {\n          const index = this.focus_preset.indexOf(this.distance);\n          this.selectedDistancePreset = index !== -1 ? index : null;\n        },\n      },\n      watch: {\n        toggle(newVal) {\n            let action = 'move';\n            let payload = {};\n\n            switch (this.toggle) {\n                case 0:\n                    payload = {\n                        \"action\": action,\n                        \"direction\": 'DOWN',\n                        \"distance\": this.distance,\n                    };\n                    break;\n                case 1:\n                    payload = {\n                        \"action\": 'stop',\n                    };\n                    break;\n                case 2:\n                    payload = {\n                        \"action\": action,\n                        \"direction\": 'UP',\n                        \"distance\": this.distance,\n                    };\n                    break;\n            }\n            this.send({\n                payload: payload,\n                topic: 'actuator/focus'\n            });\n        },\n        distance(newVal) {\n            if (newVal === '' || newVal === null || newVal < 0) {\n                this.distance = 0;\n            } else {\n                this.checkDistancePreset();\n            }\n        },\n        selectedDistancePreset(newVal) {\n          if (newVal !== null) {\n            this.distance = this.focus_preset[newVal];\n            if (this.distance == null) {\n                this.distance = 0;\n            }\n          }\n        },\n        '$socket': {\n          handler(newVal, oldVal) {\n            this.$socket.on('msg-input:' + this.id, (msg) => {\n              if (msg.focus_preset) {\n                this.focus_preset = msg.focus_preset;\n              }\n              if (msg.payload.status && msg.payload.status == \"Done\") {\n                this.toggle = 1;\n              }\n            });\n          },\n          deep: true,\n          immediate: true\n        }\n      }\n    };\n</script>\n\n<style scoped>\n    .container {\n      padding: 10px 10px;\n      border: solid black 1px;\n      border-radius: 5px;\n    }\n    \n    .my-slider {\n      margin-right: 50px;\n      flex: 1;\n      font-weight: bolder;\n    }\n    \n    .my-v-text {\n      flex: 0.5;\n    }\n    \n    div .v-btn-toggle {\n      background-color: #ffffff;\n    }\n    \n    .my-v-text > .v-input__control {\n      background-color: #ffffff;\n      border-radius: 5px;\n    }\n    \n    .horizontal-alignment {\n      display: flex;\n      align-items: center;\n    }\n    \n    .toggle {\n      width: 100%;\n      border-color: #0a6eca;\n      color: #0a6eca;\n    }\n    \n    .presetToggle {\n      margin-bottom: 1rem;\n    }\n    \n    .toggle .v-btn--active {\n      background-color: #0a6eca !important;\n      color: white !important;\n    }\n    \n    .custom-slider .v-slider__label {\n      font-size: 0.9vw;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 620,
        "wires": [
            [
                "bffac6466a2ad434"
            ]
        ]
    },
    {
        "id": "e76753ed4e6ec711",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "group": "31ed58b19db5ea9a",
        "page": "",
        "ui": "",
        "name": "LED settings",
        "order": 3,
        "width": "4",
        "height": "2",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>LED</h2>\n    <v-btn-toggle v-model=\"toggle\" variant=\"outlined\" density=\"comfortable\" color=\"#0a6eca\" divided class=\"toggle\">\n      <v-btn style=\"padding: 10px;\">\n        <v-icon left>mdi-led-off</v-icon>OFF\n      </v-btn>\n      <v-btn style=\"padding: 10px;\">\n        <v-icon right>mdi-led-on</v-icon>ON\n      </v-btn>\n    </v-btn-toggle>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      toggle: null\n    };\n  },\n  watch: {\n    toggle(newVal) {\n      if (newVal === 0) {\n        this.send({\n          payload: {\n            action: \"off\",\n            led: 1\n          },\n          topic: 'light'\n        });\n      } else if (newVal === 1) {\n        this.send({\n          payload: {\n            action: \"on\",\n            led: 1\n          },\n          topic: 'light'\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  padding: 10px 10px;\n  border: solid black 1px;\n  border-radius: 5px;\n}\n\n.my-slider {\n  margin-right: 50px; \n  flex: 1; \n}\n\n.my-v-text {\n  flex: 0.5; \n}\n\ndiv .v-btn-toggle {\n  background-color: #ffffff;\n}\n\n.my-v-text > .v-input__control {\n  background-color: #ffffff;\n  border-radius: 5px;\n}\n\n.horizontal-alignment {\n  display: flex;\n  align-items: center;\n}\n\n.toggle {\n  width: 100%;\n  border-color: #0a6eca;\n  color: #0a6eca;\n}\n\n.toggle .v-btn--active {\n  background-color: #0a6eca !important;\n  color: white !important;\n}\n\n.custom-slider .v-slider__label {\n  font-size: 0.9vw;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "bffac6466a2ad434"
            ]
        ]
    },
    {
        "id": "7f41b4c29c7b9203",
        "type": "ui-button",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "group": "31ed58b19db5ea9a",
        "name": "Picture button",
        "label": "Calibration",
        "order": 5,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "calibration-button",
        "icon": "",
        "iconPosition": "left",
        "payload": "{\"page\":\"Calibration\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "x": 510,
        "y": 860,
        "wires": [
            [
                "e59fec7a28f6d723"
            ]
        ]
    },
    {
        "id": "e308f805010f64b1",
        "type": "ui-template",
        "z": "db1e7a22029cc2a4",
        "group": "",
        "page": "c37f9bbd954cb6ec",
        "ui": "",
        "name": "Custom CSS - Preview 2",
        "order": 0,
        "width": "0",
        "height": "0",
        "head": "",
        "format": ".calibration-button .v-btn {\n    background-color: #0a6eca;\n    color: #ffffff;\n    border-radius: 7px;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "page:style",
        "className": "",
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b86113b166fecbb9",
        "type": "function",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "Format command to change page",
        "func": "if (msg.payload == \"Clicked!\") {\n  msg.payload = { page: \"Home\"}\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "774a6b171946cda1"
            ]
        ]
    },
    {
        "id": "b439202bb729a0e3",
        "type": "persistent value",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "ceeda8d0-42aa-11ef-89ad-e57161842148",
        "value": "flowrate_preset",
        "command": "read",
        "msgProperty": "flowrate_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 310,
        "y": 500,
        "wires": [
            [
                "7c2460ce034f4740"
            ],
            []
        ]
    },
    {
        "id": "f25e0f5152d059c9",
        "type": "persistent value",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "4552e290-42ad-11ef-89ad-e57161842148",
        "value": "volume_preset",
        "command": "read",
        "msgProperty": "volume_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "7c2460ce034f4740"
            ],
            []
        ]
    },
    {
        "id": "6739b10df9f1d57b",
        "type": "persistent value",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "59a90800-42ad-11ef-89ad-e57161842148",
        "value": "focus_preset",
        "command": "read",
        "msgProperty": "focus_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "4d881b94510f4523"
            ],
            []
        ]
    },
    {
        "id": "2f82ccfd843002d9",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "name": "link out 70",
        "mode": "link",
        "links": [
            "f1a9c4c1beb3f6db",
            "30fca39cc406ed23",
            "b5e0a7a9cb47a50b",
            "c46dbf001df46e38",
            "d15da1418343d845",
            "ba4e5b0a18adb969",
            "e6eaab7bd19e4bfd",
            "ea3180360e6e76c0"
        ],
        "x": 195,
        "y": 60,
        "wires": []
    },
    {
        "id": "f1a9c4c1beb3f6db",
        "type": "link in",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "link in 59",
        "links": [
            "2f82ccfd843002d9",
            "b55889accd88ab53",
            "01f2bfc021ad0daf"
        ],
        "x": 95,
        "y": 500,
        "wires": [
            [
                "b439202bb729a0e3"
            ]
        ]
    },
    {
        "id": "30fca39cc406ed23",
        "type": "link in",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "link in 60",
        "links": [
            "2f82ccfd843002d9",
            "b55889accd88ab53",
            "01f2bfc021ad0daf"
        ],
        "x": 95,
        "y": 540,
        "wires": [
            [
                "f25e0f5152d059c9"
            ]
        ]
    },
    {
        "id": "b5e0a7a9cb47a50b",
        "type": "link in",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "link in 61",
        "links": [
            "2f82ccfd843002d9",
            "b55889accd88ab53",
            "01f2bfc021ad0daf"
        ],
        "x": 95,
        "y": 640,
        "wires": [
            [
                "6739b10df9f1d57b"
            ]
        ]
    },
    {
        "id": "774a6b171946cda1",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link out 72",
        "mode": "link",
        "links": [
            "825b79ccb5b05a09"
        ],
        "x": 875,
        "y": 140,
        "wires": []
    },
    {
        "id": "ee0252f79ad5e696",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link out 73",
        "mode": "link",
        "links": [
            "825b79ccb5b05a09"
        ],
        "x": 895,
        "y": 180,
        "wires": []
    },
    {
        "id": "e59fec7a28f6d723",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "link out 75",
        "mode": "link",
        "links": [
            "825b79ccb5b05a09"
        ],
        "x": 625,
        "y": 860,
        "wires": []
    },
    {
        "id": "a05b7bdb9f9d8d2e",
        "type": "ui-control",
        "z": "db1e7a22029cc2a4",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1600,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "825b79ccb5b05a09",
        "type": "link in",
        "z": "db1e7a22029cc2a4",
        "name": "link in 72",
        "links": [
            "774a6b171946cda1",
            "ee0252f79ad5e696",
            "932204814a8df00f",
            "e59fec7a28f6d723",
            "d2e7577c7d584c17",
            "44ea67cf59bbe48f",
            "287ff34cb77586c7",
            "040e5578b0050050"
        ],
        "x": 1435,
        "y": 160,
        "wires": [
            [
                "a05b7bdb9f9d8d2e"
            ]
        ]
    },
    {
        "id": "ff6a9f74b20d4443",
        "type": "ui-text",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "group": "31ed58b19db5ea9a",
        "order": 4,
        "width": "2",
        "height": "1",
        "name": "",
        "label": "Modify you camera settings : ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 290,
        "y": 860,
        "wires": []
    },
    {
        "id": "13dc7e99c3b3cafc",
        "type": "mqtt out",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 890,
        "y": 620,
        "wires": []
    },
    {
        "id": "0142d099d2d90e5f",
        "type": "mqtt in",
        "z": "db1e7a22029cc2a4",
        "name": "Listen to all topics",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "2bf9d54f976d4458"
            ]
        ]
    },
    {
        "id": "2bf9d54f976d4458",
        "type": "debug",
        "z": "db1e7a22029cc2a4",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 200,
        "wires": []
    },
    {
        "id": "bffac6466a2ad434",
        "type": "switch",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 620,
        "wires": [
            [
                "13dc7e99c3b3cafc"
            ]
        ]
    },
    {
        "id": "7a6313a038e7fb05",
        "type": "mqtt in",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "Listen focus status",
        "topic": "status/focus",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 600,
        "wires": [
            [
                "4d881b94510f4523",
                "79716f3ce5c936ab"
            ]
        ]
    },
    {
        "id": "53e24b200c3a5f0f",
        "type": "mqtt in",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "Listen pump status",
        "topic": "status/pump",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "7c2460ce034f4740",
                "ad4d0fbf355e167c"
            ]
        ]
    },
    {
        "id": "ad4d0fbf355e167c",
        "type": "debug",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "Pump status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "79716f3ce5c936ab",
        "type": "debug",
        "z": "db1e7a22029cc2a4",
        "g": "5387cbd03cda0166",
        "name": "Focus status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 580,
        "wires": []
    },
    {
        "id": "386624b058201871",
        "type": "ui-event",
        "z": "db1e7a22029cc2a4",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "2f82ccfd843002d9"
            ]
        ]
    },
    {
        "id": "c866246764dec8a6",
        "type": "persistent value",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.profilName",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 260,
        "y": 220,
        "wires": [
            [
                "b2dbc032f8e38df8"
            ],
            []
        ]
    },
    {
        "id": "e6eaab7bd19e4bfd",
        "type": "link in",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link in 94",
        "links": [
            "2f82ccfd843002d9",
            "b55889accd88ab53",
            "01f2bfc021ad0daf"
        ],
        "x": 65,
        "y": 220,
        "wires": [
            [
                "c866246764dec8a6"
            ]
        ]
    },
    {
        "id": "000765d5a63540b8",
        "type": "inject",
        "z": "db1e7a22029cc2a4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "b55889accd88ab53"
            ]
        ]
    },
    {
        "id": "b55889accd88ab53",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "name": "link out 98",
        "mode": "link",
        "links": [
            "f1a9c4c1beb3f6db",
            "30fca39cc406ed23",
            "b5e0a7a9cb47a50b",
            "c46dbf001df46e38",
            "d15da1418343d845",
            "ba4e5b0a18adb969",
            "e6eaab7bd19e4bfd",
            "ea3180360e6e76c0"
        ],
        "x": 395,
        "y": 60,
        "wires": []
    },
    {
        "id": "1ab62a6e28ceeacb",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link out 114",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1175,
        "y": 260,
        "wires": []
    },
    {
        "id": "ec1137fb63fbb85a",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link out 115",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1175,
        "y": 220,
        "wires": []
    },
    {
        "id": "0422d9f47a0bcf6c",
        "type": "switch",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "ec1137fb63fbb85a"
            ],
            [
                "1ab62a6e28ceeacb"
            ]
        ]
    },
    {
        "id": "373862dd79b24cb3",
        "type": "switch",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "44ea67cf59bbe48f"
            ],
            [
                "0422d9f47a0bcf6c"
            ]
        ]
    },
    {
        "id": "2cb8a38663ecb8ba",
        "type": "function",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 220,
        "wires": [
            [
                "373862dd79b24cb3"
            ]
        ]
    },
    {
        "id": "44ea67cf59bbe48f",
        "type": "link out",
        "z": "db1e7a22029cc2a4",
        "g": "4237eacb62444cc7",
        "name": "link out 116",
        "mode": "link",
        "links": [
            "825b79ccb5b05a09"
        ],
        "x": 1035,
        "y": 200,
        "wires": []
    },
    {
        "id": "c3c3454d430487e0",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "group": "0b7f28fdbeca7b10",
        "page": "",
        "ui": "",
        "name": "Title",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"center-container\" @click=\"navigateToHome\">\n        <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"Description de l'image\" class=\"center-image-1\">\n        <h3>PlanktoScope GUI</h3>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        navigateToHome() {\n            this.send(\"Clicked!\");\n        }\n    }\n}\n</script>\n\n<style scoped>\n    h3 {\n        font-size: 1vw;\n    }\n\n    .center-container {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .center-image-1 {\n        margin-right: 25px;\n        max-width: 40px;\n        line-height: 0px;\n    }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 240,
        "wires": [
            [
                "86d23d1c6a0ea540"
            ]
        ]
    },
    {
        "id": "83366805126c40c9",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "group": "0b7f28fdbeca7b10",
        "page": "",
        "ui": "",
        "name": "Step bar",
        "order": 2,
        "width": "7",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"2\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n          @click=\"stepClicked(1)\"\n        >\n          Preview\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n          @click=\"stepClicked(2)\"\n          class=\"selected-step\"\n        >\n          Sample\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n          @click=\"stepClicked(3)\"\n        >\n          Acquisition\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"4\"\n          editable\n          @click=\"stepClicked(4)\"\n        >\n          Segmentation\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"5\"\n          editable\n          @click=\"stepClicked(5)\"\n        >\n          Visualisation\n        </v-stepper-item>\n\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        this.send(step);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  div.v-stepper.v-sheet {\n    background-color: transparent;\n    box-shadow: none;\n    border-radius: 0px;\n    overflow: hidden;\n  }\n\n  .v-stepper-header {\n    display: flex;\n    align-items: center;\n  }\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "97a70986fa0406ce"
            ]
        ]
    },
    {
        "id": "62ed056b8dcaa302",
        "type": "ui-control",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1140,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "97a70986fa0406ce",
        "type": "function",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "Format command to change page",
        "func": "const numberStringMap = {\n  1: \"Preview\",\n  2: \"Sample\",\n  3: \"Acquisition\",\n  4: \"Segmentation\",\n  5: \"Visualization\"\n};\n\nconst key = numberStringMap[msg.payload];\n\nif (key) {\n  msg.payload = { \"page\": numberStringMap[msg.payload] };\n} else {\n  console.log(`Key not found for value: ${msg.payload}`);\n  msg.payload = { \"page\": null };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 280,
        "wires": [
            [
                "62ed056b8dcaa302"
            ]
        ]
    },
    {
        "id": "23a443593bbc53fe",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "group": "551ae149f5d39078",
        "page": "",
        "ui": "",
        "name": "Sample general information",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Sample general information</h2>\n    <div class=\"horizontal-alignment-sgi\">\n      <!-- Name of the project -->\n      <div class=\"label-bloc-sgi\">\n        <label class=\"v-label v-slider__label my-label-general-sgi\">Name of the project</label>\n      </div>\n      <div class=\"input-bloc-sgi\">\n        <v-text-field\n          v-model=\"projectName\"\n          @input=\"updatePayload\"\n          label=\"ex: Tara Pacifique\"\n          variant=\"outlined\"\n          density=\"compact\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog1\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog1\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Sample ID -->\n      <div class=\"label-bloc-sgi\">\n        <label class=\"v-label v-slider__label my-label-general-sgi\">Sample ID</label>\n      </div>\n      <div class=\"input-bloc-sgi\">\n        <v-text-field \n          v-model=\"sampleId\"\n          @input=\"updatePayload\"\n          label=\"ex: S001\"\n          variant=\"outlined\"\n          density=\"compact\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog2\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog2\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <!-- Sampling gear selection -->\n    <div class=\"horizontal-alignment-sgi\">\n      <div class=\"label-bloc-sgi-2\">\n        <label class=\"v-label v-slider__label my-label-sgi-2\">Sampling Gear</label>\n      </div>\n      <v-btn-toggle v-model=\"toggle\" variant=\"outlined\" density=\"confortable\" color=\"#0a6eca\" divided\n        class=\"toggle-full-width my-toggle\">\n        <v-btn style=\"padding: 10px;\" @click=\"sendTitle('Horizontal Net')\">Horizontal Net</v-btn>\n        <v-btn style=\"padding: 10px;\" @click=\"sendTitle('Vertical Net')\">Vertical Net</v-btn>\n        <v-btn style=\"padding: 10px;\" @click=\"sendTitle('Niskin bottle')\">Niskin bottle</v-btn>\n        <v-btn style=\"padding: 10px;\" @click=\"sendTitle('Lab culture')\">Lab culture</v-btn>\n        <v-btn style=\"padding: 10px;\" @click=\"sendTitle('Demo / Test')\">Demo / Test</v-btn>\n      </v-btn-toggle>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      toggle: null,\n      projectName: '',\n      sampleId: ''\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n\n          // Update fields based on the payload\n          if (payload.project_name !== undefined) {\n            this.projectName = payload.project_name;\n          }\n          if (payload.sample_id !== undefined) {\n            this.sampleId = payload.sample_id;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog1() {\n      this.dialog1 = true;\n    },\n    openDialog2() {\n      this.dialog2 = true;\n    },\n    closeDialog1() {\n      this.dialog1 = false;\n    },\n    closeDialog2() {\n      this.dialog2 = false;\n    },\n    sendTitle(title) {\n      this.send({payload : {\n          gear: title\n      }});\n    },\n    updatePayload() {\n      const payload = {\n        project_name: this.projectName,\n        sample_id: this.sampleId\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .gear-selection {\n    width: 100%;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general-sgi {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n  }\n\n  .my-label-sgi-2 {\n    margin-top: 12px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  .horizontal-alignment-sgi {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .label-bloc-sgi {\n    display: flex;\n    flex: 0.2;\n    justify-content: center !important;\n    align-items: center;\n  }\n\n  .label-bloc-sgi-2 {\n    display: flex;\n    flex: 0.2;\n    justify-content: right !important;\n    align-items: center;\n  }\n\n  .input-bloc-sgi {\n    flex: 0.5;\n    margin-right: 10px;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .c > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .toggle-full-width {\n    width: 92% !important;\n  }\n\n  .v-progress-linear {\n    margin-left: 20px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-toggle {\n    margin-top: 12px !important;\n    border-color: #0a6eca !important;\n    background-color: #ffffff !important;\n    color: #0a6eca !important;\n  }\n\n  .my-toggle .v-btn--active {\n    background-color: #0a6eca !important;\n    color: white !important;\n  }\n\n  .progress-info {\n    margin-top: 12px !important;\n  }\n\n  h2 {\n    color: #0a6eca !important;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 520,
        "wires": [
            [
                "26384e9142c6e77d"
            ]
        ]
    },
    {
        "id": "697ae94309963b9b",
        "type": "ui-control",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1440,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ceccdeb615cdc48b",
        "type": "function",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "Format command to choose groups",
        "func": "const gear = msg.payload.gear;\n\nif (gear === \"Horizontal Net\") {\n    msg.payload = {\n        \"group\": {\n            \"show\": [\n                \"Sample-2:starting-point-sample-2\",\n                \"Sample-2:ending-point-sample-2\",\n                \"Sample-2:net-specificity-sample-2\",\n                \"Sample-2:other-information-horizontal-net\",\n                \"Sample-2:custom-sample-metadata\"\n            ],\n            \"hide\": [\n                \"Sample-2:other-information-vertical-net\",\n                \"Sample-2:other-information-niskin-bottle\",\n                \"Sample-2:bottle-specificity-sample-2\",\n                \"Sample-2:other-information-lab-culture-&-demo\",\n            ]\n        }\n    }\n} else if (gear === \"Vertical Net\") {\n    msg.payload = {\n        \"group\": {\n            \"show\": [\n                \"Sample-2:starting-point-sample-2\",\n                \"Sample-2:net-specificity-sample-2\",\n                \"Sample-2:custom-sample-metadata\",\n                \"Sample-2:other-information-vertical-net\",\n            ],\n            \"hide\": [\n                \"Sample-2:ending-point-sample-2\",\n                \"Sample-2:other-information-horizontal-net\",\n                \"Sample-2:other-information-niskin-bottle\",\n                \"Sample-2:bottle-specificity-sample-2\",\n                \"Sample-2:other-information-lab-culture-&-demo\",\n            ]\n        }\n    }\n} else if (gear === \"Niskin bottle\") {\n    msg.payload = {\n        \"group\": {\n            \"show\": [\n                \"Sample-2:starting-point-sample-2\",\n                \"Sample-2:bottle-specificity-sample-2\",\n                \"Sample-2:other-information-niskin-bottle\",\n                \"Sample-2:custom-sample-metadata\"\n            ],\n            \"hide\": [\n                \"Sample-2:ending-point-sample-2\",\n                \"Sample-2:net-specificity-sample-2\",\n                \"Sample-2:other-information-horizontal-net\",\n                \"Sample-2:other-information-vertical-net\",\n                \"Sample-2:other-information-lab-culture-&-demo\",\n            ]\n        }\n    }\n} else if (gear === \"Lab culture\") {\n    msg.payload = {\n        \"group\": {\n            \"show\": [\n                \"Sample-2:starting-point-sample-2\",\n                \"Sample-2:other-information-lab-culture-&-demo\",\n                \"Sample-2:custom-sample-metadata\"\n            ],\n            \"hide\": [\n                \"Sample-2:ending-point-sample-2\",\n                \"Sample-2:net-specificity-sample-2\",\n                \"Sample-2:other-information-horizontal-net\",\n                \"Sample-2:other-information-vertical-net\",\n                \"Sample-2:other-information-niskin-bottle\",\n                \"Sample-2:bottle-specificity-sample-2\",\n            ]\n        }\n    }\n} else if (gear === \"Demo / Test\") {\n    msg.payload = {\n        \"group\": {\n            \"show\": [\n                \"Sample-2:starting-point-sample-2\",\n                \"Sample-2:other-information-lab-culture-&-demo\",\n                \"Sample-2:custom-sample-metadata\"\n            ],\n            \"hide\": [\n                \"Sample-2:ending-point-sample-2\",\n                \"Sample-2:net-specificity-sample-2\",\n                \"Sample-2:other-information-horizontal-net\",\n                \"Sample-2:other-information-vertical-net\",\n                \"Sample-2:other-information-niskin-bottle\",\n                \"Sample-2:bottle-specificity-sample-2\",\n            ]\n        }\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 580,
        "wires": [
            [
                "697ae94309963b9b"
            ]
        ]
    },
    {
        "id": "83a6ffa643836e87",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "group": "cc5bd9fa98de3240",
        "page": "",
        "ui": "",
        "name": "Starting point",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Starting point</h2>\n    <div class=\"horizontal-alignment\">\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-date\">Date</label>\n      </div>\n      <v-text-field\n        v-model=\"selectedDate\"\n        @input=\"updatePayload\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"date\"\n        class=\"my-v-text\"\n      ></v-text-field>\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-time\">Time</label>\n      </div>\n      <v-text-field\n        v-model=\"selectedTime\"\n        @input=\"updatePayload\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"time\"\n        class=\"my-v-text\"\n      ></v-text-field>\n    </div>\n    <div v-if=\"coordFormat === 'Decimal degrees (DD)'\" class=\"horizontal-alignment\">\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-DD\">GPS</label>\n      </div>\n      <v-text-field\n        v-model=\"longitude\"\n        @input=\"updatePayload\"\n        label=\"Longitude\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"number\"\n        class=\"my-v-text spacing\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"latitude\"\n        @input=\"updatePayload\"\n        label=\"Latitude\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"number\"\n        class=\"my-v-text\"\n      ></v-text-field>\n    </div>\n    <div v-else class=\"horizontal-alignment\">\n      <div class=\"dms\">\n        <div class=\"label-bloc-3\">\n          <label class=\"v-label my-label-gps\">GPS</label>\n        </div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.degrees\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">°</p></div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.minutes\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">'</p></div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.seconds\"\n          @input=\"updatePayload\"\n          label=\"XX.XXX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format-2\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">\"</p></div>\n        <v-select\n          v-model=\"dmsLongitude.direction\"\n          @input=\"updatePayload\"\n          label=\"W-E\"\n          :items=\"['W', 'E']\"\n          variant=\"outlined\"\n          density=\"compact\"\n          class=\"v-select-compas\"\n        ></v-select>\n        <div class=\"grid-container\"><v-icon icon=\"mdi-minus\" size=\"large\"></v-icon></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.degrees\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">°</p></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.minutes\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">'</p></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.seconds\"\n          @input=\"updatePayload\"\n          label=\"XX.XXX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format-2\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">\"</p></div>\n        <v-select\n          v-model=\"dmsLatitude.direction\"\n          @input=\"updatePayload\"\n          label=\"N-S\"\n          :items=\"['N', 'S']\"\n          variant=\"outlined\"\n          density=\"compact\"\n          class=\"v-select-compas\"\n        ></v-select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      coordFormat: \"\",\n      selectedDate: \"\",\n      selectedTime: \"\",\n      longitude: null,\n      latitude: null,\n      dmsLongitude: {\n        degrees: null,\n        minutes: null,\n        seconds: null,\n        direction: 'E',\n      },\n      dmsLatitude: {\n        degrees: null,\n        minutes: null,\n        seconds: null,\n        direction: 'N',\n      },\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n\n          // Update fields based on the payload\n          if (payload.coordFormat !== undefined) {\n            this.coordFormat = payload.coordFormat;\n          }\n          if (payload.selectedDate !== undefined) {\n            this.selectedDate = payload.selectedDate;\n          }\n          if (payload.selectedTime !== undefined) {\n            this.selectedTime = payload.selectedTime;\n          }\n          if (payload.gps) {\n            if (this.coordFormat === 'Decimal degrees (DD)') {\n              if (payload.gps.longitude !== undefined) {\n                this.longitude = payload.gps.longitude;\n              }\n              if (payload.gps.latitude !== undefined) {\n                this.latitude = payload.gps.latitude;\n              }\n            } else {\n              if (payload.gps.longitude !== undefined) {\n                this.dmsLongitude = {\n                  ...this.dmsLongitude,\n                  ...payload.gps.longitude\n                };\n              }\n              if (payload.gps.latitude !== undefined) {\n                this.dmsLatitude = {\n                  ...this.dmsLatitude,\n                  ...payload.gps.latitude\n                };\n              }\n            }\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    updatePayload() {\n      const payload = {\n        date: this.selectedDate,\n        time: this.selectedTime,\n        gps: this.coordFormat === 'Decimal degrees (DD)'\n          ? { longitude: this.longitude, latitude: this.latitude }\n          : {\n              longitude: this.dmsLongitude,\n              latitude: this.dmsLatitude,\n            },\n      };\n      this.send({ payload });\n    }\n  },\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n  }\n\n  .spacing {\n    margin-right: 15px !important;\n  }\n\n  .my-v-text > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .v-select-compas > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .container {\n    padding: 10px !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .grid-container {\n    display: grid !important;\n    height: 5vh !important;\n  }\n\n  .my-label-gps {\n    font-weight: bold !important;\n    flex: 2 !important;\n    margin-bottom: 20px !important;\n    font-size: 1vw !important;\n  }\n\n  .label-DD {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    font-size: 1vw;\n  }\n\n  .label-date {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    font-size: 1vw;\n  }\n\n  .label-time {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    padding-left: 25px !important;\n    font-size: 1vw;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    flex: 1 !important;\n    align-items: center !important;\n    justify-content: space-between !important;\n  }\n\n  .label-bloc-3 {\n    flex: 0.1;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n  }\n\n  .p-container {\n    display: inline-block !important;\n    height: 100px !important;\n  }\n\n  p#dms-format {\n    horizontal-align: top !important;\n    display: inline-block !important;\n    font-weight: bolder !important;\n    font-size: 20px !important\n  }\n\n  .v-select-compas {\n    min-width: 95px !important;\n  }\n\n  .v-text-format {\n  }\n\n  .v-text-format-2 {\n    min-width: 90px !important;\n  }\n\n  .dms {\n    display: flex !important;\n    flex: 1 !important;\n    align-items: center !important;\n    max-width: 100% !important;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "72b7984ea35d8a21",
                "525d190603249cae",
                "458b64fddb9c05d6"
            ]
        ]
    },
    {
        "id": "764bf644172419d4",
        "type": "link out",
        "z": "e988301e60e4b458",
        "name": "link out 60",
        "mode": "link",
        "links": [
            "cd0ffd27aadc1ff1",
            "964efd36d61519e9",
            "d0f0965ace2cdaaf",
            "2bb3a49785cacf3b"
        ],
        "x": 655,
        "y": 660,
        "wires": []
    },
    {
        "id": "cd0ffd27aadc1ff1",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "link in 46",
        "links": [
            "764bf644172419d4",
            "32e3989018637909"
        ],
        "x": 655,
        "y": 740,
        "wires": [
            [
                "83a6ffa643836e87"
            ]
        ]
    },
    {
        "id": "cc28e6514a5a9c99",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "group": "019885275bda6e73",
        "page": "",
        "ui": "",
        "name": "Net specificity",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Net specificity</h2>\n    <div class=\"horizontal-alignment\">\n      <!-- Mouth Opening Diam. -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Mouth Opening Diam.</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          variant=\"outlined\"\n          density=\"compact\"\n          v-model=\"mouthOpeningDiam\"\n          @input=\"updatePayload\"\n          type=\"number\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog1\"\n          suffix=\"cm\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog1\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Length of the Net -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Length of the Net</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"lengthOfTheNet\"\n          @input=\"updatePayload\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog2\"\n          suffix=\"cm\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog2\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Mesh size -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Mesh size</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          v-model=\"meshSize\"\n          @input=\"updatePayload\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog3\"\n          suffix=\"μm\"\n          class=\"my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog3\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 3.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog3\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Volume of the collector -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Volume of the collector</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"volumeOfTheCollector\"\n          @input=\"updatePayload\"\n          variant=\"outlined\"\n          density=\"compact\" \n          type=\"number\" \n          append-inner-icon=\"mdi-information\" \n          @click:append-inner=\"openDialog4\" \n          suffix=\"mL\" \n          class=\"my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog4\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 4.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog4\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      dialog3: false,\n      dialog4: false,\n      mouthOpeningDiam: 0,\n      lengthOfTheNet: 0,\n      meshSize: 0,\n      volumeOfTheCollector: 0,\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n\n          // Update fields based on the payload\n          if (payload.mouth_opening_diam !== undefined) {\n            this.mouthOpeningDiam = payload.mouth_opening_diam;\n          }\n          if (payload.length_of_the_net !== undefined) {\n            this.lengthOfTheNet = payload.length_of_the_net;\n          }\n          if (payload.mesh_size !== undefined) {\n            this.meshSize = payload.mesh_size;\n          }\n          if (payload.volume_of_the_collector !== undefined) {\n            this.volumeOfTheCollector = payload.volume_of_the_collector;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog1() {\n      this.dialog1 = true;\n    },\n    openDialog2() {\n      this.dialog2 = true;\n    },\n    openDialog3() {\n      this.dialog3 = true;\n    },\n    openDialog4() {\n      this.dialog4 = true;\n    },\n    closeDialog1() {\n      this.dialog1 = false;\n    },\n    closeDialog2() {\n      this.dialog2 = false;\n    },\n    closeDialog3() {\n      this.dialog3 = false;\n    },\n    closeDialog4() {\n      this.dialog4 = false;\n    },\n    updatePayload() {\n      const payload = {\n        mouth_opening_diam: this.mouthOpeningDiam,\n        length_of_the_net: this.lengthOfTheNet,\n        mesh_size: this.meshSize,\n        volume_of_the_collector: this.volumeOfTheCollector,\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .label-bloc {\n    display: flex;\n    flex: 0.2;\n    justify-content: right !important;\n    align-items: center;\n  }\n\n  .input-bloc {\n    flex: 0.5;\n    margin-right: 10px;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  /* Adjust font size for smaller screens */\n  @media (max-width: 1180px) {\n    .my-label-general {\n      font-size: 1.1vw;\n    }\n  }\n\n  .my-label-2 {\n    margin-top: 12px !important;\n  }\n\n  .my-value-label {\n    color: #0a6eca !important;\n    font-weight: bold !important;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .c > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  div .v-btn-toggle {\n    background-color: #ffffff !important;\n  }\n\n  h2 {\n    color: #0a6eca !important;\n  }\n\n  .v-field__suffix {\n    background-color: rgba(10, 110, 202, 1);\n    padding: 0 5px;\n    border-radius: 5px;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 1160,
        "wires": [
            [
                "6109a08395735bbd",
                "7bee2ea08d6b9f54",
                "22424630f98f525f",
                "a514467c6bc076c0"
            ]
        ]
    },
    {
        "id": "86d23d1c6a0ea540",
        "type": "function",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "Format command to change page",
        "func": "if (msg.payload == \"Clicked!\") {\n  msg.payload = { page: \"Home\"}\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 240,
        "wires": [
            [
                "87f5b98130be3cd8"
            ]
        ]
    },
    {
        "id": "87f5b98130be3cd8",
        "type": "ui-control",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1120,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "470cceda379e27fc",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "group": "391804fc6b034024",
        "page": "",
        "ui": "",
        "name": "Other Information - Vertical Net",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Other Informations</h2>\n    <div class=\"horizontal-alignment-vertical-net\">\n      <!-- Filtered volume -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Filtered volume</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          variant=\"outlined\"\n          v-model=\"filteredVolume\"\n          density=\"compact\"\n          type=\"number\"\n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog1')\"\n          suffix=\"L\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog1')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Dillution factor -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Dillution factor</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          v-model=\"dillutionFactor\"\n          variant=\"outlined\" \n          density=\"compact\"\n          type=\"number\"\n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog2')\"\n          class=\"text-spacing my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog2')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Sieve mesh size -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Sieve mesh size</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          v-model=\"sieveMeshSize\"\n          variant=\"outlined\" \n          density=\"compact\"\n          type=\"number\"\n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog3')\"\n          suffix=\"μm\"\n          class=\"my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog3\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 3.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog3')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n\n    <div class=\"horizontal-alignment-vertical-net second-line\">\n      <!-- Depth Min -->\n      <div class=\"label-bloc-second-line\">\n        <label class=\"v-label v-slider__label my-label-general\">Depth Min</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          v-model=\"depthMin\"\n          variant=\"outlined\" \n          density=\"compact\"\n          type=\"number\"\n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog4')\"\n          suffix=\"m\"\n          class=\"my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog4\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 4.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog4')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Depth Max -->\n      <div class=\"label-bloc-second-line-max\">\n        <label class=\"v-label v-slider__label my-label-general\">Depth Max</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field\n          v-model=\"depthMax\"\n          variant=\"outlined\" \n          density=\"compact\"\n          type=\"number\"\n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog5')\"\n          suffix=\"m\"\n          class=\"my-v-text\"\n        ></v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog5\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 5.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog5')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n\n    <div class=\"horizontal-alignment-vertical-net textarea-alignment\">\n      <label class=\"v-label v-slider__label my-label-comment\">Sample comment</label>\n      <v-textarea class=\"my-v-textarea\" variant=\"outlined\" \n      density=\"compact\"></v-textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      dialog3: false,\n      dialog4: false,\n      dialog5: false,\n      filteredVolume: 0,\n      dillutionFactor: 0,\n      sieveMeshSize: 0,\n      depthMin: 0,\n      depthMax: 0,\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          if (newVal.payload.filtered_volume !== undefined) {\n            this.filteredVolume = newVal.payload.filtered_volume;\n          }\n          if (newVal.payload.dillution_factor !== undefined) {\n            this.dillutionFactor = newVal.payload.dillution_factor;\n          }\n          if (newVal.payload.sieve_mesh_size !== undefined) {\n            this.sieveMeshSize = newVal.payload.sieve_mesh_size;\n          }\n          if (newVal.payload.depth_min !== undefined) {\n            this.depthMin = newVal.payload.depth_min;\n          }\n          if (newVal.payload.depth_max !== undefined) {\n            this.depthMax = newVal.payload.depth_max;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog(dialog) {\n      this[dialog] = true;\n    },\n    closeDialog(dialog) {\n      this[dialog] = false;\n    },\n    updatePayload() {\n      const payload = {\n        filtered_volume: this.filteredVolume,\n        dillution_factor: this.dillutionFactor,\n        sieve_mesh_size: this.sieveMeshSize,\n        depth_min: this.depthMin,\n        depth_max: this.depthMax,\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\nh2 {\n  color: #0a6eca !important;\n  margin-bottom: 12px !important;\n}\n\n.container {\n  padding: 10px 10px !important;\n  background-color: rgba(10, 110, 202, 0.1) !important;\n  border: solid black 1px !important;\n  border-radius: 5px !important;\n}\n\n.label-bloc {\n  display: flex;\n  flex: 0.3;\n  justify-content: left !important;\n  align-items: center;\n  padding-right: 10px;\n}\n\n.label-bloc-second-line {\n  display: flex;\n  flex: 0.18;\n  justify-content: left !important;\n  align-items: center;\n}\n\n.label-bloc-second-line-max {\n  display: flex;\n  flex: 0.18;\n  justify-content: center !important;\n  align-items: center;\n}\n\n.input-bloc {\n  flex: 0.7;\n  margin-right: 10px;\n}\n\n.my-label-general {\n  margin-bottom: 20px !important;\n  font-weight: bolder;\n}\n\n.my-label-comment {\n  font-weight: bold;\n  margin-right: 15px;\n  margin-bottom: 20px;\n  font-size: 1vw;\n}\n\n.horizontal-alignment-vertical-net {\n  display: flex !important;\n  flex-wrap: wrap;\n  align-items: center !important;\n  justify-content: space-between; \n}\n\n.horizontal-alignment-vertical-net.second-line {\n  justify-content: flex-start !important;\n}\n\n.textarea-alignment {\n  margin-top: 20px;\n}\n\n.text-spacing {\n  margin-right: 12px !important;\n}\n\n.my-v-text > .v-input__control {\n  background-color: #ffffff !important;\n  border-radius: 5px !important;\n}\n\n.my-v-textarea > .v-input__control {\n  background-color: #ffffff;\n  border-radius: 5px;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 1760,
        "wires": [
            [
                "38b39c419f51dc17",
                "dfed6cc941515453",
                "3ccab9026a638be4",
                "1c5a11c4281aa967",
                "ffcf9902cdd41ad1"
            ]
        ]
    },
    {
        "id": "0eec8b84ecf95b07",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "group": "77017b73f99465f8",
        "page": "",
        "ui": "",
        "name": "Other Information - Niskin bottle",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Other Informations</h2>\n    <div class=\"horizontal-alignment\">\n      <!-- Dillution factor -->\n      <div class=\"label-bloc-niskin-bottle\">\n        <label class=\"v-label v-slider__label my-label-general\">Dillution factor</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"dillutionFactor\" \n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog1')\" \n          class=\"text-spacing my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog1')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Sieve mesh size -->\n      <div class=\"label-bloc-niskin-bottle\">\n        <label class=\"v-label v-slider__label my-label-general\">Sieve mesh size</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"sieveMeshSize\" \n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog2')\" \n          class=\"text-spacing my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog2')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Depth -->\n      <div class=\"label-bloc-niskin-bottle\">\n        <label class=\"v-label v-slider__label my-label-general\">Depth</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"depth\" \n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          @input=\"updatePayload\"\n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog('dialog3')\" \n          suffix=\"m\" \n          class=\"my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog3\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 3.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog3')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <div class=\"horizontal-alignment\">\n      <label class=\"v-label v-slider__label my-label-comment\">Sample comment</label>\n      <v-textarea v-model=\"sample_comment\" class=\"my-v-textarea\" variant=\"outlined\" density=\"compact\"></v-textarea>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      dialog3: false,\n      dillutionFactor: 0,\n      sieveMeshSize: 0,\n      depth: 0,\n      sample_comment: \"\"\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          if (newVal.payload.dillution_factor !== undefined) {\n            this.dillutionFactor = newVal.payload.dillution_factor;\n          }\n          if (newVal.payload.sieve_mesh_size !== undefined) {\n            this.sieveMeshSize = newVal.payload.sieve_mesh_size;\n          }\n          if (newVal.payload.depth !== undefined) {\n            this.depth = newVal.payload.depth;\n          }\n          if (newVal.payload.sample_comment !== undefined) {\n            this.sample_comment = newVal.payload.sample_comment;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog(dialog) {\n      this[dialog] = true;\n    },\n    closeDialog(dialog) {\n      this[dialog] = false;\n    },\n    updatePayload() {\n      const payload = {\n        dillution_factor: this.dillutionFactor,\n        sieve_mesh_size: this.sieveMeshSize,\n        depth: this.depth,\n        sample_comment: this.sample_comment,\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .label-bloc-niskin-bottle {\n    display: flex;\n    flex: 0.1;\n    justify-content: right !important;\n    align-items: center;\n  }\n\n  .input-bloc {\n    flex: 0.5;\n    margin-right: 10px;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  .my-label-comment {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  /* Adjust font size for smaller screens */\n  @media (max-width: 1180px) {\n    .my-label-general {\n      font-size: 1.1vw;\n    }\n  }\n\n  .my-label-2 {\n    margin-top: 12px !important;\n  }\n\n  .my-value-label {\n    color: #0a6eca !important;\n    font-weight: bold !important;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text>.v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .c>.v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  div .v-btn-toggle {\n    background-color: #ffffff !important;\n  }\n\n  h2 {\n    color: #0a6eca !important;\n  }\n\n  .my-v-textarea>.v-input__control {\n    background-color: #ffffff;\n    border-radius: 5px;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 2000,
        "wires": [
            [
                "78ed3523acf4aa56",
                "c50cd75b1ff8b242",
                "6863a516472cae2d",
                "31086f2f8fadc1a9"
            ]
        ]
    },
    {
        "id": "4a4db8d5c9ce9226",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "8f90fd4103e79371",
        "group": "69bf6fd7c08e68d1",
        "page": "",
        "ui": "",
        "name": "Bottle specificity",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Bottle Specificity</h2>\n    <div class=\"horizontal-alignment-bottle-specificity\">\n      <!-- Volume of the bottle -->\n      <div class=\"label-bloc-bottle-specificity\">\n        <label class=\"v-label v-slider__label my-label-general\">Volume of the bottle</label>\n      </div>\n      <v-text-field \n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"number\" \n        v-model=\"volumeOfTheBottle\"\n        @input=\"updatePayload\"\n        append-inner-icon=\"mdi-information\" \n        @click:append-inner=\"openDialog('dialog1')\" \n        suffix=\"L\"\n        class=\"text-spacing my-v-text-bottle\"\n      ></v-text-field>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog1')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      volumeOfTheBottle: 0,\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload && newVal.payload.volume_of_the_bottle !== undefined) {\n          this.volumeOfTheBottle = newVal.payload.volume_of_the_bottle;\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog(dialog) {\n      this[dialog] = true;\n    },\n    closeDialog(dialog) {\n      this[dialog] = false;\n    },\n    updatePayload() {\n      const payload = {\n        volume_of_the_bottle: this.volumeOfTheBottle,\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  .horizontal-alignment-bottle-specificity {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .label-bloc-bottle-specificity {\n    display: flex;\n    flex: 0.1;\n    justify-content: left;\n    align-items: center;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text-bottle > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .my-v-text-bottle {\n    max-width: 150px !important;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 1320,
        "wires": [
            [
                "b708f61bae3b3542"
            ]
        ]
    },
    {
        "id": "5b2b9e8bb104b3d7",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "b08415909e5dc4da",
        "group": "21166fbb24dbe7f0",
        "page": "",
        "ui": "",
        "name": "Other Information - Lab Culture & Demo / Test",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Other Informations</h2>\n    <div class=\"horizontal-alignment lab\">\n      <!-- Dillution factor -->\n      <label class=\"v-label v-slider__label my-label-general\">Dillution factor</label>\n      <v-text-field variant=\"outlined\" density=\"compact\" type=\"number\" append-inner-icon=\"mdi-information\" @click:append-inner=\"openDialog('dialog1')\"\n        class=\"text-spacing my-v-text\"></v-text-field>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog('dialog1')\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <div class=\"horizontal-alignment\">\n      <label class=\"v-label v-slider__label my-label-comment\">Sample comment</label>\n      <v-textarea class=\"my-v-textarea\" variant=\"outlined\" density=\"compact\"></v-textarea>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        dialog1: false,\n      };\n    },\n    methods: {\n      openDialog(dialog) {\n        this[dialog] = true;\n      },\n      closeDialog(dialog) {\n        this[dialog] = false;\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n  }\n\n  .my-label-comment {\n    font-weight: bold;\n    margin-right: 15px;\n    margin-bottom: 20px;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text > .v-input__control,\n  .my-v-textarea > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .lab {\n    max-width: 450px;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "e7fdcbc88dc9b248",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "ed805c7828d607cc",
        "group": "164f1a56da832d3d",
        "page": "",
        "ui": "",
        "name": "Custom sample metadata",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <v-data-table :headers=\"headers\" :items=\"metadata\" :sort-by=\"[{ key: 'description', order: 'asc' }]\">\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>Custom Sample Metadata</v-toolbar-title>\n          <v-divider class=\"mx-2\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn class=\"v-btn-new-item\" color=\"#0a6eac\" dark v-bind=\"props\">\n                Enter a metadata\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"text-h5\">{{ formTitle }}</span>\n              </v-card-title>\n\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col cols=\"12\" md=\"6\" sm=\"6\">\n                      <v-text-field v-model=\"editedItem.name\" label=\"Metadata name\"></v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"6\" sm=\"6\">\n                      <v-text-field v-model=\"editedItem.description\" label=\"Description\"></v-text-field>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"close\">\n                  Cancel\n                </v-btn>\n                <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"save\">\n                  Save\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"text-h5\">\n                Are you sure you want to delete this ?\n              </v-card-title>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"closeDelete\">\n                  Cancel\n                </v-btn>\n                <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"deleteItemConfirm\">\n                  OK\n                </v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon class=\"me-2\" size=\"small\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n        <v-icon size=\"small\" @click=\"deleteItem(item)\">\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"#0a6eac\" @click=\"initialize\">\n          Reset\n        </v-btn>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      dialog: false,\n      dialogDelete: false,\n      headers: [\n        { text: 'Your metadata', align: 'start', sortable: false, value: 'name' },\n        { text: 'Description', value: 'description' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      metadata: [],\n      editedIndex: -1,\n      editedItem: {\n        name: '',\n        description: '',\n      },\n      defaultItem: {\n        name: '',\n        description: '',\n      },\n    }),\n\n    computed: {\n      formTitle () {\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n      },\n    },\n\n    watch: {\n      dialog (val) {\n        val || this.close()\n      },\n      dialogDelete (val) {\n        val || this.closeDelete()\n      },\n    },\n\n    created () {\n      this.initialize()\n    },\n\n    methods: {\n      initialize () {\n        this.metadata = []\n      },\n\n      editItem (item) {\n        this.editedIndex = this.metadata.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n\n      deleteItem (item) {\n        this.editedIndex = this.metadata.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      },\n\n      deleteItemConfirm () {\n        this.metadata.splice(this.editedIndex, 1)\n        this.closeDelete()\n      },\n\n      close () {\n        this.dialog = false\n        this.$nextTick(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        })\n      },\n\n      closeDelete () {\n        this.dialogDelete = false\n        this.$nextTick(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        })\n      },\n\n      save () {\n        if (this.editedIndex > -1) {\n          Object.assign(this.metadata[this.editedIndex], this.editedItem)\n        } else {\n          this.metadata.push(this.editedItem)\n        }\n        this.close()\n      },\n    },\n  }\n</script>\n\n<style>\n  .v-toolbar-title__placeholder {\n    color: #0a6eca !important;\n    font-weight: bolder;\n  }\n\n  .v-btn-new-item .v-btn__content {\n    font-weight: bold;\n  }\n\n  .v-toolbar {\n    background-color: rgba(10, 110, 202, 0.2) !important;\n    border-radius: 10px;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "bf31c62fba21e7bb",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "1e747130-1d0e-11ef-8a67-d1728875f042",
        "value": "coord-format",
        "command": "read",
        "msgProperty": "payload.coordFormat",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "e5239cb6eb875cd1"
            ],
            []
        ]
    },
    {
        "id": "a4b88adea83b2353",
        "type": "ui-control",
        "z": "e988301e60e4b458",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 980,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7e6b0fe8d3df5f29",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "group": "0b7f28fdbeca7b10",
        "page": "",
        "ui": "",
        "name": "Information",
        "order": 3,
        "width": "3",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-information-container\">\n    <p id=\"date\"></p>\n    <p>-</p>\n    <p id=\"time-first-visit\"></p>\n    <span\n      class=\"mdi mdi-account\"\n      :style=\"{ color: 'black' }\"\n      @click=\"menu = true\"\n    ></span>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list-item>\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Gallery', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 320,
        "wires": [
            [
                "a7e174825f5991b0"
            ]
        ]
    },
    {
        "id": "85ae464a86f572ec",
        "type": "ui-control",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1280,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "3771bfacc7b4c6f8",
        "type": "ui-event",
        "z": "e988301e60e4b458",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 590,
        "y": 120,
        "wires": [
            [
                "08324bbd83565d26",
                "df824b3eae9a8d40"
            ]
        ]
    },
    {
        "id": "08324bbd83565d26",
        "type": "function",
        "z": "e988301e60e4b458",
        "name": "Set placeholder groups",
        "func": "msg.payload = {\n    \"group\":\n        {\n            \"show\": [],\n            \"hide\":\n                [\n                    \"Sample-2:starting-point-sample-2\",\n                    \"Sample-2:ending-point-sample-2\",\n                    \"Sample-2:net-specificity-sample-2\",\n                    \"Sample-2:other-information-horizontal-net\",\n                    \"Sample-2:other-information-vertical-net\",\n                    \"Sample-2:other-information-niskin-bottle\",\n                    \"Sample-2:bottle-specificity-sample-2\",\n                    \"Sample-2:other-information-lab-culture-&-demo\",\n                    \"Sample-2:custom-sample-metadata\"\n                ]\n        }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 100,
        "wires": [
            [
                "a4b88adea83b2353"
            ]
        ]
    },
    {
        "id": "c0aa6894fa9aaf74",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.profilName",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 460,
        "y": 320,
        "wires": [
            [
                "7e6b0fe8d3df5f29"
            ],
            []
        ]
    },
    {
        "id": "ebc182ac620954af",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "link in 93",
        "links": [
            "32e3989018637909",
            "df824b3eae9a8d40",
            "35280c47dcb8588f"
        ],
        "x": 265,
        "y": 320,
        "wires": [
            [
                "c0aa6894fa9aaf74"
            ]
        ]
    },
    {
        "id": "72b7984ea35d8a21",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "907912f0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_date",
        "command": "write",
        "msgProperty": "payload.date",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "525d190603249cae",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "aa48e480-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_time",
        "command": "write",
        "msgProperty": "payload.time",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "458b64fddb9c05d6",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "b5faaac0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_gps",
        "command": "write",
        "msgProperty": "payload.gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 820,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "96ab8a6338e4fcfc",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "907912f0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_date",
        "command": "read",
        "msgProperty": "payload.selectedDate",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 740,
        "wires": [
            [
                "83a6ffa643836e87"
            ],
            []
        ]
    },
    {
        "id": "0f42da474afce82c",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "aa48e480-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_time",
        "command": "read",
        "msgProperty": "payload.selectedTime",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 780,
        "wires": [
            [
                "83a6ffa643836e87"
            ],
            []
        ]
    },
    {
        "id": "3370481fa03529d1",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "b5faaac0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_gps",
        "command": "read",
        "msgProperty": "payload.gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "83a6ffa643836e87"
            ],
            []
        ]
    },
    {
        "id": "e401e74e5001fd4e",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "link in 98",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 740,
        "wires": [
            [
                "96ab8a6338e4fcfc"
            ]
        ]
    },
    {
        "id": "f1cd6cda6811df0d",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "link in 99",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 780,
        "wires": [
            [
                "0f42da474afce82c"
            ]
        ]
    },
    {
        "id": "86625c5739968525",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "45c6a7006373dadb",
        "name": "link in 100",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "3370481fa03529d1"
            ]
        ]
    },
    {
        "id": "e5239cb6eb875cd1",
        "type": "function",
        "z": "e988301e60e4b458",
        "name": "Set format",
        "func": "\nmsg.payload = {\n    coordFormat: msg.payload.coordFormat\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 660,
        "wires": [
            [
                "764bf644172419d4"
            ]
        ]
    },
    {
        "id": "df824b3eae9a8d40",
        "type": "link out",
        "z": "e988301e60e4b458",
        "name": "link out 95",
        "mode": "link",
        "links": [
            "ebc182ac620954af",
            "bac194ac08ecd558",
            "ab8f773ee48978da"
        ],
        "x": 695,
        "y": 140,
        "wires": []
    },
    {
        "id": "10db78f4fa94db24",
        "type": "inject",
        "z": "e988301e60e4b458",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "d82f912c99fe109a"
            ]
        ]
    },
    {
        "id": "d82f912c99fe109a",
        "type": "link out",
        "z": "e988301e60e4b458",
        "name": "link out 97",
        "mode": "link",
        "links": [
            "e401e74e5001fd4e",
            "f1cd6cda6811df0d",
            "86625c5739968525",
            "e4e5f2ac69be59ad",
            "afb75295088447a9",
            "a7c6dcbeac498a50",
            "ee299c19ad77b417",
            "6a44d416b4b28ead",
            "d8c320a906f03e95",
            "30d76989325c8687",
            "7d0319cde5add08f",
            "2cb31920428a948a",
            "71664d572a015628",
            "9b5ddb73e366a41d",
            "4266ec86f97942f1",
            "804d3f87369f71d5",
            "75ebd65cfeb5e7cf",
            "cd4dc3d12bbb62b0",
            "5c7ecc122bb46f08",
            "b4ae98a7ea25b34c",
            "aafeb9eb3283012d",
            "2ea39cad69e2deed",
            "ccc99ab3b0fae92f",
            "df2075943eba1d2d",
            "5de1187ebfd8bc79",
            "be6eeee0eb1be6d8",
            "b8678d0aef18a2b8",
            "52c9cc5d25da1cd7",
            "0c3837abf17b6e69",
            "c727fe7b031df253",
            "d691c85dafa9e96e",
            "e1a92eec5d78dfc2",
            "8e84a78cf2bc0972",
            "a64633dc848b180d"
        ],
        "x": 495,
        "y": 100,
        "wires": []
    },
    {
        "id": "e4e5f2ac69be59ad",
        "type": "link in",
        "z": "e988301e60e4b458",
        "name": "link in 101",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 660,
        "wires": [
            [
                "bf31c62fba21e7bb"
            ]
        ]
    },
    {
        "id": "7749d4dc3f8e7fa5",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "group": "6207a599159ef6eb",
        "page": "",
        "ui": "",
        "name": "Ending point",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Ending point</h2>\n    <div class=\"horizontal-alignment\">\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-date\">Date</label>\n      </div>\n      <v-text-field\n        v-model=\"selectedDate\"\n        @input=\"updatePayload\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"date\"\n        class=\"my-v-text\"\n      ></v-text-field>\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-time\">Time</label>\n      </div>\n      <v-text-field\n        v-model=\"selectedTime\"\n        @input=\"updatePayload\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"time\"\n        class=\"my-v-text\"\n      ></v-text-field>\n    </div>\n    <div v-if=\"coordFormat === 'Decimal degrees (DD)'\" class=\"horizontal-alignment\">\n      <div class=\"label-bloc-3\">\n        <label class=\"v-label label-DD\">GPS</label>\n      </div>\n      <v-text-field\n        v-model=\"longitude\"\n        @input=\"updatePayload\"\n        label=\"Longitude\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"number\"\n        class=\"my-v-text spacing\"\n      ></v-text-field>\n      <v-text-field\n        v-model=\"latitude\"\n        @input=\"updatePayload\"\n        label=\"Latitude\"\n        variant=\"outlined\"\n        density=\"compact\"\n        type=\"number\"\n        class=\"my-v-text\"\n      ></v-text-field>\n    </div>\n    <div v-else class=\"horizontal-alignment\">\n      <div class=\"dms\">\n        <div class=\"label-bloc-3\">\n          <label class=\"v-label my-label-gps\">GPS</label>\n        </div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.degrees\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">°</p></div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.minutes\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">'</p></div>\n        <v-text-field\n          v-model.number=\"dmsLongitude.seconds\"\n          @input=\"updatePayload\"\n          label=\"XX.XXX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format-2\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">\"</p></div>\n        <v-select\n          v-model=\"dmsLongitude.direction\"\n          @input=\"updatePayload\"\n          label=\"W-E\"\n          :items=\"['W', 'E']\"\n          variant=\"outlined\"\n          density=\"compact\"\n          class=\"v-select-compas\"\n        ></v-select>\n        <div class=\"grid-container\"><v-icon icon=\"mdi-minus\" size=\"large\"></v-icon></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.degrees\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">°</p></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.minutes\"\n          @input=\"updatePayload\"\n          label=\"XX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">'</p></div>\n        <v-text-field\n          v-model.number=\"dmsLatitude.seconds\"\n          @input=\"updatePayload\"\n          label=\"XX.XXX\"\n          variant=\"outlined\"\n          density=\"compact\"\n          type=\"number\"\n          class=\"my-v-text v-text-format-2\"\n        ></v-text-field>\n        <div class=\"p-container\"><p id=\"dms-format\">\"</p></div>\n        <v-select\n          v-model=\"dmsLatitude.direction\"\n          @input=\"updatePayload\"\n          label=\"N-S\"\n          :items=\"['N', 'S']\"\n          variant=\"outlined\"\n          density=\"compact\"\n          class=\"v-select-compas\"\n        ></v-select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      coordFormat: \"\",\n      selectedDate: \"\",\n      selectedTime: \"\",\n      longitude: null,\n      latitude: null,\n      dmsLongitude: {\n        degrees: null,\n        minutes: null,\n        seconds: null,\n        direction: 'E',\n      },\n      dmsLatitude: {\n        degrees: null,\n        minutes: null,\n        seconds: null,\n        direction: 'N',\n      },\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n\n          // Update fields based on the payload\n          if (payload.coordFormat !== undefined) {\n            this.coordFormat = payload.coordFormat;\n          }\n          if (payload.selectedDate !== undefined) {\n            this.selectedDate = payload.selectedDate;\n          }\n          if (payload.selectedTime !== undefined) {\n            this.selectedTime = payload.selectedTime;\n          }\n          if (payload.gps) {\n            if (this.coordFormat === 'Decimal degrees (DD)') {\n              if (payload.gps.longitude !== undefined) {\n                this.longitude = payload.gps.longitude;\n              }\n              if (payload.gps.latitude !== undefined) {\n                this.latitude = payload.gps.latitude;\n              }\n            } else {\n              if (payload.gps.longitude !== undefined) {\n                this.dmsLongitude = {\n                  ...this.dmsLongitude,\n                  ...payload.gps.longitude\n                };\n              }\n              if (payload.gps.latitude !== undefined) {\n                this.dmsLatitude = {\n                  ...this.dmsLatitude,\n                  ...payload.gps.latitude\n                };\n              }\n            }\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    updatePayload() {\n      const payload = {\n        date: this.selectedDate,\n        time: this.selectedTime,\n        gps: this.coordFormat === 'Decimal degrees (DD)'\n          ? { longitude: this.longitude, latitude: this.latitude }\n          : {\n              longitude: this.dmsLongitude,\n              latitude: this.dmsLatitude,\n            },\n      };\n      this.send({ payload });\n    }\n  },\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n  }\n\n  .spacing {\n    margin-right: 15px !important;\n  }\n\n  .my-v-text > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .v-select-compas > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .container {\n    padding: 10px !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .grid-container {\n    display: grid !important;\n    height: 5vh !important;\n  }\n\n  .my-label-gps {\n    font-weight: bold !important;\n    flex: 2 !important;\n    margin-bottom: 20px !important;\n    font-size: 1vw !important;\n  }\n\n  .label-DD {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    font-size: 1vw;\n  }\n\n  .label-date {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    font-size: 1vw;\n  }\n\n  .label-time {\n    font-weight: bold !important;\n    margin-bottom: 20px !important;\n    padding-right: 15px !important;\n    padding-left: 25px !important;\n    font-size: 1vw;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    flex: 1 !important;\n    align-items: center !important;\n    justify-content: space-between !important;\n  }\n\n  .label-bloc-3 {\n    flex: 0.1;\n    display: flex;\n    justify-content: left;\n    align-items: center;\n  }\n\n  .p-container {\n    display: inline-block !important;\n    height: 100px !important;\n  }\n\n  p#dms-format {\n    horizontal-align: top !important;\n    display: inline-block !important;\n    font-weight: bolder !important;\n    font-size: 20px !important\n  }\n\n  .v-select-compas {\n    min-width: 95px !important;\n  }\n\n  .v-text-format {\n  }\n\n  .v-text-format-2 {\n    min-width: 90px !important;\n  }\n\n  .dms {\n    display: flex !important;\n    flex: 1 !important;\n    align-items: center !important;\n    max-width: 100% !important;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 710,
        "y": 960,
        "wires": [
            [
                "fc386a9e16260470",
                "44f2e8c09ba525bd",
                "e1496d26ab368e0a"
            ]
        ]
    },
    {
        "id": "2bb3a49785cacf3b",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "link in 102",
        "links": [
            "764bf644172419d4",
            "32e3989018637909"
        ],
        "x": 655,
        "y": 920,
        "wires": [
            [
                "7749d4dc3f8e7fa5"
            ]
        ]
    },
    {
        "id": "fc386a9e16260470",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d66c06a0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_date",
        "command": "write",
        "msgProperty": "payload.date",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "44f2e8c09ba525bd",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6b592c0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_time",
        "command": "write",
        "msgProperty": "payload.time",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e1496d26ab368e0a",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6e55550-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_gps",
        "command": "write",
        "msgProperty": "payload.gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 1000,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0d4af74dc3740347",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d66c06a0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_date",
        "command": "read",
        "msgProperty": "payload.selectedDate",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 920,
        "wires": [
            [
                "7749d4dc3f8e7fa5"
            ],
            []
        ]
    },
    {
        "id": "ac3ec79e3b41827f",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6b592c0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_time",
        "command": "read",
        "msgProperty": "payload.selectedTime",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 960,
        "wires": [
            [
                "7749d4dc3f8e7fa5"
            ],
            []
        ]
    },
    {
        "id": "fb2959a5122f4779",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6e55550-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_gps",
        "command": "read",
        "msgProperty": "payload.gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "7749d4dc3f8e7fa5"
            ],
            []
        ]
    },
    {
        "id": "6a44d416b4b28ead",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "link in 103",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 920,
        "wires": [
            [
                "0d4af74dc3740347"
            ]
        ]
    },
    {
        "id": "d8c320a906f03e95",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "link in 104",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 960,
        "wires": [
            [
                "ac3ec79e3b41827f"
            ]
        ]
    },
    {
        "id": "30d76989325c8687",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "95c11e857d45c6ae",
        "name": "link in 105",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1000,
        "wires": [
            [
                "fb2959a5122f4779"
            ]
        ]
    },
    {
        "id": "35bf8991beb7e84d",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8dad4db0-4e50-11ef-86a5-e9c7b2057935",
        "value": "project_name",
        "command": "read",
        "msgProperty": "payload.project_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 420,
        "y": 500,
        "wires": [
            [
                "23a443593bbc53fe"
            ],
            []
        ]
    },
    {
        "id": "6836b771497a13ae",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "90285fd0-4e50-11ef-86a5-e9c7b2057935",
        "value": "sample_id",
        "command": "read",
        "msgProperty": "payload.sample_id",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 410,
        "y": 540,
        "wires": [
            [
                "23a443593bbc53fe"
            ],
            []
        ]
    },
    {
        "id": "bac194ac08ecd558",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "link in 106",
        "links": [
            "32e3989018637909",
            "df824b3eae9a8d40",
            "35280c47dcb8588f"
        ],
        "x": 215,
        "y": 500,
        "wires": [
            [
                "35bf8991beb7e84d"
            ]
        ]
    },
    {
        "id": "ab8f773ee48978da",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "link in 107",
        "links": [
            "32e3989018637909",
            "df824b3eae9a8d40",
            "35280c47dcb8588f"
        ],
        "x": 215,
        "y": 540,
        "wires": [
            [
                "6836b771497a13ae"
            ]
        ]
    },
    {
        "id": "0caf8dc53c166886",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8dad4db0-4e50-11ef-86a5-e9c7b2057935",
        "value": "project_name",
        "command": "write",
        "msgProperty": "payload.project_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1240,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a1f5a28590776828",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "90285fd0-4e50-11ef-86a5-e9c7b2057935",
        "value": "sample_id",
        "command": "write",
        "msgProperty": "payload.sample_id",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1230,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "26384e9142c6e77d",
        "type": "switch",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "If gear",
        "property": "payload.gear",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 520,
        "wires": [
            [
                "a1f5a28590776828",
                "0caf8dc53c166886"
            ],
            [
                "7220b5161dc33941",
                "ceccdeb615cdc48b"
            ]
        ]
    },
    {
        "id": "73f91661b6841190",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "80f7c120-4e52-11ef-86a5-e9c7b2057935",
        "value": "mouth_opening_diam",
        "command": "read",
        "msgProperty": "payload.mouth_opening_diam",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "cc28e6514a5a9c99"
            ],
            []
        ]
    },
    {
        "id": "7d0319cde5add08f",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "link in 108",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1100,
        "wires": [
            [
                "73f91661b6841190"
            ]
        ]
    },
    {
        "id": "27c7bd9710ac7319",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "82b15800-4e52-11ef-86a5-e9c7b2057935",
        "value": "length_of_the_net",
        "command": "read",
        "msgProperty": "payload.length_of_the_net",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1140,
        "wires": [
            [
                "cc28e6514a5a9c99"
            ],
            []
        ]
    },
    {
        "id": "2cb31920428a948a",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "link in 109",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1140,
        "wires": [
            [
                "27c7bd9710ac7319"
            ]
        ]
    },
    {
        "id": "76c578ddabf2971c",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8330e840-4e52-11ef-86a5-e9c7b2057935",
        "value": "mesh_size",
        "command": "read",
        "msgProperty": "payload.mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "cc28e6514a5a9c99"
            ],
            []
        ]
    },
    {
        "id": "71664d572a015628",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "link in 110",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1180,
        "wires": [
            [
                "76c578ddabf2971c"
            ]
        ]
    },
    {
        "id": "f92c7e06d2ed0d87",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "836ae400-4e52-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_collector",
        "command": "read",
        "msgProperty": "payload.volume_of_the_collector",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "cc28e6514a5a9c99"
            ],
            []
        ]
    },
    {
        "id": "9b5ddb73e366a41d",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "link in 111",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1220,
        "wires": [
            [
                "f92c7e06d2ed0d87"
            ]
        ]
    },
    {
        "id": "6109a08395735bbd",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "80f7c120-4e52-11ef-86a5-e9c7b2057935",
        "value": "mouth_opening_diam",
        "command": "write",
        "msgProperty": "payload.mouth_opening_diam",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1060,
        "y": 1100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7bee2ea08d6b9f54",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "82b15800-4e52-11ef-86a5-e9c7b2057935",
        "value": "length_of_the_net",
        "command": "write",
        "msgProperty": "payload.length_of_the_net",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1050,
        "y": 1140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "22424630f98f525f",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8330e840-4e52-11ef-86a5-e9c7b2057935",
        "value": "mesh_size",
        "command": "write",
        "msgProperty": "payload.mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1030,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a514467c6bc076c0",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "3e8b16808b1bfff5",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "836ae400-4e52-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_collector",
        "command": "write",
        "msgProperty": "payload.volume_of_the_collector",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1070,
        "y": 1220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "de68f6faec1d0aec",
        "type": "ui-template",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "group": "c55346437d043dfc",
        "page": "",
        "ui": "",
        "name": "Other Informations - Horizontal Net",
        "order": 1,
        "width": "12",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"container\">\n    <h2>Other Informations</h2>\n    <div class=\"horizontal-alignment\">\n      <!-- Filtered volume -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Filtered volume</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"filteredVolume\" \n          @input=\"updatePayload\"\n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog1\" \n          suffix=\"L\" \n          class=\"text-spacing my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog1\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Dillution factor -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Dillution factor</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"dillutionFactor\" \n          @input=\"updatePayload\"\n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog2\" \n          class=\"text-spacing my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog2\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Sieve mesh size -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Sieve mesh size</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"sieveMeshSize\" \n          @input=\"updatePayload\"\n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog3\" \n          suffix=\"μm\" \n          class=\"my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog3\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 3.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog3\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <!-- Depth of the sample -->\n      <div class=\"label-bloc\">\n        <label class=\"v-label v-slider__label my-label-general\">Depth of the sample</label>\n      </div>\n      <div class=\"input-bloc\">\n        <v-text-field \n          v-model=\"depthOfTheSample\" \n          @input=\"updatePayload\"\n          variant=\"outlined\" \n          density=\"compact\" \n          type=\"number\" \n          append-inner-icon=\"mdi-information\"\n          @click:append-inner=\"openDialog4\" \n          suffix=\"m\" \n          class=\"my-v-text\">\n        </v-text-field>\n      </div>\n      <v-dialog v-model=\"dialog4\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 4.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog4\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <div class=\"horizontal-alignment\">\n      <label class=\"v-label v-slider__label my-label-comment\">Sample comment</label>\n      <v-textarea \n        v-model=\"sampleComment\" \n        @input=\"updatePayload\"\n        class=\"my-v-textarea\" \n        variant=\"outlined\" \n        density=\"compact\">\n      </v-textarea>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      dialog1: false,\n      dialog2: false,\n      dialog3: false,\n      dialog4: false,\n      filteredVolume: 0,\n      dillutionFactor: 0,\n      sieveMeshSize: 0,\n      depthOfTheSample: 0,\n      sampleComment: '',\n    };\n  },\n  watch: {\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n\n          // Update fields based on the payload\n          if (payload.filtered_volume !== undefined) {\n            this.filteredVolume = payload.filtered_volume;\n          }\n          if (payload.dillution_factor !== undefined) {\n            this.dillutionFactor = payload.dillution_factor;\n          }\n          if (payload.sieve_mesh_size !== undefined) {\n            this.sieveMeshSize = payload.sieve_mesh_size;\n          }\n          if (payload.depth_of_the_sample !== undefined) {\n            this.depthOfTheSample = payload.depth_of_the_sample;\n          }\n          if (payload.sample_comment !== undefined) {\n            this.sampleComment = payload.sample_comment;\n          }\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog1() {\n      this.dialog1 = true;\n    },\n    openDialog2() {\n      this.dialog2 = true;\n    },\n    openDialog3() {\n      this.dialog3 = true;\n    },\n    openDialog4() {\n      this.dialog4 = true;\n    },\n    closeDialog1() {\n      this.dialog1 = false;\n    },\n    closeDialog2() {\n      this.dialog2 = false;\n    },\n    closeDialog3() {\n      this.dialog3 = false;\n    },\n    closeDialog4() {\n      this.dialog4 = false;\n    },\n    updatePayload() {\n      const payload = {\n        filtered_volume: this.filteredVolume,\n        dillution_factor: this.dillutionFactor,\n        sieve_mesh_size: this.sieveMeshSize,\n        depth_of_the_sample: this.depthOfTheSample,\n        sample_comment: this.sampleComment,\n      };\n      this.send({ payload });\n    }\n  }\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 12px !important;\n  }\n\n  .label-bloc {\n    display: flex;\n    flex: 0.2;\n    justify-content: right !important;\n    align-items: center;\n  }\n\n  .input-bloc {\n    flex: 0.5;\n    margin-right: 10px;\n  }\n\n  .container {\n    padding: 10px 10px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n  }\n\n  .my-label-general {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  .my-label-comment {\n    margin-bottom: 20px !important;\n    font-weight: bolder;\n    font-size: 1vw;\n  }\n\n  /* Adjust font size for smaller screens */\n  @media (max-width: 1180px) {\n    .my-label-general {\n      font-size: 1.1vw;\n    }\n  }\n\n  .my-label-2 {\n    margin-top: 12px !important;\n  }\n\n  .my-value-label {\n    color: #0a6eca !important;\n    font-weight: bold !important;\n  }\n\n  .horizontal-alignment {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .text-spacing {\n    margin-right: 12px !important;\n  }\n\n  .my-v-text>.v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .c>.v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  div .v-btn-toggle {\n    background-color: #ffffff !important;\n  }\n\n  h2 {\n    color: #0a6eca !important;\n  }\n\n  .my-v-textarea>.v-input__control {\n    background-color: #ffffff;\n    border-radius: 5px;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 1500,
        "wires": [
            [
                "b8e827b49ed71ded",
                "86ae07e38e28ca04",
                "06f62ec6bb72808a",
                "2fe68d76dd3ae605",
                "d066cad88c9c9fd0"
            ]
        ]
    },
    {
        "id": "d2e3027e09f33d42",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sample_comment",
        "command": "read",
        "msgProperty": "payload.sample_comment",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1580,
        "wires": [
            [
                "de68f6faec1d0aec"
            ],
            []
        ]
    },
    {
        "id": "11d0f008572b1816",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "filtered_volume",
        "command": "read",
        "msgProperty": "payload.filtered_volume",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 1420,
        "wires": [
            [
                "de68f6faec1d0aec"
            ],
            []
        ]
    },
    {
        "id": "88988d2b5efe7a55",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "read",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "de68f6faec1d0aec"
            ],
            []
        ]
    },
    {
        "id": "aab491fd4d8d370e",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "read",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1500,
        "wires": [
            [
                "de68f6faec1d0aec"
            ],
            []
        ]
    },
    {
        "id": "b59379492732a989",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "4195d170-4e5c-11ef-86a5-e9c7b2057935",
        "value": "depth_of_the_sample",
        "command": "read",
        "msgProperty": "payload.depth_of_the_sample",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 1540,
        "wires": [
            [
                "de68f6faec1d0aec"
            ],
            []
        ]
    },
    {
        "id": "b4ae98a7ea25b34c",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "link in 112",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1420,
        "wires": [
            [
                "11d0f008572b1816"
            ]
        ]
    },
    {
        "id": "aafeb9eb3283012d",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "link in 113",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1460,
        "wires": [
            [
                "88988d2b5efe7a55"
            ]
        ]
    },
    {
        "id": "2ea39cad69e2deed",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "link in 114",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1500,
        "wires": [
            [
                "aab491fd4d8d370e"
            ]
        ]
    },
    {
        "id": "ccc99ab3b0fae92f",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "link in 115",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1540,
        "wires": [
            [
                "b59379492732a989"
            ]
        ]
    },
    {
        "id": "df2075943eba1d2d",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "link in 116",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1580,
        "wires": [
            [
                "d2e3027e09f33d42"
            ]
        ]
    },
    {
        "id": "d066cad88c9c9fd0",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sample_comment",
        "command": "write",
        "msgProperty": "payload.sample_comment",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1170,
        "y": 1580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b8e827b49ed71ded",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "filtered_volume",
        "command": "write",
        "msgProperty": "payload.filtered_volume",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1160,
        "y": 1420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "86ae07e38e28ca04",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "write",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1160,
        "y": 1460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "06f62ec6bb72808a",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "write",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1170,
        "y": 1500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2fe68d76dd3ae605",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "b41373330b156c48",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "4195d170-4e5c-11ef-86a5-e9c7b2057935",
        "value": "depth_of_the_sample",
        "command": "write",
        "msgProperty": "payload.depth_of_the_sample",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1180,
        "y": 1540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8602fcc44b294bfc",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "8f90fd4103e79371",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "836ae400-4e52-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_collector",
        "command": "read",
        "msgProperty": "payload.volume_of_the_bottle",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "4a4db8d5c9ce9226"
            ],
            []
        ]
    },
    {
        "id": "5de1187ebfd8bc79",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "8f90fd4103e79371",
        "name": "link in 117",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1320,
        "wires": [
            [
                "8602fcc44b294bfc"
            ]
        ]
    },
    {
        "id": "b708f61bae3b3542",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "8f90fd4103e79371",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "836ae400-4e52-11ef-86a5-e9c7b2057935",
        "value": "volume_of_the_collector",
        "command": "write",
        "msgProperty": "payload.volume_of_the_bottle",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1070,
        "y": 1320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f31535161df5937b",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "filtered_volume",
        "command": "read",
        "msgProperty": "payload.filtered_volume",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "470cceda379e27fc"
            ],
            []
        ]
    },
    {
        "id": "ba086b5748dc75a9",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "read",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 1720,
        "wires": [
            [
                "470cceda379e27fc"
            ],
            []
        ]
    },
    {
        "id": "ebabbfe97e25d57a",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "read",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1760,
        "wires": [
            [
                "470cceda379e27fc"
            ],
            []
        ]
    },
    {
        "id": "be6eeee0eb1be6d8",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "link in 118",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1760,
        "wires": [
            [
                "ebabbfe97e25d57a"
            ]
        ]
    },
    {
        "id": "b8678d0aef18a2b8",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "link in 119",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1720,
        "wires": [
            [
                "ba086b5748dc75a9"
            ]
        ]
    },
    {
        "id": "52c9cc5d25da1cd7",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "link in 120",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1680,
        "wires": [
            [
                "f31535161df5937b"
            ]
        ]
    },
    {
        "id": "38b39c419f51dc17",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "40e9b2f0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "filtered_volume",
        "command": "write",
        "msgProperty": "payload.filtered_volume",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1140,
        "y": 1680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dfed6cc941515453",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "write",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1140,
        "y": 1720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3ccab9026a638be4",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "write",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1150,
        "y": 1760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b33763b35fe6bed5",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "978fb080-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_max",
        "command": "read",
        "msgProperty": "payload.depth_max",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 330,
        "y": 1800,
        "wires": [
            [
                "470cceda379e27fc"
            ],
            []
        ]
    },
    {
        "id": "5ff224fdd65af7b4",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_min",
        "command": "read",
        "msgProperty": "payload.depth_min",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 330,
        "y": 1840,
        "wires": [
            [
                "470cceda379e27fc"
            ],
            []
        ]
    },
    {
        "id": "1c5a11c4281aa967",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "978fb080-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_max",
        "command": "write",
        "msgProperty": "payload.depth_max",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1130,
        "y": 1800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ffcf9902cdd41ad1",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_min",
        "command": "write",
        "msgProperty": "payload.depth_min",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1130,
        "y": 1840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0c3837abf17b6e69",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "link in 121",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1800,
        "wires": [
            [
                "b33763b35fe6bed5"
            ]
        ]
    },
    {
        "id": "c727fe7b031df253",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fcefc59d8d36e714",
        "name": "link in 122",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1840,
        "wires": [
            [
                "5ff224fdd65af7b4"
            ]
        ]
    },
    {
        "id": "5ac56b2b093b7f88",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "read",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 1980,
        "wires": [
            [
                "0eec8b84ecf95b07"
            ],
            []
        ]
    },
    {
        "id": "b5126cbae5244cd0",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "read",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 340,
        "y": 1940,
        "wires": [
            [
                "0eec8b84ecf95b07"
            ],
            []
        ]
    },
    {
        "id": "d691c85dafa9e96e",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "link in 123",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1980,
        "wires": [
            [
                "5ac56b2b093b7f88"
            ]
        ]
    },
    {
        "id": "e1a92eec5d78dfc2",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "link in 124",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 1940,
        "wires": [
            [
                "b5126cbae5244cd0"
            ]
        ]
    },
    {
        "id": "78ed3523acf4aa56",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "write",
        "msgProperty": "payload.dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1160,
        "y": 1940,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c50cd75b1ff8b242",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "write",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1170,
        "y": 1980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d87add2bc6bd4ca6",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "read",
        "msgProperty": "payload.depth",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "0eec8b84ecf95b07"
            ],
            []
        ]
    },
    {
        "id": "8e84a78cf2bc0972",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "link in 125",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 2020,
        "wires": [
            [
                "d87add2bc6bd4ca6"
            ]
        ]
    },
    {
        "id": "6863a516472cae2d",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "write",
        "msgProperty": "payload.depth",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1170,
        "y": 2020,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "05ce26a33861a872",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sample_comment",
        "command": "read",
        "msgProperty": "payload.sample_comment",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 2060,
        "wires": [
            [
                "0eec8b84ecf95b07"
            ],
            []
        ]
    },
    {
        "id": "31086f2f8fadc1a9",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "69ca7b50-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sample_comment",
        "command": "write",
        "msgProperty": "payload.sample_comment",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1170,
        "y": 2060,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a64633dc848b180d",
        "type": "link in",
        "z": "e988301e60e4b458",
        "g": "fb17654b4a11e0db",
        "name": "link in 126",
        "links": [
            "32e3989018637909",
            "399010b7aa9cafb2",
            "d82f912c99fe109a"
        ],
        "x": 125,
        "y": 2060,
        "wires": [
            [
                "05ce26a33861a872"
            ]
        ]
    },
    {
        "id": "e367adcfacf8716e",
        "type": "inject",
        "z": "e988301e60e4b458",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "35280c47dcb8588f"
            ]
        ]
    },
    {
        "id": "35280c47dcb8588f",
        "type": "link out",
        "z": "e988301e60e4b458",
        "name": "link out 99",
        "mode": "link",
        "links": [
            "ebc182ac620954af",
            "bac194ac08ecd558",
            "ab8f773ee48978da"
        ],
        "x": 495,
        "y": 140,
        "wires": []
    },
    {
        "id": "7220b5161dc33941",
        "type": "persistent value",
        "z": "e988301e60e4b458",
        "g": "307fb977cf47b651",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "5ecde410-4ff8-11ef-8af0-151edf01ff7c",
        "value": "sampling_gear",
        "command": "write",
        "msgProperty": "payload.gear",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1240,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "88baa8ae55dc9fe2",
        "type": "link out",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "link out 117",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1375,
        "y": 320,
        "wires": []
    },
    {
        "id": "f7640955206f3cad",
        "type": "link out",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "link out 118",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1375,
        "y": 360,
        "wires": []
    },
    {
        "id": "dd2350a61698dc85",
        "type": "switch",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "88baa8ae55dc9fe2"
            ],
            [
                "f7640955206f3cad"
            ]
        ]
    },
    {
        "id": "5c29c3693e422965",
        "type": "switch",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 320,
        "wires": [
            [
                "85ae464a86f572ec"
            ],
            [
                "dd2350a61698dc85"
            ]
        ]
    },
    {
        "id": "a7e174825f5991b0",
        "type": "function",
        "z": "e988301e60e4b458",
        "g": "610c7571a6ee5612",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 320,
        "wires": [
            [
                "5c29c3693e422965"
            ]
        ]
    },
    {
        "id": "7bcdca966429e51e",
        "type": "ui-template",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "group": "87b4aa991f82d46e",
        "page": "",
        "ui": "",
        "name": "Title",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"center-container\" @click=\"navigateToHome\">\n        <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"Description de l'image\" class=\"center-image-1\">\n        <h3>PlanktoScope GUI</h3>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        navigateToHome() {\n            this.send(\"Clicked!\");\n        }\n    }\n}\n</script>\n\n<style scoped>\n    h3 {\n        font-size: 1vw;\n    }\n\n    .center-container {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .center-image-1 {\n        margin-right: 25px;\n        max-width: 40px;\n        line-height: 0px;\n    }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "b6d0e22f33ca686c"
            ]
        ]
    },
    {
        "id": "25b3ad405bfa567a",
        "type": "ui-template",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "group": "87b4aa991f82d46e",
        "page": "",
        "ui": "",
        "name": "Step bar",
        "order": 2,
        "width": "7",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper class=\"my-stepper\" model-value=\"3\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n          @click=\"stepClicked(1)\"\n        >\n          Preview\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n          @click=\"stepClicked(2)\"\n        >\n          Sample\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n          @click=\"stepClicked(3)\"\n          class=\"selected-step\"\n        >\n          Acquisition\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"4\"\n          editable\n          @click=\"stepClicked(4)\"\n        >\n          Segmentation\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"5\"\n          editable\n          @click=\"stepClicked(5)\"\n        >\n          Visualisation\n        </v-stepper-item>\n\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        this.send(step);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  div.v-stepper.v-sheet {\n    background-color: transparent;\n    box-shadow: none;\n    border-radius: 0px;\n    overflow: hidden;\n  }\n\n  .v-stepper-header {\n    display: flex;\n    align-items: center;\n  }\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "bf4e6ca4f9cb03d0"
            ]
        ]
    },
    {
        "id": "c7e80bc0431e15d7",
        "type": "ui-control",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1100,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bf4e6ca4f9cb03d0",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "Format command to change page",
        "func": "const numberStringMap = {\n  1: \"Preview\",\n  2: \"Sample\",\n  3: \"Acquisition\",\n  4: \"Segmentation\",\n  5: \"Visualization\"\n};\n\nconst key = numberStringMap[msg.payload];\n\nif (key) {\n  msg.payload = { \"page\": numberStringMap[msg.payload] };\n} else {\n  console.log(`Key not found for value: ${msg.payload}`);\n  msg.payload = { \"page\": null };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 200,
        "wires": [
            [
                "c7e80bc0431e15d7"
            ]
        ]
    },
    {
        "id": "2ef2375e2641e206",
        "type": "ui-template",
        "z": "70f558eb9d60b6fc",
        "g": "5f803d43d3f15b83",
        "group": "cba12c582214576b",
        "page": "",
        "ui": "",
        "name": "Streaming",
        "order": 1,
        "width": "8",
        "height": "13",
        "head": "",
        "format": "<template>\n  <div class=\"image-zoom-container\"\n       @touchstart=\"handleTouchStart\"\n       @touchmove.prevent=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       @mousemove=\"handleMouseMove\"\n       @mouseleave=\"handleMouseLeave\">\n    <div class=\"image-wrapper\">\n        <img src=\"http://92.167.184.163/ps/hal/camera/streams/preview.mjpg\">\n        <!--<img src=\"/ps/hal/camera/streams/preview.mjpg\">-->\n    </div>\n    <!--<div class=\"zoomed-image\" :style=\"zoomedImageStyle\"></div>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      zoomedImageStyle: {\n        display: 'none',\n        backgroundImage: '',\n        backgroundSize: 'cover',\n        transformOrigin: 'center center',\n        transform: 'scale(2)', // Facteur de zoom initial\n        pointerEvents: 'none',\n        position: 'absolute',\n        width: '150px', // Taille réduite de l'image zoomée\n        height: '200px', // Taille réduite de l'image zoomée\n        border: '1px solid black',\n        zIndex: '1000',\n      },\n      touchStartX: 0,\n      touchStartY: 0,\n      isTouching: false,\n    };\n  },\n  methods: {\n    handleMouseMove(e) {\n      if (!this.isTouching) {\n        this.updateZoomPosition(e);\n      }\n    },\n    handleTouchStart(e) {\n      const touch = e.touches[0];\n      this.touchStartX = touch.clientX;\n      this.touchStartY = touch.clientY;\n      this.isTouching = true;\n      this.updateZoomPosition(touch);\n    },\n    handleTouchMove(e) {\n      if (this.isTouching) {\n        const touch = e.touches[0];\n        this.updateZoomPosition(touch);\n      }\n    },\n    handleTouchEnd() {\n      this.isTouching = false;\n      this.zoomedImageStyle.display = 'none';\n    },\n    handleMouseLeave() {\n      if (!this.isTouching) {\n        this.zoomedImageStyle.display = 'none';\n      }\n    },\n    updateZoomPosition(e) {\n      const { left, top, width, height } = this.$refs.image.getBoundingClientRect();\n\n      const x = e.clientX - left;\n      const y = e.clientY - top;\n\n      const zoomBoxSize = 100;\n\n      // Calcul des déplacements pour centrer l'image zoomée sur le curseur/toucher\n      const zoomedX = -(x * 2 - zoomBoxSize / 2);\n      const zoomedY = -(y * 2 - zoomBoxSize / 2);\n\n      // Positionne l'image zoomée centrée sur le curseur/toucher\n      this.zoomedImageStyle.display = 'block';\n      this.zoomedImageStyle.backgroundImage = `url(${this.$refs.image.src})`;\n      this.zoomedImageStyle.backgroundSize = `${width * 2}px ${height * 2}px`;\n      this.zoomedImageStyle.backgroundPosition = `${zoomedX}px ${zoomedY}px`;\n      this.zoomedImageStyle.top = `${e.clientY - zoomBoxSize * 2 + 60}px`;\n      this.zoomedImageStyle.left = `${e.clientX - zoomBoxSize / 2}px`;    },\n  },\n};\n</script>\n\n<style scoped>\n.image-zoom-container {\n  /*cursor: none;*/\n  border: 1px solid black;\n  border-radius: 5px;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.image-wrapper {\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.image-wrapper img {\n  display: block;\n  width: 100%;\n  height: auto;\n  transition: transform 0.2s ease-out;\n}\n\n.zoomed-image {\n  position: absolute;\n  top: 50%; /* Centre vertical */\n  left: 50%; /* Centre horizontal */\n  transform: translate(-50%, -50%); /* Centrer l'image zoomée */\n  width: 150px; /* Taille réduite de l'image zoomée */\n  height: 300px; /* Taille réduite de l'image zoomée */\n  pointer-events: none;\n  z-index: 1000;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "dc1b246968e8333a",
        "type": "ui-template",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "group": "0e652f1b8a07fae8",
        "page": "",
        "ui": "",
        "name": "Acquisition settings",
        "order": 1,
        "width": "4",
        "height": "2",
        "head": "",
        "format": "<template>\n  <div class=\"acquisition-container\">\n    <h2>Acquisition settings</h2>\n    <!-- Acquisition ID -->\n    <div class=\"acquisition-horizontal-alignment\">\n      <label class=\"v-label v-slider__label acquisition-my-label\">Acquisition ID</label>\n      <v-text-field\n        v-model=\"acquisitionId\"\n        variant=\"outlined\"\n        density=\"compact\"\n        append-inner-icon=\"mdi-information\"\n        @click:append-inner=\"openDialog1\"\n        class=\"acquisition-my-v-text\"\n        @change=\"updateInfo\"\n      ></v-text-field>\n      <v-dialog v-model=\"dialog1\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 1.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog1\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <!-- Number of images -->\n    <div class=\"acquisition-horizontal-alignment\">\n      <v-slider\n        color=\"#0a6eca\"\n        label=\"Number of images\"\n        step=\"1\"\n        min=\"1\"\n        max=\"2000\"\n        v-model=\"numberOfImages\"\n        class=\"acquisition-my-slider acquisition-custom-slider\"\n        @change=\"updateInfo\"\n      ></v-slider>\n      <v-text-field\n        v-model=\"numberOfImages\"\n        variant=\"outlined\"\n        density=\"compact\"\n        suffix=\"img\"\n        append-inner-icon=\"mdi-information\"\n        @click:append-inner=\"openDialog2\"\n        class=\"acquisition-my-v-text-2\"\n        @change=\"updateInfo\"\n      ></v-text-field>\n      <v-dialog v-model=\"dialog2\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 2.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog2\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <!-- Pumped volume -->\n    <div class=\"acquisition-horizontal-alignment\">\n      <v-slider\n        v-model=\"pumpedVolume\"\n        class=\"acquisition-my-slider acquisition-custom-slider\"\n        color=\"#0a6eca\"\n        label=\"Pumped volume\"\n        step=\"0.01\"\n        min=\"0.08\"\n        max=\"1\"\n        @change=\"updateInfo\"\n      ></v-slider>\n      <v-text-field\n        v-model=\"pumpedVolume\"\n        variant=\"outlined\"\n        density=\"compact\"\n        suffix=\"ml/min\"\n        append-inner-icon=\"mdi-information\"\n        @click:append-inner=\"openDialog3\"\n        class=\"acquisition-my-v-text-2\"\n        @change=\"updateInfo\"\n      ></v-text-field>\n      <v-dialog v-model=\"dialog3\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Information</v-card-title>\n          <v-card-text>\n            This is an information dialog 3.\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" text @click=\"closeDialog3\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <!-- Information for Image volume & Volume total -->\n    <div class=\"information-image-volume\">\n      <p class=\"v-label v-slider__label acquisition-my-label\">Image volume: <span class=\"span-information\">{{msg.payload.imageVolume || \"Work in progress - Wainting back\"}}</span></p>\n      <p class=\"v-label v-slider__label acquisition-my-label\">Volume total: <span class=\"span-information\">{{msg.payload.totalVolume || \"Work in progress - Wainting back\"}}</span></p>\n    </div>\n    <!-- Acquisition comment -->\n    <div class=\"acquisition-horizontal-alignment\">\n      <label class=\"v-label v-slider__label acquisition-my-label\">Comment</label>\n      <v-textarea\n        v-model=\"comment\"\n        class=\"acquisition-my-v-textarea\"\n        variant=\"outlined\"\n        density=\"compact\"\n        @change=\"updateInfo\"\n      ></v-textarea>\n    </div>\n    <!-- Progress -->\n    <div class=\"acquisition-horizontal-alignment\">\n      <label class=\"v-label v-slider__label acquisition-my-label-2\">progression</label>\n      <v-progress-linear\n        color=\"#0a6eca\"\n        :value=\"msg.payload.progression\"\n        height=\"25\"\n        style=\"width: 80%;\"\n      >\n        <strong>{{msg.payload.progression || \"Work in progress - Wainting back\"}} % </strong>\n      </v-progress-linear>\n    </div>\n    <div class=\"acquisition-horizontal-alignment acquisition-progress-info\">\n      <label class=\"v-label v-slider__label\">Estimated duration left:</label>\n      <label class=\"v-label v-slider__label acquisition-my-value-label\">{{ msg.payload.estimated_time || \"Work in progress - Wainting back\" }}</label>\n    </div>\n    <!-- Stop / Start acquisition -->\n    <v-btn-toggle\n      v-model=\"toggle\"\n      variant=\"outlined\"\n      density=\"compact\"\n      color=\"#0a6eca\"\n      divided\n      class=\"acquisition-toggle-full-width acquisition-toggle\"\n      @change=\"updatePayload\"\n    >\n      <v-btn style=\"padding: 10px;\">\n        <v-icon left>mdi-stop</v-icon>Stop\n      </v-btn>\n      <v-btn style=\"padding: 10px;\">\n        <v-icon right>mdi-play</v-icon>Start\n      </v-btn>\n    </v-btn-toggle>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      acquisitionId: '',\n      numberOfImages: 2,\n      pumpedVolume: 0.1,\n      comment: '',\n      dialog1: false,\n      dialog2: false,\n      dialog3: false,\n      toggle: 0,\n    };\n  },\n  watch: {\n    toggle(newVal) {\n      this.updatePayload();\n    },\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload && msg.payload.progression) {\n            this.progression = msg.payload.progression;\n          }\n          if (msg.payload && msg.payload.delay_to_stabilize) {\n            this.delay_to_stabilize = msg.payload.delay_to_stabilize;\n          }\n          if (msg.payload && msg.payload.acquisition_id) {\n            this.acquisitionId = msg.payload.acquisition_id;\n          }\n          if (msg.payload && msg.payload.comment) {\n            this.comment = msg.payload.comment;\n          }\n          if (msg.payload.status && msg.payload.status === \"Done\") {\n            this.toggle = 0;\n          }\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog1() {\n      this.dialog1 = true;\n    },\n    openDialog2() {\n      this.dialog2 = true;\n    },\n    openDialog3() {\n      this.dialog3 = true;\n    },\n    closeDialog1() {\n      this.dialog1 = false;\n    },\n    closeDialog2() {\n      this.dialog2 = false;\n    },\n    closeDialog3() {\n      this.dialog3 = false;\n    },\n    updateInfo() {\n        this.send({\n            payloadToSave: {\n                acquisitionId: this.acquisitionId,\n                numberOfImages: this.numberOfImages,\n                pumpedVolume: this.pumpedVolume,\n                comment: this.comment\n            },\n        });\n    },\n    updatePayload() {\n        const action = this.toggle === 0 ? 'stop' : 'start';\n        var payload = {};\n\n        if (action == 'stop') {\n            payload = {\n                action: 'stop',\n            };\n        } else {\n            payload = {\n                action: 'image', \n                pump_direction: \"FORWARD\",\n                volume: this.pumpedVolume,\n                nb_frame: this.numberOfImages,\n                sleep: parseInt(this.delay_to_stabilize, 10)\n            };\n        }\n        \n        const payloadToSave = {\n            acquisitionId: this.acquisitionId,\n            numberOfImages: this.numberOfImages,\n            pumpedVolume: this.pumpedVolume,\n            comment: this.comment\n        };\n        this.send({\n            payloadToSave: payloadToSave,\n            payload: payload,\n            topic: 'imager/image'\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n  h2 {\n    color: #0a6eca !important;\n    margin-bottom: 1rem;\n  }\n\n  .acquisition-container {\n    padding: 10px 10px !important;\n    border: solid black 1px !important;\n    border-radius: 5px !important;\n    background-color: rgba(10, 110, 202, 0.1) !important;\n  }\n\n  .acquisition-my-label {\n    font-size: 0.9vw !important;\n    margin-bottom: 10px !important;\n    font-weight: bolder !important;\n  }\n\n  .acquisition-my-slider {\n    margin-right: 20px !important;\n    flex: 1 !important;\n  }\n\n  div.v-slider {\n    font-weight: bolder !important;\n    padding-right: 10px !important;\n  }\n\n  .acquisition-my-v-text-2 {\n    flex: 0.5 !important;\n  }\n\n  .acquisition-my-v-text-2 > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .acquisition-my-v-text > .v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .acquisition-my-v-textarea>.v-input__control {\n    background-color: #ffffff !important;\n    border-radius: 5px !important;\n  }\n\n  .acquisition-my-value-label {\n    font-size: 0.9vw !important;\n    font-weight: bolder !important;\n    color: #0a6eca !important;\n  }\n\n  .span-information {\n    font-weight: normal !important;\n    margin-left: 5px !important;\n  }\n\n  .information-image-volume {\n    display: flex;\n    flex-direction: column;\n    margin: 0rem 0rem 0rem 0rem;\n  }\n\n  .information-image-volume p {\n    margin-bottom: 2rem !important;\n  }\n\n  .acquisition-horizontal-alignment {\n    display: flex !important;\n    align-items: center !important;\n  }\n\n  .acquisition-toggle-full-width {\n    width: 100% !important;\n    margin-top: 15px !important;\n  }\n\n  .v-progress-linear {\n    border-radius: 5px !important;\n  }\n\n  .acquisition-toggle {\n    width: 100% !important;\n    border-color: #0a6eca !important;\n    color: #0a6eca !important;\n  }\n\n  .acquisition-toggle .v-btn--active {\n    background-color: #0a6eca !important;\n    color: white !important;\n  }\n\n  .acquisition-my-label-2 {\n    font-size: 0.9vw !important;\n    font-weight: bolder !important;\n    flex: 1 !important;\n  }\n\n  .acquisition-progress-info {\n    margin-top: 12px !important;\n  }\n\n  .acquisition-custom-slider .v-slider__label {\n    font-size: 0.9vw !important;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 690,
        "y": 520,
        "wires": [
            [
                "bff53e3e25fde770"
            ]
        ]
    },
    {
        "id": "b6d0e22f33ca686c",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "Format command to change page",
        "func": "if (msg.payload == \"Clicked!\") {\n  msg.payload = { page: \"Home\"}\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "2a5d62263d874923"
            ]
        ]
    },
    {
        "id": "2a5d62263d874923",
        "type": "ui-control",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1080,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2efa775925b01a42",
        "type": "inject",
        "z": "70f558eb9d60b6fc",
        "d": true,
        "g": "3b32c3c9506eb933",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"imageVolume\":\"xx mL\",\"totalVolume\":\"xx mL\",\"progression\":0}",
        "payloadType": "json",
        "x": 550,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c46dc09dcaa89b8c",
        "type": "ui-template",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "group": "87b4aa991f82d46e",
        "page": "",
        "ui": "",
        "name": "Information",
        "order": 3,
        "width": "3",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-information-container\">\n    <p id=\"date\"></p>\n    <p>-</p>\n    <p id=\"time-first-visit\"></p>\n    <span\n      class=\"mdi mdi-account\"\n      :style=\"{ color: 'black' }\"\n      @click=\"menu = true\"\n    ></span>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Gallery', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 240,
        "wires": [
            [
                "8f8904dea405bc9f"
            ]
        ]
    },
    {
        "id": "76b6a3dffef7932e",
        "type": "mqtt in",
        "z": "70f558eb9d60b6fc",
        "name": "Listen to all topics",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1790,
        "y": 560,
        "wires": [
            [
                "b3e666d4e675a451"
            ]
        ]
    },
    {
        "id": "b3e666d4e675a451",
        "type": "debug",
        "z": "70f558eb9d60b6fc",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 560,
        "wires": []
    },
    {
        "id": "9f562d703ae1ccbf",
        "type": "mqtt in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "Listen imager status",
        "topic": "status/imager",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "a8b40501e4c53fed",
                "dc1b246968e8333a"
            ]
        ]
    },
    {
        "id": "a8b40501e4c53fed",
        "type": "debug",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "Pump status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "997c71e9dcf596e8",
        "type": "mqtt out",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "\"image\"",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 1300,
        "y": 600,
        "wires": []
    },
    {
        "id": "455afa9f4f1f9311",
        "type": "ui-event",
        "z": "70f558eb9d60b6fc",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "8228453d1c618570"
            ]
        ]
    },
    {
        "id": "8228453d1c618570",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "name": "link out 94",
        "mode": "link",
        "links": [
            "b2e678c70a46968c",
            "4317b389f6b1b156",
            "edd15056c8b5ffc8",
            "c6633d19eafe05ef"
        ],
        "x": 295,
        "y": 80,
        "wires": []
    },
    {
        "id": "478e79c6f72c6a53",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.profilName",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "c46dc09dcaa89b8c"
            ],
            []
        ]
    },
    {
        "id": "b2e678c70a46968c",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "link in 92",
        "links": [
            "8228453d1c618570"
        ],
        "x": 225,
        "y": 240,
        "wires": [
            [
                "478e79c6f72c6a53"
            ]
        ]
    },
    {
        "id": "918aba2d582e4a12",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "name": "Set camera settings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"action\":\"settings\",\"settings\":{\"iso\":100,\"shutter_speed\":40,\"white_balance_gain\":{\"red\":100,\"blue\":100},\"white_balance\":\"auto\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 500,
        "wires": [
            [
                "e9702e2afce40391"
            ]
        ]
    },
    {
        "id": "20a346b078ede9c7",
        "type": "inject",
        "z": "70f558eb9d60b6fc",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1770,
        "y": 500,
        "wires": [
            [
                "918aba2d582e4a12"
            ]
        ]
    },
    {
        "id": "1f0db78d4becd99d",
        "type": "mqtt out",
        "z": "70f558eb9d60b6fc",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 2130,
        "y": 500,
        "wires": []
    },
    {
        "id": "e9702e2afce40391",
        "type": "debug",
        "z": "70f558eb9d60b6fc",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 460,
        "wires": []
    },
    {
        "id": "b4a6261d50d0a9c3",
        "type": "mqtt out",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "\"update_config\"",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 1140,
        "y": 660,
        "wires": []
    },
    {
        "id": "fb9d64e1d38df424",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "8dad4db0-4e50-11ef-86a5-e9c7b2057935",
        "value": "project_name",
        "command": "read",
        "msgProperty": "payload.sample_project",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 780,
        "wires": [
            [
                "44bfabe506b330e1"
            ],
            []
        ]
    },
    {
        "id": "d40e81478f29c1fd",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "90285fd0-4e50-11ef-86a5-e9c7b2057935",
        "value": "sample_id",
        "command": "read",
        "msgProperty": "payload.sample_id",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 770,
        "y": 820,
        "wires": [
            [
                "26c65a6ec5883d4a"
            ],
            []
        ]
    },
    {
        "id": "5c846bbe8d829d09",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_uuid\": \"uuid-1234\",",
        "info": "",
        "x": 280,
        "y": 780,
        "wires": []
    },
    {
        "id": "f7c549d688a82217",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_ship\": \"Fairscope\",",
        "info": "",
        "x": 280,
        "y": 820,
        "wires": []
    },
    {
        "id": "c156111030f8a27d",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting Metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.sample_operator",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 860,
        "wires": [
            [
                "53c6eb15fd0715c7"
            ],
            []
        ]
    },
    {
        "id": "66b5dbde2d2c4978",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_concentrated_sample_volume\": 70,",
        "info": "",
        "x": 330,
        "y": 860,
        "wires": []
    },
    {
        "id": "ef1499f9032e38e2",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_total_volume\": 100,",
        "info": "",
        "x": 280,
        "y": 900,
        "wires": []
    },
    {
        "id": "9fafb0cdbf808e08",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "412c8850-4e5c-11ef-86a5-e9c7b2057935",
        "value": "dillution_factor",
        "command": "read",
        "msgProperty": "payload.sample_dillution_factor",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 940,
        "wires": [
            [
                "124b794f9816c66b"
            ],
            []
        ]
    },
    {
        "id": "ac6013d701d061e8",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_speed_through_water\": \"5 knots\",",
        "info": "",
        "x": 320,
        "y": 940,
        "wires": []
    },
    {
        "id": "e85a9d29696e99ff",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting Metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "payload.sample_instrument",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "cfb0c8e7bf206814"
            ],
            []
        ]
    },
    {
        "id": "fe9d0a3dfde010c9",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_bottom_depth\": \"N/A\",",
        "info": "",
        "x": 290,
        "y": 980,
        "wires": []
    },
    {
        "id": "9297c1303d0ee9c3",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_min",
        "command": "read",
        "msgProperty": "payload.sample_depth_min",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "6e7da51db1340b5c"
            ],
            []
        ]
    },
    {
        "id": "c3aceb9c96df8b7f",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "978fb080-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_max",
        "command": "read",
        "msgProperty": "payload.sample_depth_max",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 770,
        "y": 1060,
        "wires": [
            [
                "832eddbe6e69bb73"
            ],
            []
        ]
    },
    {
        "id": "c60830e67ed5eb74",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_temperature\": \"N/A\"",
        "info": "",
        "x": 280,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4d6b8ff374ab04e3",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_salinity\": \"N/A\",",
        "info": "",
        "x": 270,
        "y": 1060,
        "wires": []
    },
    {
        "id": "dab3f2c5661aa8cb",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"sample_date\": \"2024-05-15\",",
        "info": "",
        "x": 280,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a8339dd574181c71",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting Metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "payload.acq_instrument",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 1140,
        "wires": [
            [
                "48419516ba1c0132"
            ],
            []
        ]
    },
    {
        "id": "472821529981cf6d",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"acq_magnification\": \"1.2\",",
        "info": "",
        "x": 270,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0769aafda6e1b0e7",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"acq_camera_id\": \"deep-point-8125\",",
        "info": "",
        "x": 300,
        "y": 1180,
        "wires": []
    },
    {
        "id": "99c17632bfa31f50",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": " \"acq_camera_lens\": \"N/A\",",
        "info": "",
        "x": 270,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fe00896803b982bf",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"acq_atlas_id\": \"N/A\",     ",
        "info": "",
        "x": 260,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9cdb5df1dba5e667",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"acq_resolution\": \"1080p\",     ",
        "info": "",
        "x": 270,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5b086554d036cbde",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "\"acq_stacks_count\": \"N/A\",",
        "info": "",
        "x": 270,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c2ad4cea7159a08e",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "002259e0-42c0-11ef-89ad-e57161842148",
        "value": "delay_to_stabilized",
        "command": "read",
        "msgProperty": "payload.acq_time_between_frames",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1220,
        "wires": [
            [
                "7fdabca73a0a1855"
            ],
            []
        ]
    },
    {
        "id": "cea09d01c3bacaa7",
        "type": "comment",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "info": "\"acq_brightness\": \"N/A\",\n\"acq_contrast\": \"N/A\",\n\"acq_sharpness\": \"N/A\",\n\"acq_saturation\": \"N/A\",\n\"acq_gamma\": \"N/A\",\n\"acq_uuid\": \"acq-uuid-5678\",\n\"acq_volume\": 2.50,\n\"acq_imaged_volume\": 1.04,\n\"acq_minimum_mesh\": 300,\n\"acq_maximum_mesh\": 300,\n\"acq_min_esd\": 300,\n\"acq_max_esd\": 300,\n\"acq_camera_name\": \"HQ Camera\",\n\"acq_nb_frame\": 500,\n\"acq_local_datetime\": \"2024-05-15T09:00:00Z\",\n\"acq_caamera_iso\": 400,\n\"acq_camera_shutter_speed\": 500,\n\n\"process_pixel\": 0.75,\n\"process_datetime\": \"2024-05-15T09:00:00Z\",\n\"process_id\": \"Process01\",\n\"process_uuid\": \"proc-uuid-7890\",\n\"process_source\": \"https://www.github.com/PlanktonPlanet/PlanktoScope\",\n\"process_commit\": \"CommitHash\",\n\n",
        "x": 220,
        "y": 1380,
        "wires": []
    },
    {
        "id": "6b7022fcf0d5108a",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "5ecde410-4ff8-11ef-8af0-151edf01ff7c",
        "value": "sampling_gear",
        "command": "read",
        "msgProperty": "payload.sample_sampling_gear",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 780,
        "y": 900,
        "wires": [
            [
                "481aaacc17a72f65"
            ],
            []
        ]
    },
    {
        "id": "0e6be75a67384bdf",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d66c06a0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_date",
        "command": "read",
        "msgProperty": "payload.object_date_end",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1420,
        "wires": [
            [
                "487d2cd3e69f4cec"
            ],
            []
        ]
    },
    {
        "id": "4feb75276a5af405",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "907912f0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_date",
        "command": "read",
        "msgProperty": "payload.object_date",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "f8726f9e02382b5e"
            ],
            []
        ]
    },
    {
        "id": "614a445455c9ebce",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "aa48e480-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_time",
        "command": "read",
        "msgProperty": "payload.object_time",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1300,
        "wires": [
            [
                "bb5a3a8b59d9f674"
            ],
            []
        ]
    },
    {
        "id": "cea7ab000f782c70",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "b5faaac0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "starting_point_gps",
        "command": "read",
        "msgProperty": "payload.starting_point_gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1360,
        "wires": [
            [
                "12d2c8b03fc1f242"
            ],
            []
        ]
    },
    {
        "id": "0ba03d1e83cfe141",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6b592c0-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_time",
        "command": "read",
        "msgProperty": "payload.object_time_end",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1460,
        "wires": [
            [
                "4063bd2bb8af8a95"
            ],
            []
        ]
    },
    {
        "id": "7264fd4534476f08",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "d6e55550-4dc3-11ef-86a5-e9c7b2057935",
        "value": "ending_point_gps",
        "command": "read",
        "msgProperty": "payload.ending_point_gps",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1520,
        "wires": [
            [
                "6d5bce164621a153"
            ],
            []
        ]
    },
    {
        "id": "87c72e161a760ea1",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "92ae25b0-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_min",
        "command": "read",
        "msgProperty": "payload.object_depth_min",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 770,
        "y": 1580,
        "wires": [
            [
                "8c7975e3abdfb950"
            ],
            []
        ]
    },
    {
        "id": "f6e7e0d05af5b212",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "978fb080-4e63-11ef-86a5-e9c7b2057935",
        "value": "depth_max",
        "command": "read",
        "msgProperty": "payload.object_depth_max",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 770,
        "y": 1620,
        "wires": [
            [
                "a38d15cbeda1a02c"
            ],
            []
        ]
    },
    {
        "id": "75ce2f8d97d68069",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "0dfabcaf117a1a54",
        "valuesConfigName": "Sample Metadata",
        "valueId": "415e94d0-4e5c-11ef-86a5-e9c7b2057935",
        "value": "sieve_mesh_size",
        "command": "read",
        "msgProperty": "payload.sieve_mesh_size",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1660,
        "wires": [
            [
                "689c1b47df4cd992"
            ],
            []
        ]
    },
    {
        "id": "5b71ea0212473d82",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set payload.version",
        "func": "const rawPayload = msg.payload;\n\nconst lines = rawPayload.split('\\n');\n\nlet version = null;\n\nfor (const line of lines) {\n    if (line.trim().startsWith('version:')) {\n        version = line.split(':')[1].trim().replace(/\"/g, '');\n        break;\n    }\n}\n\nmsg = {\n    payload: {\n        acq_software: version\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1180,
        "wires": [
            [
                "d82329d2ef996f64"
            ]
        ]
    },
    {
        "id": "b2c43aaf95412f25",
        "type": "file in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Get version from file",
        "filename": "/usr/share/planktoscope/installer-versioning.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "5b71ea0212473d82"
            ]
        ]
    },
    {
        "id": "6def4e7e67623547",
        "type": "split",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "property": "payloadToSave",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "883c8bcbd98bb3c3"
            ]
        ]
    },
    {
        "id": "883c8bcbd98bb3c3",
        "type": "switch",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "acquisitionId",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "numberOfImages",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pumpedVolume",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "comment",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "f65e14920a75ce9f"
            ],
            [],
            [],
            [
                "650a00ed7ac1e9b8"
            ]
        ]
    },
    {
        "id": "f65e14920a75ce9f",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "valuesConfig": "842103bc1301dfb9",
        "valuesConfigName": "Acquisition Metadata",
        "valueId": "cb9cb620-4ffd-11ef-8af0-151edf01ff7c",
        "value": "acquisition_id",
        "command": "write",
        "msgProperty": "payloadToSave",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1410,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "425e378462938661",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "valuesConfig": "842103bc1301dfb9",
        "valuesConfigName": "Acquisition Metadata",
        "valueId": "cb9cb620-4ffd-11ef-8af0-151edf01ff7c",
        "value": "acquisition_id",
        "command": "read",
        "msgProperty": "payload.acq_id",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 790,
        "y": 1100,
        "wires": [
            [
                "26f5054a4321ef3d"
            ],
            []
        ]
    },
    {
        "id": "20f0245cbefbbf69",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "002259e0-42c0-11ef-89ad-e57161842148",
        "value": "delay_to_stabilized",
        "command": "read",
        "msgProperty": "payload.delay_to_stabilize",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 390,
        "y": 520,
        "wires": [
            [
                "dc1b246968e8333a"
            ],
            []
        ]
    },
    {
        "id": "4317b389f6b1b156",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link in 149",
        "links": [
            "8228453d1c618570",
            "0804cf4b32049a1d"
        ],
        "x": 175,
        "y": 520,
        "wires": [
            [
                "20f0245cbefbbf69"
            ]
        ]
    },
    {
        "id": "60bc270ddfa20f0b",
        "type": "debug",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "Paylod for MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 640,
        "wires": []
    },
    {
        "id": "73dbec532343f666",
        "type": "inject",
        "z": "70f558eb9d60b6fc",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 80,
        "wires": [
            [
                "0804cf4b32049a1d"
            ]
        ]
    },
    {
        "id": "0804cf4b32049a1d",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "name": "link out 103",
        "mode": "link",
        "links": [
            "4317b389f6b1b156"
        ],
        "x": 535,
        "y": 80,
        "wires": []
    },
    {
        "id": "c0cd42a36e735f09",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 150",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1180,
        "wires": [
            [
                "b2c43aaf95412f25"
            ]
        ]
    },
    {
        "id": "16496890b192797c",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link out 104",
        "mode": "link",
        "links": [
            "112de282d8055653",
            "d3b072c2497a5209",
            "b0669e2b7f125e7e"
        ],
        "x": 995,
        "y": 540,
        "wires": []
    },
    {
        "id": "17a57f860b746d9c",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link out 105",
        "mode": "link",
        "links": [
            "25f6794686ddf057"
        ],
        "x": 1775,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c51927142025c58c",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "valuesConfig": "842103bc1301dfb9",
        "valuesConfigName": "Acquisition Metadata",
        "valueId": "cb9cb620-4ffd-11ef-8af0-151edf01ff7c",
        "value": "acquisition_id",
        "command": "read",
        "msgProperty": "payload.acquisition_id",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "dc1b246968e8333a"
            ],
            []
        ]
    },
    {
        "id": "edd15056c8b5ffc8",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link in 153",
        "links": [
            "8228453d1c618570"
        ],
        "x": 175,
        "y": 580,
        "wires": [
            [
                "c51927142025c58c"
            ]
        ]
    },
    {
        "id": "14dab3e6993ce1dd",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "valuesConfig": "842103bc1301dfb9",
        "valuesConfigName": "Acquisition Metadata",
        "valueId": "18a9dd30-5017-11ef-8af0-151edf01ff7c",
        "value": "acquisition_comment",
        "command": "read",
        "msgProperty": "payload.comment",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 410,
        "y": 640,
        "wires": [
            [
                "dc1b246968e8333a"
            ],
            []
        ]
    },
    {
        "id": "c6633d19eafe05ef",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link in 154",
        "links": [
            "8228453d1c618570"
        ],
        "x": 175,
        "y": 640,
        "wires": [
            [
                "14dab3e6993ce1dd"
            ]
        ]
    },
    {
        "id": "650a00ed7ac1e9b8",
        "type": "persistent value",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "valuesConfig": "842103bc1301dfb9",
        "valuesConfigName": "Acquisition Metadata",
        "valueId": "18a9dd30-5017-11ef-8af0-151edf01ff7c",
        "value": "acquisition_comment",
        "command": "write",
        "msgProperty": "payloadToSave",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1430,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "37e59749715142c8",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link out 106",
        "mode": "link",
        "links": [
            "c0cd42a36e735f09",
            "55ecdb80fdc69378",
            "a9c93db64ecfa9a5",
            "a905312fb8938f6f",
            "f37f959bc9aadfc2",
            "95164b69e98df231",
            "f52f2584fc95aab6",
            "3f11847f343ced62",
            "3dce28226792d1eb",
            "1f1e48b0064cddc7",
            "ae4f1437d5284f21",
            "01518df3bebb092b",
            "f7a5b12f274aca4b",
            "7449cab14c396834",
            "a3c2c0038a541f40",
            "9b1768f64542705b",
            "fab0fd5a61ae1dcd",
            "e19f686978cee1d6",
            "e5ad38b0e760da7b",
            "a27ac2d9c1ec545f",
            "4cb46d4b9e2bf275",
            "1203080efaebcc0d"
        ],
        "x": 405,
        "y": 1540,
        "wires": []
    },
    {
        "id": "984b3bce0eba0dc7",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Remove",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1540,
        "wires": [
            [
                "37e59749715142c8"
            ]
        ]
    },
    {
        "id": "d3b072c2497a5209",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 155",
        "links": [
            "16496890b192797c"
        ],
        "x": 195,
        "y": 1540,
        "wires": [
            [
                "984b3bce0eba0dc7"
            ]
        ]
    },
    {
        "id": "6d5bce164621a153",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "function 11",
        "func": "msg.payload = {\n    object_lat_end: msg.payload.ending_point_gps.latitude,\n    object_lon_end: msg.payload.ending_point_gps.longitude,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1520,
        "wires": [
            [
                "ecbe7f58e169c89c",
                "b8d71671448af045"
            ]
        ]
    },
    {
        "id": "12d2c8b03fc1f242",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "function 12",
        "func": "msg.payload = {\n    object_lat: msg.payload.starting_point_gps.latitude,\n    object_lon: msg.payload.starting_point_gps.longitude,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1360,
        "wires": [
            [
                "313e2908de9d681e",
                "59ade27756b2fd23"
            ]
        ]
    },
    {
        "id": "1fe601d84a9f0d02",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.description",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1700,
        "wires": [
            [
                "c5da8fccb31815ae"
            ]
        ]
    },
    {
        "id": "c5da8fccb31815ae",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "description",
                "pt": "flow",
                "to": "payload.description",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "689c1b47df4cd992",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sieve_mesh_size",
                "pt": "flow",
                "to": "payload.sieve_mesh_size",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "a38d15cbeda1a02c",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_depth_max",
                "pt": "flow",
                "to": "payload.object_depth_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "8c7975e3abdfb950",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_depth_min",
                "pt": "flow",
                "to": "payload.object_depth_min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "ecbe7f58e169c89c",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_lat_end",
                "pt": "flow",
                "to": "payload.object_lat_end",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "b8d71671448af045",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_lon_end",
                "pt": "flow",
                "to": "payload.object_lon_end",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "4063bd2bb8af8a95",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_time_end",
                "pt": "flow",
                "to": "payload.object_time_end",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "487d2cd3e69f4cec",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_date_end",
                "pt": "flow",
                "to": "payload.object_date_end",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "313e2908de9d681e",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_lat",
                "pt": "flow",
                "to": "payload.object_lat",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1340,
        "wires": [
            [
                "d382992324069c5d"
            ]
        ]
    },
    {
        "id": "59ade27756b2fd23",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_lon",
                "pt": "flow",
                "to": "payload.object_lon",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "bb5a3a8b59d9f674",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_time",
                "pt": "flow",
                "to": "payload.object_time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "f8726f9e02382b5e",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "object_date",
                "pt": "flow",
                "to": "payload.object_date",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "7fdabca73a0a1855",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "acq_time_between_frames",
                "pt": "flow",
                "to": "payload.acq_time_between_frames",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "d82329d2ef996f64",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "acq_software",
                "pt": "flow",
                "to": "payload.acq_software",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "48419516ba1c0132",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "acq_software",
                "pt": "flow",
                "to": "payload.acq_instrument",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "26f5054a4321ef3d",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "acq_id",
                "pt": "flow",
                "to": "payload.acq_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "832eddbe6e69bb73",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_depth_max",
                "pt": "flow",
                "to": "payload.sample_depth_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "6e7da51db1340b5c",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_depth_min",
                "pt": "flow",
                "to": "payload.sample_depth_min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "cfb0c8e7bf206814",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_instrument",
                "pt": "flow",
                "to": "payload.sample_instrument",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "124b794f9816c66b",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_dillution_factor",
                "pt": "flow",
                "to": "payload.sample_dillution_factor",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "481aaacc17a72f65",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_sampling_gear",
                "pt": "flow",
                "to": "payload.sample_sampling_gear",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "53c6eb15fd0715c7",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_operator",
                "pt": "flow",
                "to": "payload.sample_operator",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "26c65a6ec5883d4a",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_id",
                "pt": "flow",
                "to": "payload.sample_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "44bfabe506b330e1",
        "type": "change",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Set in flow",
        "rules": [
            {
                "t": "set",
                "p": "sample_project",
                "pt": "flow",
                "to": "payload.sample_project",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "55ecdb80fdc69378",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 157",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1220,
        "wires": [
            [
                "c2ad4cea7159a08e"
            ]
        ]
    },
    {
        "id": "a9c93db64ecfa9a5",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 158",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1260,
        "wires": [
            [
                "4feb75276a5af405"
            ]
        ]
    },
    {
        "id": "a905312fb8938f6f",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 159",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1300,
        "wires": [
            [
                "614a445455c9ebce"
            ]
        ]
    },
    {
        "id": "f37f959bc9aadfc2",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 160",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1360,
        "wires": [
            [
                "cea7ab000f782c70"
            ]
        ]
    },
    {
        "id": "95164b69e98df231",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 161",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1420,
        "wires": [
            [
                "0e6be75a67384bdf"
            ]
        ]
    },
    {
        "id": "f52f2584fc95aab6",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 162",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1460,
        "wires": [
            [
                "0ba03d1e83cfe141"
            ]
        ]
    },
    {
        "id": "3f11847f343ced62",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 163",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1520,
        "wires": [
            [
                "7264fd4534476f08"
            ]
        ]
    },
    {
        "id": "3dce28226792d1eb",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 164",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1580,
        "wires": [
            [
                "87c72e161a760ea1"
            ]
        ]
    },
    {
        "id": "1f1e48b0064cddc7",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 165",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1620,
        "wires": [
            [
                "f6e7e0d05af5b212"
            ]
        ]
    },
    {
        "id": "ae4f1437d5284f21",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 166",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1660,
        "wires": [
            [
                "75ce2f8d97d68069"
            ]
        ]
    },
    {
        "id": "01518df3bebb092b",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 167",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1700,
        "wires": [
            [
                "1fe601d84a9f0d02"
            ]
        ]
    },
    {
        "id": "f7a5b12f274aca4b",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 168",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1140,
        "wires": [
            [
                "a8339dd574181c71"
            ]
        ]
    },
    {
        "id": "7449cab14c396834",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 169",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1100,
        "wires": [
            [
                "425e378462938661"
            ]
        ]
    },
    {
        "id": "a3c2c0038a541f40",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 170",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1060,
        "wires": [
            [
                "c3aceb9c96df8b7f"
            ]
        ]
    },
    {
        "id": "9b1768f64542705b",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 171",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 1020,
        "wires": [
            [
                "9297c1303d0ee9c3"
            ]
        ]
    },
    {
        "id": "fab0fd5a61ae1dcd",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 172",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 980,
        "wires": [
            [
                "e85a9d29696e99ff"
            ]
        ]
    },
    {
        "id": "e19f686978cee1d6",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 173",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 940,
        "wires": [
            [
                "9fafb0cdbf808e08"
            ]
        ]
    },
    {
        "id": "e5ad38b0e760da7b",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 174",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 900,
        "wires": [
            [
                "6b7022fcf0d5108a"
            ]
        ]
    },
    {
        "id": "a27ac2d9c1ec545f",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 175",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 860,
        "wires": [
            [
                "c156111030f8a27d"
            ]
        ]
    },
    {
        "id": "4cb46d4b9e2bf275",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 176",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 820,
        "wires": [
            [
                "d40e81478f29c1fd"
            ]
        ]
    },
    {
        "id": "1203080efaebcc0d",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "link in 177",
        "links": [
            "37e59749715142c8"
        ],
        "x": 575,
        "y": 780,
        "wires": [
            [
                "fb9d64e1d38df424"
            ]
        ]
    },
    {
        "id": "6530ccdb60829ae5",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "Create payload for \"update_config\"",
        "func": "var description = flow.get('description');\n\n// Initialiser la description avec les valeurs récupérées via flow.get\ndescription = {\n    sample_project: flow.get(\"sample_project\"),\n    sample_id: flow.get(\"sample_id\"),\n    sample_uuid: \"\", // Si ce champ est généré automatiquement, le laisser vide\n    sample_ship: flow.get(\"sample_ship\"),\n    sample_operator: flow.get(\"sample_operator\"),\n    sample_sampling_gear: flow.get(\"sample_sampling_gear\"),\n    sample_concentrated_sample_volume: flow.get(\"sample_concentrated_sample_volume\"),\n    sample_total_volume: flow.get(\"sample_total_volume\"),\n    sample_dilution_factor: flow.get(\"sample_dilution_factor\"),\n    sample_speed_through_water: flow.get(\"sample_speed_through_water\"),\n\n    acq_id: flow.get(\"acq_id\"),\n    acq_uuid: \"\", // Si ce champ est généré automatiquement, le laisser vide\n    acq_instrument: flow.get(\"acq_instrument\"),\n    acq_instrument_id: flow.get(\"acq_instrument_id\"),\n    acq_celltype: flow.get(\"acq_celltype\"),\n    acq_minimum_mesh: flow.get(\"acq_minimum_mesh\"),\n    acq_maximum_mesh: flow.get(\"acq_maximum_mesh\"),\n    acq_min_esd: flow.get(\"acq_min_esd\"),\n    acq_max_esd: flow.get(\"acq_max_esd\"),\n    acq_volume: flow.get(\"acq_volume\"),\n    acq_imaged_volume: flow.get(\"acq_imaged_volume\"),\n    acq_magnification: flow.get(\"acq_magnification\"),\n    acq_fnumber_objective: flow.get(\"acq_fnumber_objective\"),\n    acq_camera_name: flow.get(\"acq_camera_name\"),\n    acq_nb_frame: flow.get(\"acq_nb_frame\"),\n    acq_local_datetime: flow.get(\"acq_local_datetime\"),\n    acq_camera_resolution: flow.get(\"acq_camera_resolution\"),\n    acq_camera_iso: flow.get(\"acq_camera_iso\"),\n    acq_camera_shutter_speed: flow.get(\"acq_camera_shutter_speed\"),\n    acq_software: flow.get(\"acq_software\"),\n\n    object_date: flow.get(\"object_date\"),\n    object_time: flow.get(\"object_time\"),\n    object_lat: flow.get(\"object_lat\"),\n    object_lon: flow.get(\"object_lon\"),\n    object_depth_min: flow.get(\"object_depth_min\"),\n    object_depth_max: flow.get(\"object_depth_max\"),\n\n    process_pixel: flow.get(\"process_pixel\"),\n    process_datetime: flow.get(\"process_datetime\"),\n    process_id: flow.get(\"process_id\"),\n    process_uuid: \"\", // Si ce champ est généré automatiquement, le laisser vide\n    process_source: flow.get(\"process_source\"),\n    process_commit: flow.get(\"process_commit\"),\n\n    sample_gear_net_opening: flow.get(\"sample_gear_net_opening\"),\n    object_date_end: flow.get(\"object_date_end\"),\n    object_time_end: flow.get(\"object_time_end\"),\n    object_lat_end: flow.get(\"object_lat_end\"),\n    object_lon_end: flow.get(\"object_lon_end\")\n};\n\nmsg.payload = {\n    action: \"update_config\",\n    config: {\n        description: description,\n        sample_project: flow.get(\"sample_project\"),\n        sample_id: flow.get(\"sample_id\"),\n        sample_ship: flow.get(\"sample_ship\"),\n        sample_operator: flow.get(\"sample_operator\"),\n        sample_sampling_gear: flow.get(\"sample_sampling_gear\"),\n        sample_concentrated_sample_volume: flow.get(\"sample_concentrated_sample_volume\"),\n        sample_total_volume: flow.get(\"sample_total_volume\"),\n        sample_dilution_factor: flow.get(\"sample_dilution_factor\"),\n        sample_speed_through_water: flow.get(\"sample_speed_through_water\"),\n\n        acq_id: flow.get(\"acq_id\"),\n        acq_instrument: flow.get(\"acq_instrument\"),\n        acq_instrument_id: flow.get(\"acq_instrument_id\"),\n        acq_celltype: flow.get(\"acq_celltype\"),\n        acq_minimum_mesh: flow.get(\"acq_minimum_mesh\"),\n        acq_maximum_mesh: flow.get(\"acq_maximum_mesh\"),\n        acq_min_esd: flow.get(\"acq_min_esd\"),\n        acq_max_esd: flow.get(\"acq_max_esd\"),\n        acq_volume: flow.get(\"acq_volume\"),\n        acq_imaged_volume: flow.get(\"acq_imaged_volume\"),\n        acq_magnification: flow.get(\"acq_magnification\"),\n        acq_fnumber_objective: flow.get(\"acq_fnumber_objective\"),\n        acq_camera: flow.get(\"acq_camera\"),\n        acq_nb_frame: flow.get(\"acq_nb_frame\"),\n        acq_software: flow.get(\"acq_software\"),\n\n        object_date: flow.get(\"object_date\"),\n        object_time: flow.get(\"object_time\"),\n        object_lat: flow.get(\"object_lat\"),\n        object_lon: flow.get(\"object_lon\"),\n        object_depth_min: flow.get(\"object_depth_min\"),\n        object_depth_max: flow.get(\"object_depth_max\"),\n\n        process_pixel: flow.get(\"process_pixel\"),\n        process_source: flow.get(\"process_source\"),\n        process_commit: flow.get(\"process_commit\")\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1340,
        "wires": [
            [
                "17a57f860b746d9c",
                "749f53cf1cdc61f9"
            ]
        ]
    },
    {
        "id": "25f6794686ddf057",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link in 151",
        "links": [
            "17a57f860b746d9c"
        ],
        "x": 995,
        "y": 660,
        "wires": [
            [
                "b4a6261d50d0a9c3"
            ]
        ]
    },
    {
        "id": "d382992324069c5d",
        "type": "delay",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1360,
        "y": 1340,
        "wires": [
            [
                "6530ccdb60829ae5"
            ]
        ]
    },
    {
        "id": "749f53cf1cdc61f9",
        "type": "debug",
        "z": "70f558eb9d60b6fc",
        "g": "b383604c2ffb0c81",
        "name": "update_config payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b7d43a5399350e4c",
        "type": "delay",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 620,
        "wires": [
            [
                "60bc270ddfa20f0b",
                "997c71e9dcf596e8"
            ]
        ]
    },
    {
        "id": "b0669e2b7f125e7e",
        "type": "link in",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "link in 178",
        "links": [
            "16496890b192797c"
        ],
        "x": 995,
        "y": 620,
        "wires": [
            [
                "b7d43a5399350e4c"
            ]
        ]
    },
    {
        "id": "bff53e3e25fde770",
        "type": "switch",
        "z": "70f558eb9d60b6fc",
        "g": "3b32c3c9506eb933",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 520,
        "wires": [
            [
                "6def4e7e67623547"
            ],
            [
                "16496890b192797c"
            ]
        ]
    },
    {
        "id": "e7ef6ef1f343a096",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "link out 119",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1335,
        "y": 240,
        "wires": []
    },
    {
        "id": "c65cad12fbc1ec52",
        "type": "link out",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "link out 120",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1335,
        "y": 280,
        "wires": []
    },
    {
        "id": "c17dbbdcd5d63f06",
        "type": "switch",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "e7ef6ef1f343a096"
            ],
            [
                "c65cad12fbc1ec52"
            ]
        ]
    },
    {
        "id": "3163b083f704c234",
        "type": "switch",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 240,
        "wires": [
            [
                "41261010b645e245"
            ],
            [
                "c17dbbdcd5d63f06"
            ]
        ]
    },
    {
        "id": "8f8904dea405bc9f",
        "type": "function",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 240,
        "wires": [
            [
                "3163b083f704c234"
            ]
        ]
    },
    {
        "id": "41261010b645e245",
        "type": "ui-control",
        "z": "70f558eb9d60b6fc",
        "g": "c285048823f34bc0",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1240,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "af3cbcd9f5f35be3",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "group": "8c5ef97069f3c9a4",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-data-table :headers=\"headers\" :items=\"tableData\" item-value=\"acquisitionID\" class=\"custom-table\">\n    <template v-slot:headers=\"{ columns, isSorted, getSortIcon, toggleSort }\">\n      <tr>\n        <template v-for=\"column in columns\" :key=\"column.key\">\n          <td>\n            <span class=\"mr-2 cursor-pointer\" @click=\"() => toggleSort(column)\">\n              {{ column.title }}\n            </span>\n            <template v-if=\"isSorted(column)\">\n              <v-icon :icon=\"getSortIcon(column)\"></v-icon>\n            </template>\n          </td>\n        </template>\n      </tr>\n    </template>\n    <template v-slot:item=\"{ item, index }\">\n      <tr>\n        <td>{{ item.acquisitionID }}</td>\n        <td>{{ item.estimatedTime }}</td>\n        <td>{{ item.status }}</td>\n        <td class=\"input-msts\">\n          <v-text-field :disabled=\"isFieldDisabled(item)\" v-model=\"item.input\" @input=\"onInputChange(item)\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n        </td>\n      </tr>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      headers: [\n        { title: 'Acquisition ID', align: 'start', key: 'acquisitionID' },\n        { title: 'Estimated time', align: 'start', key: 'estimatedTime' },\n        { title: 'Status', align: 'start', key: 'status' },\n        { title: 'MSTS', align: 'start', key: 'msts' }\n      ],\n      tableData: [], \n      msts: '',\n      isTableDisabled: false, \n      currentRowIndex: 0 \n    }\n  },\n  methods: {\n    remove(key) {\n      this.headers = this.headers.filter(header => header.key !== key)\n    },\n    updateTableDataWithMSTS() {\n      this.tableData = this.tableData.map(item => ({\n        ...item,\n        input: this.msts\n      }));\n    },\n    onInputChange(item) {\n      this.send({ payload: this.tableData });\n    },\n    isFieldDisabled(item) {\n      return this.isTableDisabled || item.status === 'In Progress' || item.status === 'Done';\n    },\n    sendCurrentRow() {\n      if (this.tableData.length > 0 && this.currentRowIndex < this.tableData.length) {\n        const item = this.tableData[this.currentRowIndex];\n        this.send({\n          payload: {\n            \"action\": \"segment\",\n            \"settings\": {\n                \"path\": item.path,\n                \"force\": true,\n                \"ecotaxa\": true,\n            }\n          },\n          topic: \"segmenter/segment\"\n        });\n\n        if (this.currentRowIndex === this.tableData.length - 1) {\n          this.isTableDisabled = true;\n        }\n      }\n    },\n    processStatusDone() {\n      if (this.currentRowIndex < this.tableData.length - 1) {\n        this.currentRowIndex++;\n        this.sendCurrentRow();\n      } else {\n        this.send({\n          payload: \"Done\",\n        });\n      }\n    }\n  },\n  watch: {\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload && msg.payload === \"start\") {\n            this.sendCurrentRow();\n          }\n          if (msg.payload && msg.payload === \"pause\") {\n            this.send({\n              payload: {\n                \"action\": \"stop\",\n              },\n              topic: \"segmenter/segment\"\n            });\n            this.isTableDisabled = false;\n          }\n          if (msg.payload && msg.payload === \"clear\") {\n            this.send({\n              payload: {\n                \"action\": \"stop\",\n              },\n              topic: \"segmenter/segment\"\n            });\n            this.tableData = [];\n            this.currentRowIndex = 0; // Réinitialiser l'index de ligne\n            this.isTableDisabled = false; // Assurez-vous que la table n'est pas désactivée après effacement\n          } else if (msg.payload && Array.isArray(msg.payload)) {\n            this.tableData = msg.payload;\n            this.updateTableDataWithMSTS();\n          }\n          if (msg.msts) {\n            this.msts = msg.msts;\n            this.updateTableDataWithMSTS(); \n          }\n          if (msg.payload && msg.payload.status === \"Done\") {\n            this.processStatusDone();\n          }\n        });\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  mounted() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (msg.payload && Array.isArray(msg.payload)) {\n          this.tableData = msg.payload;\n          this.updateTableDataWithMSTS();\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.custom-table {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  padding: 16px 0;\n}\n\n.custom-header {\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n.input-msts {\n  margin: 10px;\n  max-width: 100px;\n}\n\n.input-msts .v-input__details {\n  display: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 540,
        "wires": [
            [
                "d721115905e941f3",
                "2298a8a5a04dade7"
            ]
        ]
    },
    {
        "id": "cf4fbc0932d87cc7",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "group": "8c5ef97069f3c9a4",
        "page": "",
        "ui": "",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <!-- Stop / Start acquisition -->\n        <v-btn-toggle v-model=\"toggle\" variant=\"outlined\" density=\"confortable\" color=\"#0a6eca\" divided\n            class=\"toggle-full-width toggle\">\n            <v-btn @click=\"handleToggleClick('pause')\" style=\"padding: 10px;\">\n                <v-icon left>mdi-pause</v-icon>Pause\n            </v-btn>\n            <v-btn @click=\"handleToggleClick('clear')\" style=\"padding: 10px;\">\n                <v-icon right>mdi-delete</v-icon>Clear\n            </v-btn>\n            <v-btn @click=\"handleToggleClick('start')\" style=\"padding: 10px;\">\n                <v-icon right>mdi-play</v-icon>Start\n            </v-btn>\n        </v-btn-toggle>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                toggle: null\n            };\n        },\n        methods: {\n            handleToggleClick(action) {\n                this.send({ payload: action });\n            },\n            handleDone() {\n                this.toggle = 0;\n                this.send({ payload: \"pause\" });\n            }\n        },\n        watch: {\n            '$socket': {\n                handler(newVal, oldVal) {\n                    this.$socket.on('msg-input:' + this.id, (msg) => {\n                        if (msg.payload === \"Done\") {\n                            this.handleDone();\n                        }\n                    });\n                },\n                deep: true,\n                immediate: true\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    div .v-btn-toggle {\n        background-color: #ffffff;\n    }\n\n    .toggle-full-width {\n        width: 100%;\n        margin-top: 15px;\n    }\n\n    .toggle {\n        width: 100%;\n        border-color: #0a6eca;\n        color: #0a6eca;\n    }\n\n    .toggle .v-btn--active {\n        background-color: #0a6eca !important;\n        color: white !important;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 700,
        "wires": [
            [
                "c18005dcbaf22026",
                "62d2042e91fbe197"
            ]
        ]
    },
    {
        "id": "3e8b5c7dc322501d",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "group": "c877701142780a50",
        "page": "",
        "ui": "",
        "name": "Title",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"center-container\" @click=\"navigateToHome\">\n        <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"Description de l'image\" class=\"center-image-1\">\n        <h3>PlanktoScope GUI</h3>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        navigateToHome() {\n            this.send(\"Clicked!\");\n        }\n    }\n}\n</script>\n\n<style scoped>\n    h3 {\n        font-size: 1vw;\n    }\n\n    .center-container {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .center-image-1 {\n        margin-right: 25px;\n        max-width: 40px;\n        line-height: 0px;\n    }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "b1eacad4b3bf6e97"
            ]
        ]
    },
    {
        "id": "eec02edaf7da6b2e",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "group": "c877701142780a50",
        "page": "",
        "ui": "",
        "name": "Step bar",
        "order": 2,
        "width": "7",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper model-value=\"4\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n          @click=\"stepClicked(1)\"\n        >\n          Preview\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n          @click=\"stepClicked(2)\"\n        >\n          Sample\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n          @click=\"stepClicked(3)\"\n        >\n          Acquisition\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"4\"\n          editable\n          @click=\"stepClicked(4)\"\n          class=\"selected-step\"\n        >\n          Segmentation\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"5\"\n          editable\n          @click=\"stepClicked(5)\"\n        >\n          Visualisation\n        </v-stepper-item>\n\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        console.log(`Step clicked: ${step}`);\n        this.send(step);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  div.v-stepper.v-sheet {\n    background-color: transparent;\n    box-shadow: none;\n    border-radius: 0px;\n    overflow: hidden;\n  }\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "d68c231c98bf92e0"
            ]
        ]
    },
    {
        "id": "8cf785fffe790177",
        "type": "ui-control",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 980,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d68c231c98bf92e0",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "Format command to change page",
        "func": "const numberStringMap = {\n  1: \"Preview\",\n  2: \"Sample\",\n  3: \"Acquisition\",\n  4: \"Segmentation\",\n  5: \"Visualization\"\n};\n\nconst key = numberStringMap[msg.payload];\n\nif (key) {\n  msg.payload = { \"page\": numberStringMap[msg.payload] };\n} else {\n  console.log(`Key not found for value: ${msg.payload}`);\n  msg.payload = { \"page\": null };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "8cf785fffe790177"
            ]
        ]
    },
    {
        "id": "b1eacad4b3bf6e97",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "Format command to change page",
        "func": "if (msg.payload == \"Clicked!\") {\n  msg.payload = { page: \"Home\"}\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "1e4493ea93992368"
            ]
        ]
    },
    {
        "id": "1e4493ea93992368",
        "type": "ui-control",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 960,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d417adf0e2e7759b",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "cd7cd2c05c7f55bf",
        "group": "3b6f841875ac2355",
        "page": "",
        "ui": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-data-table \n    :headers=\"headers\" \n    :items=\"tableData\" \n    item-value=\"acquisitionID\" \n    v-model=\"selected\" \n    show-select \n    class=\"custom-table\">\n    <template v-slot:headers=\"{ columns, isSorted, getSortIcon, toggleSort }\">\n      <tr>\n        <template v-for=\"column in columns\" :key=\"column.key\">\n          <td>\n            <span class=\"mr-2 cursor-pointer\" @click=\"() => toggleSort(column)\">\n              {{ column.title }}\n            </span>\n            <template v-if=\"isSorted(column)\">\n              <v-icon :icon=\"getSortIcon(column)\"></v-icon>\n            </template>\n          </td>\n        </template>\n      </tr>\n    </template>\n  </v-data-table>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      headers: [\n        { title: 'Project name', align: 'start', sortable: false, key: 'projectName', removable: false },\n        { title: 'Sample ID', align: 'start', key: 'sampleID', removable: true, sortable: true },\n        { title: 'Acquisition ID', align: 'start', key: 'acquisitionID', removable: true, sortable: true },\n        { title: 'Operator', align: 'start', key: 'operator', removable: true, sortable: true },\n        { title: 'Image', align: 'start', key: 'image', removable: true, sortable: true },\n        { title: 'MSTS', align: 'start', key: 'MSTS', removable: true, sortable: true },\n      ],\n      tableData: [], // Tableau des données à afficher\n      selected: [], // Stocke les identifiants sélectionnés\n    }\n  },\n  methods: {\n    // Supprime une colonne des en-têtes\n    remove(key) {\n      this.headers = this.headers.filter(header => header.key !== key);\n    },\n    // Met à jour les données du tableau en ajoutant de nouvelles données\n    updateTableData(newData) {\n      const combinedData = [\n        ...this.tableData,\n        ...newData.filter(item => !this.tableData.some(existingItem => existingItem.acquisitionID === item.acquisitionID))\n      ];\n      this.tableData = combinedData;\n    },\n    // Récupère les objets complets sélectionnés\n    getSelectedItems() {\n      return this.tableData.filter(item => this.selected.includes(item.acquisitionID));\n    },\n    // Envoie les données sélectionnées (obtenues en utilisant `getSelectedItems`)\n    sendPayload() {\n      const selectedItems = this.getSelectedItems();\n      console.log('Données envoyées :', selectedItems);\n      // Envoyez ces données à l'endroit souhaité\n      this.send({payload: selectedItems })\n    }\n  },\n  watch: {\n    selected: {\n      handler(newVal) {\n        this.sendPayload();\n      },\n      deep: true\n    },\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload === \"clear\") {\n            this.selected = []; // Réinitialise la sélection si la charge utile est \"clear\"\n          } else if (Array.isArray(msg.payload)) {\n            this.updateTableData(msg.payload); // Met à jour les données du tableau\n          }\n        });\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  mounted() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (Array.isArray(msg.payload)) {\n          this.updateTableData(msg.payload); // Met à jour les données du tableau\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.custom-table {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  padding: 16px 0;\n}\n\n.custom-header {\n  font-weight: bold;\n  text-transform: uppercase;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 400,
        "wires": [
            [
                "d39a23df09b43d2b",
                "ee4f56191c0a79e9"
            ]
        ]
    },
    {
        "id": "d39a23df09b43d2b",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "cd7cd2c05c7f55bf",
        "name": "function 1",
        "func": "// Vérifiez si msg.payload est un tableau\nif (!Array.isArray(msg.payload)) {\n    msg.payload = \"\";\n    return msg;\n}\n\n// Vérifiez que chaque élément du tableau est un objet avec les propriétés attendues\nfor (let element of msg.payload) {\n    if (typeof element !== 'object' || element === null || !element.acquisitionID || !element.path) {\n        msg.payload = \"\";\n        return msg;\n    }\n}\n\n// Transformez les objets pour ne conserver que path et acquisitionID\nvar resultat = msg.payload.map(element => ({\n    acquisitionID: element.acquisitionID,\n    path: element.path,\n    estimatedTime: \"WIP\",\n    status: \"To do\"\n}));\n\n// Stockez le résultat dans le flow\nflow.set('segmentation_queue', resultat);\n\n// Définissez msg.payload avec le résultat\nmsg.payload = resultat;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 400,
        "wires": [
            [
                "343ad9e58c44f9d9"
            ]
        ]
    },
    {
        "id": "42fc3d43830febaa",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "Switch disable/enable state",
        "func": "if (msg.payload == \"start\") {\n    msg.payload = {\n        groups: {\n            enable: [],\n            disable: [\"Segmentation-2:acquisition-table-segmentation-2\"]\n        }\n    }\n} else if (msg.payload == \"pause\") {\n    msg.payload = {\n        groups: {\n            enable: [\"Segmentation-2:acquisition-table-segmentation-2\"],\n            disable: []\n        }\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 720,
        "wires": [
            [
                "9529b63ced697421"
            ]
        ]
    },
    {
        "id": "025e18267bc7995a",
        "type": "ui-control",
        "z": "00a14f98244d252e",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 180,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "da2a5658f65d64a4",
        "type": "link in",
        "z": "00a14f98244d252e",
        "name": "link in 48",
        "links": [
            "9529b63ced697421"
        ],
        "x": 85,
        "y": 40,
        "wires": [
            [
                "025e18267bc7995a"
            ]
        ]
    },
    {
        "id": "c18005dcbaf22026",
        "type": "switch",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clear",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "clear",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 700,
        "wires": [
            [
                "e6ba170eea1efeb4"
            ],
            [
                "42fc3d43830febaa"
            ]
        ]
    },
    {
        "id": "9529b63ced697421",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link out 62",
        "mode": "link",
        "links": [
            "da2a5658f65d64a4"
        ],
        "x": 1055,
        "y": 720,
        "wires": []
    },
    {
        "id": "a0368732ccfa08d8",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link out 63",
        "mode": "link",
        "links": [
            "4b6824e2ecaa9016"
        ],
        "x": 955,
        "y": 680,
        "wires": []
    },
    {
        "id": "49ea401a0745e446",
        "type": "link in",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link in 49",
        "links": [
            "e0327fbe42203370",
            "62d2042e91fbe197"
        ],
        "x": 425,
        "y": 580,
        "wires": [
            [
                "af3cbcd9f5f35be3"
            ]
        ]
    },
    {
        "id": "4b6824e2ecaa9016",
        "type": "link in",
        "z": "00a14f98244d252e",
        "g": "cd7cd2c05c7f55bf",
        "name": "link in 50",
        "links": [
            "a0368732ccfa08d8",
            "c491425e02dc2976"
        ],
        "x": 445,
        "y": 400,
        "wires": [
            [
                "d417adf0e2e7759b"
            ]
        ]
    },
    {
        "id": "343ad9e58c44f9d9",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "cd7cd2c05c7f55bf",
        "name": "link out 64",
        "mode": "link",
        "links": [
            "67b91503eb38afe7"
        ],
        "x": 775,
        "y": 400,
        "wires": []
    },
    {
        "id": "a004902c262b883a",
        "type": "ui-template",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "group": "c877701142780a50",
        "page": "",
        "ui": "",
        "name": "Information",
        "order": 3,
        "width": "3",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-information-container\">\n    <p id=\"date\"></p>\n    <p>-</p>\n    <p id=\"time-first-visit\"></p>\n    <span\n      class=\"mdi mdi-account\"\n      :style=\"{ color: 'black' }\"\n      @click=\"menu = true\"\n    ></span>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Gallery', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 220,
        "wires": [
            [
                "25b53f7dfdeeeecc"
            ]
        ]
    },
    {
        "id": "aa582b7c4e2ce8c7",
        "type": "persistent value",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "54330ee0-437d-11ef-946b-75401899c243",
        "value": "MSTS",
        "command": "read",
        "msgProperty": "msts",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "af3cbcd9f5f35be3"
            ],
            []
        ]
    },
    {
        "id": "67b91503eb38afe7",
        "type": "link in",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link in 77",
        "links": [
            "343ad9e58c44f9d9"
        ],
        "x": 145,
        "y": 540,
        "wires": [
            [
                "aa582b7c4e2ce8c7"
            ]
        ]
    },
    {
        "id": "62d2042e91fbe197",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link out 79",
        "mode": "link",
        "links": [
            "49ea401a0745e446"
        ],
        "x": 655,
        "y": 740,
        "wires": []
    },
    {
        "id": "db8dbeb996228096",
        "type": "persistent value",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "payload.profilName",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "a004902c262b883a"
            ],
            []
        ]
    },
    {
        "id": "21fa8983c634e8d6",
        "type": "link in",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "link in 95",
        "links": [
            "a502f95380d7ea32"
        ],
        "x": 105,
        "y": 220,
        "wires": [
            [
                "db8dbeb996228096"
            ]
        ]
    },
    {
        "id": "7508ddea7c6e85b2",
        "type": "ui-event",
        "z": "00a14f98244d252e",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "a502f95380d7ea32"
            ]
        ]
    },
    {
        "id": "a502f95380d7ea32",
        "type": "link out",
        "z": "00a14f98244d252e",
        "name": "link out 96",
        "mode": "link",
        "links": [
            "21fa8983c634e8d6",
            "4cf3eec1ce2d4242",
            "d3b2e7d1bba0372d",
            "1031589ab54758f7",
            "9f6ae562f1b445b6"
        ],
        "x": 395,
        "y": 40,
        "wires": []
    },
    {
        "id": "b66bf570c5656d37",
        "type": "exec",
        "z": "00a14f98244d252e",
        "command": "find data/img/ -name \"metadata.json\"",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 920,
        "wires": [
            [
                "41add91cc9a0f0d2"
            ],
            [],
            []
        ]
    },
    {
        "id": "41add91cc9a0f0d2",
        "type": "split",
        "z": "00a14f98244d252e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 550,
        "y": 920,
        "wires": [
            [
                "dcdd3d182172e37b",
                "4ccc9f3dbff5355d"
            ]
        ]
    },
    {
        "id": "a7571dda2afc9bf5",
        "type": "file in",
        "z": "00a14f98244d252e",
        "name": "open \"metadata.json\"",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1100,
        "y": 920,
        "wires": [
            [
                "fae11872d37ca7ea"
            ]
        ]
    },
    {
        "id": "dcdd3d182172e37b",
        "type": "change",
        "z": "00a14f98244d252e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 920,
        "wires": [
            [
                "abb1be992fc0f571"
            ]
        ]
    },
    {
        "id": "abb1be992fc0f571",
        "type": "switch",
        "z": "00a14f98244d252e",
        "name": "Not empty",
        "property": "filename",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 920,
        "wires": [
            [
                "a7571dda2afc9bf5",
                "7ad651f163137130",
                "00356111d14fa4fc"
            ]
        ]
    },
    {
        "id": "fae11872d37ca7ea",
        "type": "function",
        "z": "00a14f98244d252e",
        "name": "Merge all metadata in flow.acquisition_array",
        "func": "const acquisition_array = flow.get('acquisition_array') || [];\n\nconst metadata = JSON.parse(msg.payload);\n\nif (metadata.description && typeof metadata.description === 'object' && Object.keys(metadata.description).length > 0) {\n    acquisition_array.push(metadata.description);\n    flow.set('acquisition_array', acquisition_array);\n    msg.payload = acquisition_array;\n} else {\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 920,
        "wires": [
            [
                "ce3abd70727f1374",
                "baf89db54ae56a37"
            ]
        ]
    },
    {
        "id": "ce3abd70727f1374",
        "type": "debug",
        "z": "00a14f98244d252e",
        "name": "acquisition_array",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 880,
        "wires": []
    },
    {
        "id": "4ccc9f3dbff5355d",
        "type": "debug",
        "z": "00a14f98244d252e",
        "name": "List of \"metadata.json\" founded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 960,
        "wires": []
    },
    {
        "id": "4cf3eec1ce2d4242",
        "type": "link in",
        "z": "00a14f98244d252e",
        "name": "link in 179",
        "links": [
            "a502f95380d7ea32"
        ],
        "x": 125,
        "y": 920,
        "wires": [
            [
                "b66bf570c5656d37"
            ]
        ]
    },
    {
        "id": "97882a7a4f73a796",
        "type": "function",
        "z": "00a14f98244d252e",
        "name": "Format payload to display",
        "func": "// Récupère le tableau des descriptions et des chemins stockés dans le contexte de flux\nconst acquisition_array = flow.get('acquisition_array') || [];\nconst acquisition_path_array = flow.get('acquisition_path_array') || [];\n\n// Fonction pour extraire acquisitionID du chemin\nfunction extractAcquisitionID(path) {\n    const parts = path.split('/');\n    return parts[parts.length - 2];  // avant-dernier élément du chemin\n}\n\n// Crée une correspondance entre acquisitionID et path\nconst pathMap = new Map(acquisition_path_array.map(item => [extractAcquisitionID(item.path), item.path]));\n\n// Utilise un Set pour suivre les acquisitionID déjà rencontrés\nconst seenAcquisitionIDs = new Set();\n\n// Filtre et formate les éléments, en évitant les duplicata\nconst formatted_array = acquisition_array.reduce((result, desc) => {\n    const acquisitionID = desc.acq_id;\n    \n    // Vérifie si l'acquisitionID a déjà été ajouté\n    if (!seenAcquisitionIDs.has(acquisitionID)) {\n        seenAcquisitionIDs.add(acquisitionID);\n        \n        result.push({\n            projectName: desc.sample_project || \"\",\n            sampleID: desc.sample_id || \"\",\n            acquisitionID: desc.acq_id || \"\",\n            operator: desc.sample_operator || \"\",\n            image: \"WIP\",\n            MSTS: \"WIP\",\n            path: pathMap.get(acquisitionID) || \"\"\n        });\n    }\n    \n    return result;\n}, []);\n\n// Affecte le tableau formaté à msg.payload\nmsg.payload = formatted_array;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1000,
        "wires": [
            [
                "59fa9fd249f9d575",
                "c491425e02dc2976"
            ]
        ]
    },
    {
        "id": "59fa9fd249f9d575",
        "type": "debug",
        "z": "00a14f98244d252e",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 1040,
        "wires": []
    },
    {
        "id": "baf89db54ae56a37",
        "type": "switch",
        "z": "00a14f98244d252e",
        "name": "Not empty",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1490,
        "y": 960,
        "wires": [
            [
                "97882a7a4f73a796"
            ]
        ]
    },
    {
        "id": "c491425e02dc2976",
        "type": "link out",
        "z": "00a14f98244d252e",
        "name": "link out 107",
        "mode": "link",
        "links": [
            "4b6824e2ecaa9016"
        ],
        "x": 1625,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2cf602d6c4ccb957",
        "type": "mqtt in",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "Listen Segmenter status",
        "topic": "status/segmenter",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "193d3837469bc271",
                "af3cbcd9f5f35be3"
            ]
        ]
    },
    {
        "id": "193d3837469bc271",
        "type": "debug",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "Segmenter status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "d721115905e941f3",
        "type": "switch",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "segmenter/segment",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 540,
        "wires": [
            [
                "cf21ab67185f9d54"
            ]
        ]
    },
    {
        "id": "cf21ab67185f9d54",
        "type": "mqtt out",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 810,
        "y": 540,
        "wires": []
    },
    {
        "id": "d3b2e7d1bba0372d",
        "type": "link in",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "link in 180",
        "links": [
            "a502f95380d7ea32"
        ],
        "x": 145,
        "y": 580,
        "wires": [
            [
                "6d941e58139bc4ef"
            ]
        ]
    },
    {
        "id": "6d941e58139bc4ef",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "Get flow variables",
        "func": "\nconst seg_queu = flow.get('segmentation_queue');\nconst acq_path_array = flow.get('acquisition_path_array');\n\nmsg.payload = {\n    seg_queu: seg_queu,\n    acq_path_array: acq_path_array\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e6ba170eea1efeb4",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "Reset queu",
        "func": "if (msg.payload == \"clear\") {\n    flow.set('segmentation_queue', []);\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 680,
        "wires": [
            [
                "a0368732ccfa08d8"
            ]
        ]
    },
    {
        "id": "7ad651f163137130",
        "type": "function",
        "z": "00a14f98244d252e",
        "name": "function 14",
        "func": "const newValue = msg.filename;\nlet actualArray = flow.get('acquisition_path_array') || [];\n\n// Ajouter le nouveau chemin s'il n'est pas vide et n'existe pas déjà dans le tableau\nif (newValue && !actualArray.some(item => item.path === newValue)) {\n    actualArray.push({\n        path: newValue\n    });\n}\n\n// Supprimer les éléments avec des chemins vides ou nuls\nactualArray = actualArray.filter(item => item.path);\n\n// Supprimer les doublons en utilisant un Set\nconst uniquePaths = Array.from(new Set(actualArray.map(item => item.path))).map(path => ({ path }));\n\n// Mettre à jour le tableau dans le contexte du flux\nflow.set('acquisition_path_array', uniquePaths);\n\n// Mettre à jour le payload du message\nmsg.payload = uniquePaths;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 880,
        "wires": [
            [
                "8fca3cb19c201138"
            ]
        ]
    },
    {
        "id": "8fca3cb19c201138",
        "type": "debug",
        "z": "00a14f98244d252e",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 880,
        "wires": []
    },
    {
        "id": "00356111d14fa4fc",
        "type": "debug",
        "z": "00a14f98244d252e",
        "name": "debug 59",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "filename",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 960,
        "wires": []
    },
    {
        "id": "ee4f56191c0a79e9",
        "type": "debug",
        "z": "00a14f98244d252e",
        "g": "cd7cd2c05c7f55bf",
        "name": "debug 60",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "2298a8a5a04dade7",
        "type": "switch",
        "z": "00a14f98244d252e",
        "g": "d3d7be8ef5f940c4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Done",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "cf4fbc0932d87cc7"
            ]
        ]
    },
    {
        "id": "c7380afc08bb239e",
        "type": "ui-control",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 1120,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c632cc613a0f8ce5",
        "type": "switch",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "c7380afc08bb239e"
            ],
            [
                "7ac29261ba9159db"
            ]
        ]
    },
    {
        "id": "25b53f7dfdeeeecc",
        "type": "function",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 220,
        "wires": [
            [
                "c632cc613a0f8ce5"
            ]
        ]
    },
    {
        "id": "7ac29261ba9159db",
        "type": "switch",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 240,
        "wires": [
            [
                "3f6329f6f64a5d57"
            ],
            [
                "a9b6da2f2e6a066a"
            ]
        ]
    },
    {
        "id": "3f6329f6f64a5d57",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "link out 121",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1215,
        "y": 220,
        "wires": []
    },
    {
        "id": "a9b6da2f2e6a066a",
        "type": "link out",
        "z": "00a14f98244d252e",
        "g": "99e9870d6e66aeaf",
        "name": "link out 122",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1215,
        "y": 260,
        "wires": []
    },
    {
        "id": "107c602539a8cf19",
        "type": "ui-control",
        "z": "f260ed9417849607",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 280,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "325c645ea4e0bfac",
        "type": "link in",
        "z": "f260ed9417849607",
        "name": "link in 51",
        "links": [],
        "x": 145,
        "y": 40,
        "wires": [
            [
                "107c602539a8cf19"
            ]
        ]
    },
    {
        "id": "4d86c733bf64b966",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "group": "5e45a13758b9c23e",
        "page": "",
        "ui": "",
        "name": "Title",
        "order": 1,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"center-container\" @click=\"navigateToHome\">\n        <img src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\" alt=\"Description de l'image\" class=\"center-image\">\n        <h3>PlanktoScope GUI</h3>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        navigateToHome() {\n            this.send(\"Clicked!\");\n        }\n    }\n}\n</script>\n\n<style scoped>\n    h3 {\n        font-size: 1vw;\n    }\n    .center-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n    }\n\n    .center-image {\n        margin-right: 25px;\n        max-width: 40px;\n    }\n\n    h2 {\n        color: black;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "d59f4d5d0eee9d10"
            ]
        ]
    },
    {
        "id": "4e72a7308ee22e01",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "group": "5e45a13758b9c23e",
        "page": "",
        "ui": "",
        "name": "Step bar",
        "order": 2,
        "width": "7",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div>\n    <v-stepper model-value=\"5\" non-linear>\n      <v-stepper-header>\n        <v-stepper-item\n          value=\"1\"\n          editable\n          @click=\"stepClicked(1)\"\n        >\n          Preview\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"2\"\n          editable\n          @click=\"stepClicked(2)\"\n        >\n          Sample\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"3\"\n          editable\n          @click=\"stepClicked(3)\"\n        >\n          Acquisition\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"4\"\n          editable\n          @click=\"stepClicked(4)\"\n        >\n          Segmentation\n        </v-stepper-item>\n\n        <v-divider></v-divider>\n\n        <v-stepper-item\n          value=\"5\"\n          editable\n          @click=\"stepClicked(5)\"\n          class=\"selected-step\"\n        >\n          Visualisation\n        </v-stepper-item>\n\n      </v-stepper-header>\n    </v-stepper>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'StepperComponent',\n    methods: {\n      stepClicked(step) {\n        console.log(`Step clicked: ${step}`);\n        this.send(step);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  div.v-stepper.v-sheet {\n    background-color: transparent;\n    box-shadow: none;\n    border-radius: 0px;\n    overflow: hidden;\n  }\n\n  .selected-step div.v-avatar.v-theme--nrdb.v-avatar--density-default.v-avatar--variant-flat.v-stepper-item__avatar {\n    background-color: #0a6eca;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "7f0eed3e70085a04"
            ]
        ]
    },
    {
        "id": "6f6cce3a5af545a4",
        "type": "ui-control",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 620,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0eed3e70085a04",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "Format command to change page",
        "func": "const numberStringMap = {\n  1: \"Preview\",\n  2: \"Sample\",\n  3: \"Acquisition\",\n  4: \"Segmentation\",\n  5: \"Visualization\"\n};\n\nconst key = numberStringMap[msg.payload];\n\nif (key) {\n  msg.payload = { \"page\": numberStringMap[msg.payload] };\n} else {\n  console.log(`Key not found for value: ${msg.payload}`);\n  msg.payload = { \"page\": null };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "6f6cce3a5af545a4"
            ]
        ]
    },
    {
        "id": "d59f4d5d0eee9d10",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "Format command to change page",
        "func": "if (msg.payload == \"Clicked!\") {\n  msg.payload = { page: \"Home\"}\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "fb75e319685b7992"
            ]
        ]
    },
    {
        "id": "fb75e319685b7992",
        "type": "ui-control",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 620,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "019af3477dfde6a9",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "856d9c3d6ae49cc6",
        "group": "3e24a8d86ead8f60",
        "page": "",
        "ui": "",
        "name": "Chart Section",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <div class=\"grid-container\">\n            <div v-for=\"(row, rowIndex) in gridDataWithAddButton\" :key=\"rowIndex\" class=\"grid-row\">\n                <div v-for=\"(cell, colIndex) in row\" :key=\"colIndex\" class=\"grid-cell\">\n                    <template v-if=\"cell.type === 'text'\">\n                        {{ cell.content }}\n                    </template>\n                    <template v-else-if=\"cell.type === 'iframe'\">\n                        <iframe :src=\"cell.src\" width=\"100%\" height=\"300\" frameborder=\"0\"></iframe>\n                    </template>\n                    <template v-else-if=\"cell.type === 'chartForm'\">\n                        <div class=\"addChartForm\">\n                            <v-list class=\"chartTypeList\">\n                                <v-list-item v-for=\"item in items\" :key=\"item.value\" @click=\"selectChartType(item)\"\n                                    :class=\"{'selected': selectedItemType === item.value}\">\n                                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                                </v-list-item>\n                            </v-list>\n                            <div class=\"selectXY\" v-show=\"selectedItemType === 'scatter'\">\n                                <div class=\"dropdown-section\">\n                                    <p>Abscissa</p>\n                                    <v-combobox v-model=\"selectedX\" label=\"\" :items=\"selectedMetaData\"></v-combobox>\n                                </div>\n                                <div class=\"dropdown-section\">\n                                    <p>Ordinate</p>\n                                    <v-combobox v-model=\"selectedY\" label=\"\" :items=\"selectedMetaData\"></v-combobox>\n                                </div>\n                            </div>\n                            <div class=\"selectXY\" v-show=\"selectedItemType === 'hist'\">\n                                <v-combobox v-model=\"selectedX\" label=\"Select X\" :items=\"selectedMetaData\"></v-combobox>\n                            </div>\n                            <v-btn class=\"validateButton\" text @click=\"addChart\" :disabled=\"!isFormComplete\">Ok</v-btn>\n                        </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n    data() {\n        return {\n            gridData: [],\n            items: [\n                { title: 'Scatter Plot', value: 'scatter' },\n                { title: 'Hist Plot', value: 'hist' }\n            ],\n            selectedMetaData: [],\n            selectedX: null,\n            selectedY: null,\n            selectedItemType: null,\n        };\n    },\n    mounted() {\n        // Écoute des mises à jour du message entrant depuis Node-RED\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload) {\n                if (msg.payload.command === 'add iframe' && msg.payload.src) {\n                    // Ajout d'une iframe\n                    this.addIframe(msg.payload.src);\n                } else if (msg.payload.command === 'remove iframe' && msg.payload.src) {\n                    // Suppression de l'iframe avec la source spécifiée\n                    this.removeIframe(msg.payload.src);\n                } else if (msg.payload.command === 'add metadata' && msg.payload.metadata) {\n                    this.selectedMetaData = msg.payload.metadata;\n                }\n            }\n            if (msg.datas) {\n                this.verifyData(msg.datas);\n            }\n            if (msg.metadatas){\n                if(this.selectedMetaData.length==0){\n                    this.selectedMetaData=msg.metadatas;\n                }\n            }\n        });\n    },\n    computed: {\n        gridDataWithAddButton() {\n            // Retourner les données de la grille avec une cellule supplémentaire pour le formulaire d'ajout de graphique\n            let dataWithButton = JSON.parse(JSON.stringify(this.gridData));\n            let lastRow = dataWithButton[dataWithButton.length - 1];\n            if (!lastRow || lastRow.length === 3) {\n                dataWithButton.push([{ type: 'chartForm' }]);\n            } else {\n                lastRow.push({ type: 'chartForm' });\n            }\n            return dataWithButton;\n        },\n        isFormComplete() {\n            if (this.selectedItemType === 'scatter') {\n                return this.selectedX && this.selectedY;\n            }\n            if (this.selectedItemType === 'hist') {\n                return this.selectedX && true;\n            }\n            return false;\n        }\n    },\n    methods: {\n        addRow() {\n            // Ajouter une nouvelle ligne vide\n            this.gridData.push([]);\n        },\n        addChart() {\n            // Ajouter un nouveau graphique dans la dernière ligne\n            let selectedTitle = '';\n            let newChart = {};\n            if (this.selectedItemType === 'scatter') {\n                selectedTitle = 'Scatter Plot';\n                newChart = {\n                    command: 'create ' + this.selectedItemType + ' plot',\n                    args: [\n                        this.selectedX,\n                        this.selectedY\n                    ]\n                };\n            } else if (this.selectedItemType === 'hist') {\n                selectedTitle = 'Hist Plot';\n                newChart = {\n                    command: 'create ' + this.selectedItemType + ' plot',\n                    args: [\n                        this.selectedX,\n                    ]\n                };\n            }\n\n            this.send({ payload: newChart });\n\n            // Réinitialiser le formulaire\n            this.selectedItemType = null;\n            this.selectedX = null;\n            this.selectedY = null;\n        },\n        addIframe(src) {\n            // Ajouter une iframe à la grille\n            const newIframe = {\n                type: 'iframe',\n                src: src\n            };\n\n            let lastRow = this.gridData[this.gridData.length - 1];\n            if (!lastRow || lastRow.length === 3) {\n                // Ajouter une nouvelle ligne si la ligne courante est pleine ou n'existe pas\n                this.gridData.push([newIframe]);\n            } else {\n                // Ajouter l'iframe à la ligne courante\n                lastRow.push(newIframe);\n            }\n        },\n        removeIframe(src) {\n            // Recherche et suppression de la cellule contenant l'iframe avec la source spécifiée\n            this.gridData = this.gridData.map(row =>\n                row.filter(cell => !(cell.type === 'iframe' && cell.src === src))\n            ).filter(row => row.length > 0);\n        },\n        verifyData(datas) {\n            datas.forEach(dataSrc => {\n                let found = false;\n                this.gridData.forEach(row => {\n                    row.forEach(cell => {\n                        if (cell.type === 'iframe' && cell.src === dataSrc) {\n                            found = true;\n                        }\n                    });\n                });\n                if (!found) {\n                    this.addIframe(dataSrc);\n                }\n            });\n        },\n        selectChartType(item) {\n            this.selectedItemType = item.value;\n        },\n    }\n};\n</script>\n\n<style scoped>\n    .grid-container {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: left;\n        gap: 10px;\n    }\n\n    .grid-row {\n        display: contents;\n    }\n\n    .grid-cell {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: calc(min(600px, 33% - 20px));\n        height: 500px;\n        padding: 10px;\n        background-color: #f0f0f0;\n        border-radius: 10px;\n        text-align: center;\n    }\n\n    .addChartForm {\n        width: 600px;\n    }\n\n    .chartTypeList {\n        width: 100%;\n        padding: 10px;\n    }\n\n    .selected {\n        background-color: #0077ff;\n        border-radius: 8px;\n        color: white;\n    }\n\n    .selectXY {\n        width: 100%;\n        padding: 10px;\n    }\n\n    .dropdown-section {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .dropdown-section p {\n        justify-content: center;\n        margin-right: 10px;\n        padding-bottom: 20px;\n        vertical-align: middle;\n        font-size: 20px;\n    }\n\n    .validateButton {\n        margin-top: 10px;\n    }\n\n    .grid-container iframe {\n        width: 600px;\n        height: 100%;\n        border: none;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "5fe96956d7f339e3"
            ]
        ]
    },
    {
        "id": "4f7542d8f7329158",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "856d9c3d6ae49cc6",
        "name": "",
        "topic": "visualization/chartPage",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 2040,
        "wires": [
            [
                "019af3477dfde6a9",
                "85270dcda34b8cc8"
            ]
        ]
    },
    {
        "id": "5fe96956d7f339e3",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "856d9c3d6ae49cc6",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 770,
        "y": 2060,
        "wires": []
    },
    {
        "id": "b53fa58bab471031",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "run at start and repeat",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "c3bad434668c251d"
            ]
        ]
    },
    {
        "id": "e4c5ac606ec6a5db",
        "type": "ui-dropdown",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "group": "f215418ba0dbaaad",
        "name": "Data Selection",
        "label": "Data Selection",
        "tooltip": "",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "5299cd86668a8449"
            ]
        ]
    },
    {
        "id": "19dbf1af317825a6",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"load dataframe\",\"args\": [msg.payload]}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1140,
        "wires": [
            [
                "00cbf4bcc851b630"
            ]
        ]
    },
    {
        "id": "00cbf4bcc851b630",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 1330,
        "y": 1140,
        "wires": []
    },
    {
        "id": "7eb37a75f138d6c6",
        "type": "ui-button",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "group": "f215418ba0dbaaad",
        "name": "",
        "label": "Depploy dataframe",
        "order": 2,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "c57055b8cd4e52fd"
            ]
        ]
    },
    {
        "id": "c57055b8cd4e52fd",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1140,
        "wires": [
            [
                "5299cd86668a8449"
            ]
        ]
    },
    {
        "id": "c3bad434668c251d",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "Find .tsv file",
        "func": "\nconst directory = \"/home/pi/data/export\";\n\nasync function getTsvFiles(dir) {\n    let results = [];\n    try {\n        const files = await fs.readdir(dir, { withFileTypes: true });\n        for (const file of files) {\n            const filePath = path.join(dir, file.name);\n            if (file.isDirectory()) {\n                const nestedFiles = await getTsvFiles(filePath);\n                results = results.concat(nestedFiles);\n            } else if (file.name.endsWith(\".zip\")) {\n                // Read the ZIP file\n                const zip = new AdmZip(filePath);\n                const zipEntries = zip.getEntries();\n                for (const zipEntry of zipEntries) {\n                    if (zipEntry.entryName.endsWith(\".tsv\")) {\n                        results.push({\n                            value: `${filePath}:${zipEntry.entryName}`,\n                            label: zipEntry.entryName\n                        });\n                    }\n                }\n            } else if (file.name.endsWith(\".tsv\")) {\n                results.push({\n                    value: filePath,\n                    label: file.name\n                });\n            }\n        }\n    } catch (err) {\n        console.error(`Error reading directory ${dir}: ${err}`);\n    }\n    return results;\n}\n\ngetTsvFiles(directory)\n    .then(files => {\n        console.log(files);\n        msg.options = files; \n        node.send(msg); \n    })\n    .catch(err => {\n        console.error('Unable to scan directory: ' + err);\n    });\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "path",
                "module": "path"
            },
            {
                "var": "fs",
                "module": "fs.promises"
            },
            {
                "var": "AdmZip",
                "module": "adm-zip"
            }
        ],
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "e4c5ac606ec6a5db",
                "d80c1ba1cd41c454"
            ]
        ]
    },
    {
        "id": "5299cd86668a8449",
        "type": "join",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 1140,
        "wires": [
            [
                "730cbd2b78f5828b"
            ]
        ]
    },
    {
        "id": "730cbd2b78f5828b",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "Lastest selected",
        "func": "msg.payload=msg.payload[msg.payload.length-1]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1140,
        "wires": [
            [
                "19dbf1af317825a6",
                "9aa0c8749b9f1030"
            ]
        ]
    },
    {
        "id": "94d3348c2fa75e5f",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "group": "8a90010318b784c1",
        "page": "",
        "ui": "",
        "name": "map",
        "order": 1,
        "width": "6",
        "height": "6",
        "head": "",
        "format": "<template>\n    <div class=\"map-container\">\n        <iframe v-if=\"iframeSrc\" :src=\"iframeSrc\" frameborder=\"0\"></iframe>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            iframeSrc: null\n        };\n    },\n    mounted() {\n        // Écoute des mises à jour du message entrant depuis Node-RED\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload) {\n                if (msg.payload.command === 'add iframe' && msg.payload.src) {\n                    // Ajout d'une iframe contenant la carte\n                    this.addIframe(msg.payload.src);\n                }\n            }\n            if (msg.datas) {\n                this.verifyData(msg.datas);\n            }\n        });\n    },\n    methods: {\n        verifyData(datas) {\n            if (this.iframeSrc !== datas[0]) {\n                this.addIframe(datas[0]);\n            }\n        },\n        addIframe(src) {\n            // Ajouter l'iframe à la vue\n            this.iframeSrc = src;\n        },\n        removeIframe() {\n            // Retirer l'iframe de la vue\n            this.iframeSrc = null;\n        }\n    }\n};\n</script>\n\n<style scoped>\n.map-container {\n    position: relative;\n    width: 100%;\n    padding-top: 56.25%; /* 16:9 ratio for responsive design */\n    overflow: hidden;\n}\n\n.map-container iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 550,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c1e21bd9819edc62",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "",
        "topic": "visualization/worldmap",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 480,
        "wires": [
            [
                "94d3348c2fa75e5f",
                "7786016a46447829"
            ]
        ]
    },
    {
        "id": "09bfbcafc6b0851b",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 240,
        "y": 380,
        "wires": [
            [
                "db4e7fdbc5e0118f"
            ]
        ]
    },
    {
        "id": "db4e7fdbc5e0118f",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"create world map\",\"args\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "2dcb31ce415f81c3"
            ]
        ]
    },
    {
        "id": "2dcb31ce415f81c3",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "f9ea49beed099d6f",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "group": "f215418ba0dbaaad",
        "page": "",
        "ui": "",
        "name": "DataTable",
        "order": 6,
        "width": "3",
        "height": "5",
        "head": "",
        "format": "<template>\n    <div class=\"iframe-container\">\n        <iframe v-if=\"iframeSrc\" :src=\"iframeSrc\" frameborder=\"0\"></iframe>\n    </div>\n</template>\n\n<script>\n    export default {\n    data() {\n        return {\n            iframeSrc: null\n        };\n    },\n    mounted() {\n        // Écoute des mises à jour du message entrant depuis Node-RED\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload) {\n                if (msg.payload.command === 'add iframe' && msg.payload.src) {\n                    // Ajout d'une iframe contenant la carte\n                    this.addIframe(msg.payload.src);\n                }\n            }\n            if (msg.datas){\n                this.verifyData(msg.datas);\n            }\n        });\n    },\n    methods: {\n        verifyData(datas){\n            if(this.iframeSrc !== datas[0]){\n                this.addIframe(datas[0]);\n            }\n        },\n        addIframe(src) {\n            // Ajouter l'iframe à la vue\n            this.iframeSrc = src;\n        },\n        removeIframe() {\n            // Retirer l'iframe de la vue\n            this.iframeSrc = null;\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .iframe-container {\n        width: 100%;\n        height: 100%;\n    }\n\n    iframe {\n        width: 100%;\n        height: 100%;\n        border: none;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1450,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "20f133774f79275e",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "",
        "topic": "visualization/datatable",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "f9ea49beed099d6f",
                "1b3f2f52d79a978f"
            ]
        ]
    },
    {
        "id": "1d8bc6ea7056cbdd",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "Run at start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 1090,
        "y": 640,
        "wires": [
            [
                "4d0362defd7a3b29"
            ]
        ]
    },
    {
        "id": "4d0362defd7a3b29",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"init datatable\",\"args\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 640,
        "wires": [
            [
                "0d159c22ef7345c9"
            ]
        ]
    },
    {
        "id": "0d159c22ef7345c9",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 1530,
        "y": 640,
        "wires": []
    },
    {
        "id": "6a0aacfdb4ef9b75",
        "type": "ui-button",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "group": "f215418ba0dbaaad",
        "name": "",
        "label": "Download dataframe",
        "order": 5,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1420,
        "wires": [
            [
                "50d076d2b05a3a6b"
            ]
        ]
    },
    {
        "id": "cc7a2fc1b2854427",
        "type": "ui-button",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "group": "f215418ba0dbaaad",
        "name": "",
        "label": "Clear dataframe",
        "order": 3,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1280,
        "wires": [
            [
                "31363c34d65e5218",
                "e2d064d340c9f011"
            ]
        ]
    },
    {
        "id": "9aa0c8749b9f1030",
        "type": "persistent value",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "b3ccc830-4505-11ef-a4b1-fb6c49220709",
        "value": "dataset_path",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 640,
        "y": 1280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "92915fe2ec89ef89",
        "type": "persistent value",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "b3ccc830-4505-11ef-a4b1-fb6c49220709",
        "value": "dataset_path",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 940,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3604caf66d1604b6",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "run at start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 150,
        "y": 940,
        "wires": [
            [
                "92915fe2ec89ef89"
            ]
        ]
    },
    {
        "id": "50d076d2b05a3a6b",
        "type": "persistent value",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "b3ccc830-4505-11ef-a4b1-fb6c49220709",
        "value": "dataset_path",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 440,
        "y": 1420,
        "wires": [
            [
                "b094db16ee10b12b"
            ],
            []
        ]
    },
    {
        "id": "ed47364d2ee05dd4",
        "type": "file in",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "8bcdfc2623a6d65c"
            ]
        ]
    },
    {
        "id": "b094db16ee10b12b",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "get filename",
        "func": "if(msg.payload){\n    msg.payload.filename = path.basename(msg.payload);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "path",
                "module": "path"
            }
        ],
        "x": 670,
        "y": 1420,
        "wires": [
            [
                "ed47364d2ee05dd4"
            ]
        ]
    },
    {
        "id": "31363c34d65e5218",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "9aa0c8749b9f1030"
            ]
        ]
    },
    {
        "id": "dad2dff397f06377",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 630,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e2d064d340c9f011",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"clear all\",\"args\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "dad2dff397f06377"
            ]
        ]
    },
    {
        "id": "b4b8a2b6c5179ad4",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "group": "5e45a13758b9c23e",
        "page": "",
        "ui": "",
        "name": "Information",
        "order": 3,
        "width": "3",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-information-container\">\n    <p id=\"date\"></p>\n    <p>-</p>\n    <p id=\"time-first-visit\"></p>\n    <span\n      class=\"mdi mdi-account\"\n      :style=\"{ color: 'black' }\"\n      @click=\"menu = true\"\n    ></span>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.payload.profilName }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Manage your data', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n      this.send({payload: item.title});\n    },\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "4d9f44edfc258244"
            ]
        ]
    },
    {
        "id": "4d9f44edfc258244",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Manage your data\") {\n    msg.payload = {\"page\":\"ManageYourData\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Documentation\") {\n    msg.payload = { url: 'https://url.goes.here' }\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    // TODO\n} else if (title == \"Shutdown\") {\n    // TODO\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "9dcc078c686a89b8"
            ]
        ]
    },
    {
        "id": "9dcc078c686a89b8",
        "type": "ui-control",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 860,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5a2fd5aa883e6a41",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "490dfe89220d57c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"profilName\":\"Loïc VASSAUX--ARTUR\"}",
        "payloadType": "json",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "b4b8a2b6c5179ad4"
            ]
        ]
    },
    {
        "id": "7786016a46447829",
        "type": "link out",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "out Map",
        "mode": "link",
        "links": [
            "cd40f94b90bb753c"
        ],
        "x": 435,
        "y": 440,
        "wires": []
    },
    {
        "id": "89615d017cc8a981",
        "type": "link in",
        "z": "f260ed9417849607",
        "g": "90c3a646e08cf822",
        "name": "in Map",
        "links": [
            "8185c9da69152b2e"
        ],
        "x": 365,
        "y": 520,
        "wires": [
            [
                "94d3348c2fa75e5f"
            ]
        ]
    },
    {
        "id": "6860b65791664f1d",
        "type": "persistent value",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "b3ccc830-4505-11ef-a4b1-fb6c49220709",
        "value": "dataset_path",
        "command": "read",
        "msgProperty": "destination",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 800,
        "y": 1560,
        "wires": [
            [
                "c0095bd3c4fd5369",
                "9640278eb6d47dab"
            ],
            []
        ]
    },
    {
        "id": "1e962f2079c6f2e3",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "group": "f215418ba0dbaaad",
        "page": "",
        "ui": "",
        "name": "Replace dataframe",
        "order": 4,
        "width": "2",
        "height": "1",
        "head": "",
        "format": "<template>\n    <div class=\"ReplaceButtonDiv\">\n        <v-btn class=\"ReplaceButton\" @click=\"openFileDialog\">Replace dataframe</v-btn>\n        <input type=\"file\" ref=\"fileInput\" style=\"display: none\" @change=\"fileSelected\">\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            fileContent: '',\n            msg: { payload: '', topic: 'selectedFile' }, // Initialize the message object\n            lines: [] // Array to store the TSV file lines\n        };\n    },\n    methods: {\n        openFileDialog() {\n            this.$refs.fileInput.click();\n        },\n        fileSelected(event) {\n            const file = event.target.files[0];\n            if (file) {\n                // Read the contents of the selected file as a string\n                const reader = new FileReader();\n                reader.onload = function() {\n                    this.fileContent = reader.result;\n                    const lines = this.fileContent.split('\\n'); // Split the file into lines\n                    for (const line of lines) {\n                        if (line !== '') { // Skip empty lines\n                            const cols = line.split('\\t'); // Split the line into columns\n                            const payload = cols.join(','); // Join the columns with commas\n                            this.lines.push(payload); // Add the line to our array\n                            this.send({ topic: 'selectedFile', payload: payload }); // Send each line as a separate message\n                        }\n                    }\n                    this.send({ topic: 'selectedFile', complete: true }); // Send msg.complete\n                }.bind(this);\n                reader.readAsText(file);\n            }\n        }\n    }\n};\n</script>\n\n<style>\n    .ReplaceButtonDiv{\n        display:flex;\n    }\n    .ReplaceButton{\n        flex:1;\n        width:100%;\n        height:100%;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "d35ec9faaebe3bd4",
                "c12d91f312ba4389"
            ]
        ]
    },
    {
        "id": "d35ec9faaebe3bd4",
        "type": "debug",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 1520,
        "wires": []
    },
    {
        "id": "c12d91f312ba4389",
        "type": "join",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "2ec82ed343666992"
            ]
        ]
    },
    {
        "id": "74cf38c8d80b39c7",
        "type": "file",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "filename": "destination",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1700,
        "y": 1560,
        "wires": [
            [
                "452df08781166706"
            ]
        ]
    },
    {
        "id": "2ec82ed343666992",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "recreate .tsv file",
        "func": "// Node-RED Function Node\n// Ensure msg.payload is an array where each element is a line of the data\n\nif (!Array.isArray(msg.payload)) {\n    node.error(\"msg.payload is not an array\", msg);\n    return null;\n}\n\nconst rows = msg.payload;\n\n// Function to parse. Taking care of cells that contains Json object\nfunction parseLine(line) {\n    const result = [];\n    let currentItem = '';\n    let inBraces = 0;\n\n    for (let i = 0; i < line.length; i++) {\n        const char = line[i];\n\n        if (char === '{') {\n            inBraces++;\n        } else if (char === '}') {\n            inBraces--;\n        } else if (char === ',' && inBraces === 0) {\n            result.push(currentItem);\n            currentItem = '';\n            continue;\n        }\n\n        currentItem += char;\n    }\n\n    result.push(currentItem); // Push the last item\n    return result;\n}\n\n// Step 1: Separate headers and data rows\nconst headers = parseLine(rows[0]);\nconst dataRows = rows.slice(1).map(row => parseLine(row));\n\n// Step 2: Remove surrounding quotes from headers and data rows\n//const cleanHeaders = headers.map(header => header.replace(/^\"|\"$/g, ''));\n//const cleanDataRows = dataRows.map(dataRow => dataRow.map(item => item.replace(/^\"|\"$/g, '')));\nconst cleanHeaders = headers;\nconst cleanDataRows = dataRows;\n// Step 3: Join headers and data rows into TSV format\nconst tsvHeaders = cleanHeaders.join(\"\\t\");\nconst tsvDataRows = cleanDataRows.map(dataRow => dataRow.join(\"\\t\")).join(\"\\n\");\n\n// Step 4: Construct the final TSV string\nconst tsvOutput = `${tsvHeaders}\\n${tsvDataRows}`;\n\n// Step 5: Set the output message payload to the TSV string\nmsg.payload = tsvOutput;\n\n// Return the message object\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1560,
        "wires": [
            [
                "6860b65791664f1d"
            ]
        ]
    },
    {
        "id": "a5da80d9e95dfdaf",
        "type": "switch",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "4c5dadcb54550cbb"
            ]
        ]
    },
    {
        "id": "4c5dadcb54550cbb",
        "type": "switch",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "property": "destination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1500,
        "y": 1560,
        "wires": [
            [
                "74cf38c8d80b39c7"
            ]
        ]
    },
    {
        "id": "c0095bd3c4fd5369",
        "type": "debug",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7e538b792d597d2e",
        "type": "link in",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "in DataTable",
        "links": [
            "fcb87e389542e76b",
            "68b62fae889416d2"
        ],
        "x": 1335,
        "y": 820,
        "wires": [
            [
                "f9ea49beed099d6f"
            ]
        ]
    },
    {
        "id": "1b3f2f52d79a978f",
        "type": "link out",
        "z": "f260ed9417849607",
        "g": "3a99d3e5ba59a12d",
        "name": "out DataTable",
        "mode": "link",
        "links": [
            "959eae8c211e5426",
            "fe5d2ab2facb707f"
        ],
        "x": 1395,
        "y": 740,
        "wires": []
    },
    {
        "id": "fe2841e73b262323",
        "type": "link in",
        "z": "f260ed9417849607",
        "g": "856d9c3d6ae49cc6",
        "name": "in ChartSection",
        "links": [
            "5567e81e4ec9703a",
            "986bcf8e0120a93f"
        ],
        "x": 285,
        "y": 2100,
        "wires": [
            [
                "019af3477dfde6a9"
            ]
        ]
    },
    {
        "id": "85270dcda34b8cc8",
        "type": "link out",
        "z": "f260ed9417849607",
        "g": "856d9c3d6ae49cc6",
        "name": "out ChartSection",
        "mode": "link",
        "links": [
            "d500801594206f28"
        ],
        "x": 425,
        "y": 1980,
        "wires": []
    },
    {
        "id": "1e70d69aa2625e53",
        "type": "exec",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1250,
        "y": 1680,
        "wires": [
            [
                "78412c7f6dc52b8f"
            ],
            [],
            []
        ]
    },
    {
        "id": "78412c7f6dc52b8f",
        "type": "debug",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1660,
        "wires": []
    },
    {
        "id": "9640278eb6d47dab",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "rename to file_temp",
        "func": "const destination_path= msg.destination\nlet renamed_destination = destination_path.substring(0,destination_path.length -4)+'_temp'+'.tsv';\nmsg.destination=renamed_destination;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1560,
        "wires": [
            [
                "a5da80d9e95dfdaf"
            ]
        ]
    },
    {
        "id": "452df08781166706",
        "type": "function",
        "z": "f260ed9417849607",
        "d": true,
        "g": "217abb3abac21001",
        "name": "function 3",
        "func": "msg.command=\"cp ./.node_red/\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "f222f4ac9670330a",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "group": "3b6f8b6b4fefa74c",
        "page": "",
        "ui": "",
        "name": "timeline",
        "order": 1,
        "width": "12",
        "height": "3",
        "head": "",
        "format": "<template>\n    <div class=\"timeline-container\">\n        <iframe v-if=\"iframeSrc\" :src=\"iframeSrc\" frameborder=\"0\"></iframe>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            iframeSrc: null\n        };\n    },\n    mounted() {\n        // Écoute des mises à jour du message entrant depuis Node-RED\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload) {\n                if (msg.payload.command === 'add iframe' && msg.payload.src) {\n                    // Ajout d'une iframe contenant la carte\n                    this.addIframe(msg.payload.src);\n                }\n            }\n            if (msg.datas) {\n                this.verifyData(msg.datas);\n            }\n        });\n    },\n    methods: {\n        verifyData(datas) {\n            if (this.iframeSrc !== datas[0]) {\n                this.addIframe(datas[0]);\n            }\n        },\n        addIframe(src) {\n            // Ajouter l'iframe à la vue\n            this.iframeSrc = src;\n        },\n        removeIframe() {\n            // Retirer l'iframe de la vue\n            this.iframeSrc = null;\n        }\n    }\n};\n</script>\n\n<style scoped>\n.timeline-container {\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n}\n\n.timeline-container iframe {\n    position: absolute;\n    overflow:hidden;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 500,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "716a9546a10d44d7",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "",
        "topic": "visualization/timeline",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 800,
        "wires": [
            [
                "f222f4ac9670330a",
                "b5cd94b563000b24"
            ]
        ]
    },
    {
        "id": "86312631e7454d0e",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 240,
        "y": 700,
        "wires": [
            [
                "891e46bad4e67dc3"
            ]
        ]
    },
    {
        "id": "891e46bad4e67dc3",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"create timeline\",\"args\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 700,
        "wires": [
            [
                "1b8975860cf1197a"
            ]
        ]
    },
    {
        "id": "1b8975860cf1197a",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "b5cd94b563000b24",
        "type": "link out",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "out Timeline",
        "mode": "link",
        "links": [
            "df844b0b197b9687"
        ],
        "x": 435,
        "y": 760,
        "wires": []
    },
    {
        "id": "677adf66aaeb8215",
        "type": "link in",
        "z": "f260ed9417849607",
        "g": "d9a24d94ae3bdddb",
        "name": "in Timeline",
        "links": [
            "252e4d385f355983"
        ],
        "x": 365,
        "y": 840,
        "wires": [
            [
                "f222f4ac9670330a"
            ]
        ]
    },
    {
        "id": "6dc5f707f93bece4",
        "type": "mqtt out",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 2270,
        "y": 640,
        "wires": []
    },
    {
        "id": "48c4e8cea0f3babe",
        "type": "ui-template",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "group": "f215418ba0dbaaad",
        "page": "",
        "ui": "",
        "name": "InfoTable",
        "order": 7,
        "width": "3",
        "height": "5",
        "head": "",
        "format": "<template>\n    <div class=\"iframe-container\">\n        <iframe v-if=\"iframeSrc\" :src=\"iframeSrc\" frameborder=\"0\"></iframe>\n    </div>\n</template>\n\n<script>\n    export default {\n    data() {\n        return {\n            iframeSrc: null\n        };\n    },\n    mounted() {\n        // Écoute des mises à jour du message entrant depuis Node-RED\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload) {\n                if (msg.payload.command === 'add iframe' && msg.payload.src) {\n                    // Ajout d'une iframe contenant la carte\n                    this.addIframe(msg.payload.src);\n                }\n            }\n            if (msg.datas){\n                this.verifyData(msg.datas);\n            }\n        });\n    },\n    methods: {\n        verifyData(datas){\n            if(this.iframeSrc !== datas[0]){\n                this.addIframe(datas[0]);\n            }\n        },\n        addIframe(src) {\n            // Ajouter l'iframe à la vue\n            this.iframeSrc = src;\n        },\n        removeIframe() {\n            // Retirer l'iframe de la vue\n            this.iframeSrc = null;\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .iframe-container {\n        width: 100%;\n        height: 100%;\n    }\n\n    iframe {\n        width: 100%;\n        height: 100%;\n        border: none;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2180,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e3eb9d72533782c1",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "",
        "topic": "visualization/infotable",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1840,
        "y": 780,
        "wires": [
            [
                "48c4e8cea0f3babe",
                "1328d8289798347b"
            ]
        ]
    },
    {
        "id": "00b0d1365d72f7ca",
        "type": "inject",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "Run at start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 1830,
        "y": 640,
        "wires": [
            [
                "36f0f5b05b237f22"
            ]
        ]
    },
    {
        "id": "36f0f5b05b237f22",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"init infotable\",\"args\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 640,
        "wires": [
            [
                "6dc5f707f93bece4"
            ]
        ]
    },
    {
        "id": "6f59b7c66be79b8f",
        "type": "link in",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "in InfoTable",
        "links": [
            "4495f51c704206a4"
        ],
        "x": 2075,
        "y": 820,
        "wires": [
            [
                "48c4e8cea0f3babe"
            ]
        ]
    },
    {
        "id": "1328d8289798347b",
        "type": "link out",
        "z": "f260ed9417849607",
        "g": "758f20607e7c5eba",
        "name": "out InfoTable",
        "mode": "link",
        "links": [
            "51a9c4ce41597853"
        ],
        "x": 2135,
        "y": 740,
        "wires": []
    },
    {
        "id": "3909344acb7dde59",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "57592c7f15ca5f8e"
            ]
        ]
    },
    {
        "id": "57592c7f15ca5f8e",
        "type": "debug",
        "z": "f260ed9417849607",
        "name": "MQTT msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "2fe093ecfa16aa73",
        "type": "mqtt in",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "topic": "visualization/dataset",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1060,
        "wires": [
            [
                "58b70a617c6a0213"
            ]
        ]
    },
    {
        "id": "58b70a617c6a0213",
        "type": "change",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "select",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1060,
        "wires": [
            [
                "d80c1ba1cd41c454"
            ]
        ]
    },
    {
        "id": "d80c1ba1cd41c454",
        "type": "function",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "Select tsv file",
        "func": "// Create a closure to store the last payload\nlet lastPayload = context.get('TSV_files_found') || {};\n\nfunction handleMessage(msg) {\n    // Check if the message contains payload to store\n    if (msg.options && Array.isArray(msg.options) && !msg.select) {\n        // Store the new payload\n        if (lastPayload!=msg.options){\n            context.set('TSV_files_found', msg.options);            // Optionally, log or debug the stored payload\n            //node.warn('Payload stored: ' + JSON.stringify(msg.options));\n            return null; // No output required for storing the payload\n        }\n        \n    }\n\n    // Check if the message contains a select key\n    if (msg.select && typeof msg.select === 'string') {\n\n        // Search the stored payload for the matching label\n        if (lastPayload) {\n            for (let item of lastPayload) {\n                if (item.label === msg.select) {\n                    node.warn('Match found : '+item.value)\n                    return { payload: item.value };\n                }\n            }\n        }\n        \n        // If no matching label is found, log a warning and return null\n        node.warn('Label not found: ' + msg.select);\n        return { payload: null }; // Or handle the case as required\n    }\n\n    // If the message doesn't meet any conditions, just pass it through (or handle as needed)\n    return null;\n}\n\n// Define the function node behavior\nreturn handleMessage(msg);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "path",
                "module": "path"
            },
            {
                "var": "fs",
                "module": "fs.promises"
            },
            {
                "var": "AdmZip",
                "module": "adm-zip"
            }
        ],
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "e4c5ac606ec6a5db",
                "5299cd86668a8449"
            ]
        ]
    },
    {
        "id": "8bcdfc2623a6d65c",
        "type": "downloadfile",
        "z": "f260ed9417849607",
        "g": "217abb3abac21001",
        "name": "",
        "filename": "",
        "encoding": "none",
        "x": 1050,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fc701c9ad326380a",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "link out 68",
        "mode": "link",
        "links": [
            "d1f80e39243d05fb"
        ],
        "x": 1215,
        "y": 180,
        "wires": []
    },
    {
        "id": "679e3c949c5dce47",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "group": "1cdfa74c2156e48f",
        "page": "",
        "ui": "",
        "name": "top-header-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"header-top-home-container\">\n    <div class=\"header-top-home-container-left\" @click=\"navigateToHome\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\"\n        alt=\"PlanktoScope logo\"\n      />\n      <p>PlanktoScope GUI</p>\n    </div>\n\n    <div class=\"header-top-home-container-right\">\n      <div class=\"header-top-home-information-container\">\n        <p id=\"date\"></p>\n        <p>-</p>\n        <p id=\"time-first-visit\"></p>\n        <span\n          class=\"mdi mdi-account\"\n          :style=\"{ color: 'black' }\"\n          @click=\"menu = true\"\n        ></span>\n      </div>\n    </div>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.operator_name }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Manage your data', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n    navigateToHome() {\n      this.send(\"Home\");\n    }\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-top-home-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    border-bottom: 1px solid black;\n    display: flex;\n  }\n\n  .header-top-home-container-left {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 1rem;\n    cursor: pointer;\n  }\n\n  .header-top-home-container-left img {\n    height: 2vw;\n    width: 2vw;\n    margin-right: 0.6rem;\n  }\n\n  .header-top-home-container-left p {\n    font-size: 1vw;\n    color: black;\n    font-weight: 600;\n  }\n\n  .header-top-home-container-right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "3519c483c429e46f"
            ]
        ]
    },
    {
        "id": "38b9b989ed435680",
        "type": "ui-control",
        "z": "5047c566973ee3a1",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 160,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d1f80e39243d05fb",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "name": "link in 54",
        "links": [
            "fc701c9ad326380a",
            "6db5780f32d06404"
        ],
        "x": 65,
        "y": 40,
        "wires": [
            [
                "38b9b989ed435680"
            ]
        ]
    },
    {
        "id": "60b2ecc0d6e457c8",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "c8544c656ab24cf4",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-sample",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"settings-container\">\n    <section>\n      <h2>Sample</h2>\n    </section>\n    <section class=\"settings-sample-container\">\n      <label>GPS Format</label>\n      <v-select\n        v-model=\"coordFormat\"\n        :items=\"['Decimal degrees (DD)', 'Degrees, minutes and seconds (DMS)']\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog\"\n        density=\"compact\"\n      ></v-select>\n    </section>\n  </div>\n\n  <!-- Dialog -->\n  <v-dialog v-model=\"dialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Information</v-card-title>\n      <v-card-text>\n        This is an information dialog.\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      coordFormat: [],\n      dialog: false,\n    };\n  },\n  methods: {\n    openDialog() {\n      this.dialog = true;\n    },\n    closeDialog() {\n      this.dialog = false;\n    },\n  },\n  watch: {\n    coordFormat: {\n      handler(newVal) {\n        this.send({ payload: newVal });\n      },\n      deep: true,\n    },\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload) {\n            this.coordFormat = msg.payload;\n          }\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n};\n</script>\n\n<style>\n.settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.settings-sample-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n}\n\n.settings-sample-container label {\n  margin-right: 1rem;\n}\n\n.settings-sample-container .v-input {\n  max-width: 500px;\n}\n\n.settings-sample-container .v-input__details {\n  display: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 660,
        "wires": [
            [
                "53b390b93b29c5fa"
            ]
        ]
    },
    {
        "id": "8b6ce849b7c7c43f",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "c8544c656ab24cf4",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "1e747130-1d0e-11ef-8a67-d1728875f042",
        "value": "coord-format",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "60b2ecc0d6e457c8"
            ],
            []
        ]
    },
    {
        "id": "53b390b93b29c5fa",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "c8544c656ab24cf4",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "1e747130-1d0e-11ef-8a67-d1728875f042",
        "value": "coord-format",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 910,
        "y": 660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "33b7801889f49dfe",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-operator",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"settings-container\">\n    <section>\n      <h2>Operator</h2>\n    </section>\n    <section class=\"settings-operator-container\">\n      <label>Name</label>\n      <v-text-field\n        v-model=\"operator_name\"\n        density=\"compact\"\n        clearable\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('operatorName')\"\n      ></v-text-field>\n    </section>\n    <section class=\"settings-operator-container\">\n      <label>Email</label>\n      <v-text-field\n        v-model=\"operator_email\"\n        density=\"compact\"\n        clearable\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('operatorEmail')\"\n      ></v-text-field>\n    </section>\n  </div>\n\n  <!-- Dialogs -->\n  <v-dialog v-model=\"dialogs.operatorName\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Operator Name Information</v-card-title>\n      <v-card-text>This is the operator name information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('operatorName')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.operatorEmail\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Operator Email Information</v-card-title>\n      <v-card-text>This is the operator email information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('operatorEmail')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      operator_name: '',\n      operator_email: '',\n      dialogs: {\n        operatorName: false,\n        operatorEmail: false,\n      },\n    };\n  },\n  created() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (msg.payload.operator_name) {\n          this.operator_name = msg.payload.operator_name;\n        }\n        if (msg.payload.operator_email) {\n          this.operator_email = msg.payload.operator_email;\n        }\n      });\n    }\n  },\n  methods: {\n    openDialog(dialogName) {\n      this.dialogs[dialogName] = true;\n    },\n    closeDialog(dialogName) {\n      this.dialogs[dialogName] = false;\n    },\n  },\n  watch: {\n    operator_name: {\n      handler(newVal) {\n        if (newVal != \"\" && newVal != null) {\n          this.send({\n            payload: {\n              operator_name: newVal,\n              operator_email: this.operator_email,\n            },\n          });\n        }\n      },\n      deep: true,\n    },\n    operator_email: {\n      handler(newVal) {\n        if (newVal != \"\" && newVal != null) {\n          this.send({\n            payload: {\n              operator_name: this.operator_name,\n              operator_email: newVal,\n            },\n          });\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.operator_email) {\n            this.operator_email = msg.operator_email;\n          }\n          if (msg.operator_name) {\n            this.operator_name = msg.operator_name;\n          }\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n};\n</script>\n\n<style>\n.settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.settings-container h2 {\n  margin-bottom: 1rem;\n}\n\n.settings-operator-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.settings-operator-container label {\n  margin-right: 1rem;\n  min-width: 100px;\n}\n\n.settings-operator-container .v-input {\n  max-width: 500px;\n}\n\n.settings-operator-container .v-input__details {\n  display: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "460fb659adbbae17",
                "7b3e64e2512b4f9f"
            ]
        ]
    },
    {
        "id": "3818cc8b0a5aabed",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "name": "link out 69",
        "mode": "link",
        "links": [
            "4e5baf21e265d811",
            "c52bf2a4ca8f30e3",
            "b1e3240bad8585c3",
            "323fc05b6b6661cf",
            "50a812cd9b3daf49",
            "f15fabe9a83fbae7",
            "ce9a58a38a8120dc",
            "ea3288b5bc6bc136"
        ],
        "x": 395,
        "y": 40,
        "wires": []
    },
    {
        "id": "4e5baf21e265d811",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "c8544c656ab24cf4",
        "name": "link in 55",
        "links": [
            "3818cc8b0a5aabed",
            "5059739dbd1ae510",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 185,
        "y": 660,
        "wires": [
            [
                "8b6ce849b7c7c43f"
            ]
        ]
    },
    {
        "id": "c52bf2a4ca8f30e3",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "name": "link in 56",
        "links": [
            "3818cc8b0a5aabed",
            "5059739dbd1ae510",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 185,
        "y": 360,
        "wires": [
            [
                "def19b85f4af5b99",
                "4716e00ccb75257f"
            ]
        ]
    },
    {
        "id": "def19b85f4af5b99",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "operator_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "33b7801889f49dfe"
            ],
            []
        ]
    },
    {
        "id": "4716e00ccb75257f",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "456f9de0-42a3-11ef-89ad-e57161842148",
        "value": "operator_email",
        "command": "read",
        "msgProperty": "operator_email",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 380,
        "y": 380,
        "wires": [
            [
                "33b7801889f49dfe"
            ],
            []
        ]
    },
    {
        "id": "460fb659adbbae17",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "write",
        "msgProperty": "payload.operator_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 940,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7b3e64e2512b4f9f",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "149a607c8eda744a",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "456f9de0-42a3-11ef-89ad-e57161842148",
        "value": "operator_email",
        "command": "write",
        "msgProperty": "payload.operator_email",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 940,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4a6052524bce45c6",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "operator_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "679e3c949c5dce47"
            ],
            []
        ]
    },
    {
        "id": "b1e3240bad8585c3",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "link in 57",
        "links": [
            "3818cc8b0a5aabed",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 185,
        "y": 200,
        "wires": [
            [
                "4a6052524bce45c6"
            ]
        ]
    },
    {
        "id": "4cebedc5cc8a9e7b",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-preview",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"settings-container\">\n    <section>\n      <h2>Preview</h2>\n    </section>\n    <section class=\"settings-preview-container\">\n      <label>Flowrate preset</label>\n      <v-text-field v-model=\"flowrate_preset[0]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"flowrate_preset[1]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"flowrate_preset[2]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"flowrate_preset[3]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n    </section>\n    <section class=\"settings-preview-container\">\n      <label>Volume preset</label>\n      <v-text-field type=\"number\" disabled density=\"compact\" variant=\"outlined\">\n        <span class=\"mdi mdi-infinity\">\n      </v-text-field>\n      <v-text-field v-model=\"volume_preset[0]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"volume_preset[1]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"volume_preset[2]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n    </section>\n    <section class=\"settings-preview-container\">\n      <label>Focus preset</label>\n      <v-text-field v-model=\"focus_preset[0]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"focus_preset[1]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"focus_preset[2]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n      <v-text-field v-model=\"focus_preset[3]\" type=\"number\" density=\"compact\" variant=\"outlined\"></v-text-field>\n    </section>\n  </div>\n  <v-dialog v-model=\"dialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Information</v-card-title>\n      <v-card-text>\n        This is an information dialog 1.\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"switchDialog\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        flowrate_preset: [],\n        volume: \"infini\",\n        volume_preset: [],\n        focus_preset: [],\n        dialog: false,\n      }\n    },\n    created() {\n      if (this.$socket) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.flowrate_preset) {\n            this.flowrate_preset = msg.flowrate_preset;\n          }\n          if (msg.volume_preset) {\n            this.volume_preset = msg.volume_preset;\n          }\n          if (msg.focus_preset) {\n            this.focus_preset = msg.focus_preset;\n          }\n        });\n      }\n    },\n    methods: {\n      switchDialog() {\n        this.dialog = !this.dialog;\n      },\n    },\n    watch: {\n      flowrate_preset: {\n        handler(newVal) {\n          if (newVal != \"\" && newVal != null) {\n            this.send({ payload: {\n              flowrate_preset: newVal,\n              volume_preset: this.volume_preset,\n              focus_preset: this.focus_preset,\n            }});\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      volume_preset: {\n        handler(newVal) {\n          if (newVal != \"\" && newVal != null) {\n            this.send({ payload: {\n              flowrate_preset: this.flowrate_preset,\n              volume_preset: newVal,\n              focus_preset: this.focus_preset,\n            }});\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      focus_preset: {\n        handler(newVal) {\n          if (newVal != \"\" && newVal != null) {\n            this.send({ payload: {\n              flowrate_preset: this.flowrate_preset,\n              volume_preset: this.volume_preset,\n              focus_preset: newVal,\n            }});\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      '$socket': {\n        handler(newVal, oldVal) {\n          this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.flowrate_preset) {\n              this.flowrate_preset = msg.flowrate_preset;\n            }\n            if (msg.volume_preset) {\n              this.volume_preset = msg.volume_preset;\n            }\n            if (msg.focus_preset) {\n              this.focus_preset = msg.focus_preset;\n            }\n          });\n        },\n        deep: true,\n        immediate: true\n      }\n    }\n  }\n</script>\n\n<style>\n\n  .settings-container {\n    border: black 1px solid;\n    border-radius: 5px;\n    padding: 1rem;\n  }\n\n  .settings-preview-container {\n    display: flex;\n    align-items: center;\n    padding-left: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .settings-preview-container label {\n    margin-right: 1rem;\n    min-width: 100px;\n  }\n\n  .settings-preview-container .v-input {\n    max-width: 100px;\n    margin-right: 0.25rem;\n  }\n\n  .settings-preview-container .v-input__details {\n    display: none;\n  }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "a0d6e1698fda59ed",
                "26a14f41d013e47a",
                "b07c9313574e2c5e"
            ]
        ]
    },
    {
        "id": "323fc05b6b6661cf",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "link in 58",
        "links": [
            "3818cc8b0a5aabed",
            "5059739dbd1ae510",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 155,
        "y": 520,
        "wires": [
            [
                "683c6eaea5e163cb",
                "8b25d62dcb29d8ee",
                "82c806b98af85f3b"
            ]
        ]
    },
    {
        "id": "683c6eaea5e163cb",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "ceeda8d0-42aa-11ef-89ad-e57161842148",
        "value": "flowrate_preset",
        "command": "read",
        "msgProperty": "flowrate_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 480,
        "wires": [
            [
                "4cebedc5cc8a9e7b"
            ],
            []
        ]
    },
    {
        "id": "a0d6e1698fda59ed",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "ceeda8d0-42aa-11ef-89ad-e57161842148",
        "value": "flowrate_preset",
        "command": "write",
        "msgProperty": "payload.flowrate_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 960,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8b25d62dcb29d8ee",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "4552e290-42ad-11ef-89ad-e57161842148",
        "value": "volume_preset",
        "command": "read",
        "msgProperty": "volume_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "4cebedc5cc8a9e7b"
            ],
            []
        ]
    },
    {
        "id": "82c806b98af85f3b",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "59a90800-42ad-11ef-89ad-e57161842148",
        "value": "focus_preset",
        "command": "read",
        "msgProperty": "focus_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 560,
        "wires": [
            [
                "4cebedc5cc8a9e7b"
            ],
            []
        ]
    },
    {
        "id": "26a14f41d013e47a",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "4552e290-42ad-11ef-89ad-e57161842148",
        "value": "volume_preset",
        "command": "write",
        "msgProperty": "payload.volume_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 960,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b07c9313574e2c5e",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "8832a7e3b9ea8c13",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "59a90800-42ad-11ef-89ad-e57161842148",
        "value": "focus_preset",
        "command": "write",
        "msgProperty": "payload.focus_preset",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 950,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3405fdbeca45c434",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-acquisition",
        "order": 4,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"settings-container\">\n    <section>\n      <h2>Acquisition</h2>\n    </section>\n    <section class=\"settings-acquisition-container\">\n      <label>Delay to stabilized</label>\n      <v-text-field v-model=\"delay_to_stabilize\" type=\"number\" density=\"compact\" suffix=\"s\" variant=\"outlined\" append-icon=\"mdi-information\" @click:append=\"openDialog\"></v-text-field>\n    </section>\n    <section class=\"settings-acquisition-container\">\n      <label>Flowrate in between each images</label>\n      <v-text-field v-model=\"flowrate_in_between\" type=\"number\" density=\"compact\" suffix=\"ml/min\" variant=\"outlined\" append-icon=\"mdi-information\" @click:append=\"openDialog\"></v-text-field>\n    </section>\n  </div>\n  <v-dialog v-model=\"dialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Information</v-card-title>\n      <v-card-text>\n        This is an information dialog 1.\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        delay_to_stabilize: '',\n        flowrate_in_between: '',\n        dialog: false,\n      }\n    },\n    created() {\n      if (this.$socket) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload.delay_to_stabilize) {\n            this.delay_to_stabilize = msg.payload.delay_to_stabilize;\n          }\n          if (msg.payload.flowrate_in_between) {\n            this.flowrate_in_between = msg.payload.flowrate_in_between;\n          }\n        });\n      }\n    },\n    methods: {\n      openDialog() {\n        this.dialog = true;\n      },\n      closeDialog() {\n        this.dialog = false;\n      },\n    },\n    watch: {\n      delay_to_stabilize: {\n        handler(newVal) {\n          if (newVal != \"\" && newVal != null) {\n            this.send({\n              payload: {\n                delay_to_stabilize: newVal,\n                flowrate_in_between: this.flowrate_in_between\n              }\n            });\n          }\n        },\n        deep: true\n      },\n      flowrate_in_between: {\n        handler(newVal) {\n          if (newVal != \"\" && newVal != null) {\n            this.send({\n              payload: {\n                delay_to_stabilize: this.delay_to_stabilize,\n                flowrate_in_between: newVal\n              }\n            });\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      '$socket': {\n        handler(newVal, oldVal) {\n          this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.payload.flowrate_in_between) {\n              this.flowrate_in_between = msg.payload.flowrate_in_between;\n            }\n            if (msg.payload.delay_to_stabilize) {\n              this.delay_to_stabilize = msg.payload.delay_to_stabilize;\n            }\n          });\n        },\n        deep: true,\n        immediate: true\n      }\n    }\n  }\n</script>\n\n<style>\n\n  .settings-container {\n    border: black 1px solid;\n    border-radius: 5px;\n    padding: 1rem;\n  }\n\n  .settings-acquisition-container {\n    display: flex;\n    align-items: center;\n    padding-left: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  .settings-acquisition-container label {\n    min-width: 230px;\n  }\n\n  .settings-acquisition-container .v-input {\n    max-width: 170px;\n  }\n\n  .settings-acquisition-container .v-input__details {\n    display: none;\n  }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 780,
        "wires": [
            [
                "e17de7cede28b990",
                "fb3284d43226bc67"
            ]
        ]
    },
    {
        "id": "50a812cd9b3daf49",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "name": "link in 62",
        "links": [
            "3818cc8b0a5aabed",
            "5059739dbd1ae510",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 145,
        "y": 780,
        "wires": [
            [
                "bfc1c9e460621e6b",
                "e726426c28381b18"
            ]
        ]
    },
    {
        "id": "bfc1c9e460621e6b",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "002259e0-42c0-11ef-89ad-e57161842148",
        "value": "delay_to_stabilized",
        "command": "read",
        "msgProperty": "payload.delay_to_stabilize",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 350,
        "y": 760,
        "wires": [
            [
                "3405fdbeca45c434"
            ],
            []
        ]
    },
    {
        "id": "e726426c28381b18",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "16042860-42c0-11ef-89ad-e57161842148",
        "value": "flowrate_in_between",
        "command": "read",
        "msgProperty": "payload.flowrate_in_between",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 360,
        "y": 800,
        "wires": [
            [
                "3405fdbeca45c434"
            ],
            []
        ]
    },
    {
        "id": "e17de7cede28b990",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "002259e0-42c0-11ef-89ad-e57161842148",
        "value": "delay_to_stabilized",
        "command": "write",
        "msgProperty": "payload.delay_to_stabilize",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 950,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fb3284d43226bc67",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "5518fb6d8287c2dc",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "16042860-42c0-11ef-89ad-e57161842148",
        "value": "flowrate_in_between",
        "command": "write",
        "msgProperty": "payload.flowrate_in_between",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 960,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5feeca33f3a87c8a",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "290796618b24955f",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-segmentation",
        "order": 5,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"settings-container\">\n    <section>\n      <h2>Segmentation</h2>\n    </section>\n    <section class=\"settings-segmentation-container\">\n      <label>MSTS (Minimal size to segment)</label>\n      <v-text-field v-model=\"msts\" type=\"number\" density=\"compact\" variant=\"outlined\" append-icon=\"mdi-information\" @click:append=\"switchDialog\"></v-text-field>\n    </section>\n  </div>\n  <v-dialog v-model=\"dialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Information</v-card-title>\n      <v-card-text>\n        This is an information dialog.\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"switchDialog\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        msts: '',\n        dialog: false,\n      }\n    },\n    created() {\n      if (this.$socket) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.msts) {\n            this.msts = msg.msts;\n          }\n        });\n      }\n    },\n    methods: {\n      switchDialog() {\n        this.dialog = !this.dialog;\n      },\n    },\n    watch: {\n      msts: {\n        handler(newVal) {\n          this.send({ payload: newVal });\n        },\n        deep: true\n      },\n      '$socket': {\n        handler(newVal, oldVal) {\n          this.$socket.on('msg-input:' + this.id, (msg) => {\n            if (msg.msts) {\n              this.msts = msg.msts;\n            }\n          });\n        },\n        deep: true,\n        immediate: true\n      }\n    }\n  }\n</script>\n\n<style>\n\n  .settings-container {\n    border: black 1px solid;\n    border-radius: 5px;\n    padding: 1rem;\n  }\n\n  .settings-segmentation-container {\n    display: flex;\n    align-items: center;\n    padding-left: 1rem;\n  }\n\n  .settings-segmentation-container label {\n    margin-right: 1rem;\n  }\n\n\n  .settings-segmentation-container .v-input {\n    max-width: 170px;\n  }\n\n  .settings-segmentation-container .v-input__details {\n    display: none;\n  }\n\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 900,
        "wires": [
            [
                "1d6f4ea4e54b0656"
            ]
        ]
    },
    {
        "id": "7bfa8347d6717246",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "290796618b24955f",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "54330ee0-437d-11ef-946b-75401899c243",
        "value": "MSTS",
        "command": "read",
        "msgProperty": "msts",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 390,
        "y": 900,
        "wires": [
            [
                "5feeca33f3a87c8a"
            ],
            []
        ]
    },
    {
        "id": "1d6f4ea4e54b0656",
        "type": "persistent value",
        "z": "5047c566973ee3a1",
        "g": "290796618b24955f",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "54330ee0-437d-11ef-946b-75401899c243",
        "value": "MSTS",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 930,
        "y": 900,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ea3288b5bc6bc136",
        "type": "link in",
        "z": "5047c566973ee3a1",
        "g": "290796618b24955f",
        "name": "link in 75",
        "links": [
            "3818cc8b0a5aabed",
            "5059739dbd1ae510",
            "dda766f441681122",
            "64f12fa191e7d7e0"
        ],
        "x": 225,
        "y": 900,
        "wires": [
            [
                "7bfa8347d6717246"
            ]
        ]
    },
    {
        "id": "23ffd2c116cbdf71",
        "type": "ui-template",
        "z": "5047c566973ee3a1",
        "g": "925817a4bacd25ee",
        "group": "0531957b8d4ecb7d",
        "page": "",
        "ui": "",
        "name": "settings-segmentation",
        "order": 6,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"default-button-container\">\n    <v-btn color=\"orange darken-2\" class=\"default-settings-btn\" @click=\"confirmRestore\">Default settings</v-btn>\n  </div>\n</template>\n\n<script>\n  export default {\n  data() {\n    return {\n      msts: '',\n    };\n  },\n  methods: {\n    confirmRestore() {\n      if (confirm(\"Are you sure you want to reset default settings?\")) {\n        this.send({ payload: \"reset\" });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n  .default-button-container {\n    position: relative;\n  }\n\n  .default-settings-btn {\n    position: absolute;\n    bottom: 1rem;\n    right: 0rem;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 1000,
        "wires": [
            [
                "250fac5d08b457a3",
                "13849494e0caeed1"
            ]
        ]
    },
    {
        "id": "250fac5d08b457a3",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "g": "925817a4bacd25ee",
        "name": "link out 80",
        "mode": "link",
        "links": [
            "f67384bd93fa9723"
        ],
        "x": 895,
        "y": 1000,
        "wires": []
    },
    {
        "id": "90e4abe12845a2df",
        "type": "ui-event",
        "z": "5047c566973ee3a1",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "3818cc8b0a5aabed"
            ]
        ]
    },
    {
        "id": "6fa34a1f2515c4cf",
        "type": "inject",
        "z": "5047c566973ee3a1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 530,
        "y": 40,
        "wires": [
            [
                "dda766f441681122"
            ]
        ]
    },
    {
        "id": "dda766f441681122",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "name": "link out 100",
        "mode": "link",
        "links": [
            "4e5baf21e265d811",
            "c52bf2a4ca8f30e3",
            "b1e3240bad8585c3",
            "323fc05b6b6661cf",
            "50a812cd9b3daf49",
            "f15fabe9a83fbae7",
            "ce9a58a38a8120dc",
            "ea3288b5bc6bc136"
        ],
        "x": 625,
        "y": 40,
        "wires": []
    },
    {
        "id": "51af5dbb613ee249",
        "type": "switch",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1100,
        "y": 200,
        "wires": [
            [
                "fc701c9ad326380a"
            ],
            [
                "d3d0015f9eb7b566"
            ]
        ]
    },
    {
        "id": "3519c483c429e46f",
        "type": "function",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "51af5dbb613ee249"
            ]
        ]
    },
    {
        "id": "d3d0015f9eb7b566",
        "type": "switch",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "aefc0f84026bcf7b"
            ],
            [
                "9f4d9eacaefc1402"
            ]
        ]
    },
    {
        "id": "aefc0f84026bcf7b",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "link out 123",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1355,
        "y": 200,
        "wires": []
    },
    {
        "id": "9f4d9eacaefc1402",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "g": "1001f50c9610fbab",
        "name": "link out 124",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1355,
        "y": 240,
        "wires": []
    },
    {
        "id": "13849494e0caeed1",
        "type": "delay",
        "z": "5047c566973ee3a1",
        "g": "925817a4bacd25ee",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 1040,
        "wires": [
            [
                "5218538b73a8aa1d"
            ]
        ]
    },
    {
        "id": "5218538b73a8aa1d",
        "type": "change",
        "z": "5047c566973ee3a1",
        "g": "925817a4bacd25ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"\"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1040,
        "wires": [
            [
                "6db5780f32d06404"
            ]
        ]
    },
    {
        "id": "6db5780f32d06404",
        "type": "link out",
        "z": "5047c566973ee3a1",
        "g": "925817a4bacd25ee",
        "name": "link out 129",
        "mode": "link",
        "links": [
            "d1f80e39243d05fb"
        ],
        "x": 1235,
        "y": 1040,
        "wires": []
    },
    {
        "id": "55974a9928ce597e",
        "type": "persistent value",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "operator_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 520,
        "y": 220,
        "wires": [
            [
                "68dcdfd23b3a33a9"
            ],
            []
        ]
    },
    {
        "id": "68dcdfd23b3a33a9",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "group": "66feb1d92e90139e",
        "page": "",
        "ui": "",
        "name": "top-header-home",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"header-hardware-settings-container\">\n    <div class=\"header-hardware-settings-container-left\" @click=\"navigateToHome\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\"\n        alt=\"PlanktoScope logo\"\n      />\n      <p>PlanktoScope GUI</p>\n    </div>\n\n    <div class=\"header-hardware-settings-container-right\">\n      <div class=\"header-hardware-settings-information-container\">\n        <p id=\"date\"></p>\n        <p>-</p>\n        <p id=\"time-first-visit\"></p>\n        <span\n          class=\"mdi mdi-account\"\n          :style=\"{ color: 'black' }\"\n          @click=\"menu = true\"\n        ></span>\n      </div>\n    </div>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.operator_name }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Manage your data', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n    navigateToHome() {\n      this.send(\"Home\");\n    }\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-hardware-settings-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    border-bottom: 1px solid black;\n    display: flex;\n    z-index: 1000000;\n  }\n\n  .header-hardware-settings-container-left {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 1rem;\n    cursor: pointer;\n  }\n\n  .header-hardware-settings-container-left img {\n    height: 2vw;\n    width: 2vw;\n    margin-right: 0.6rem;\n  }\n\n  .header-hardware-settings-container-left p {\n    font-size: 1vw;\n    color: black;\n    font-weight: 600;\n  }\n\n  .header-hardware-settings-container-right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .header-top-home-information-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-top-home-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-top-home-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 220,
        "wires": [
            [
                "02992a4ffb79bff1"
            ]
        ]
    },
    {
        "id": "05f3de085aa30475",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "name": "link out 76",
        "mode": "link",
        "links": [
            "49a5004745cdf3c3",
            "4c0ac6db11a8f2c3",
            "b0f02965c34beb87"
        ],
        "x": 275,
        "y": 100,
        "wires": []
    },
    {
        "id": "fda6a38f1b44263a",
        "type": "ui-control",
        "z": "b70df4b6cc88d09a",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 220,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3f473766a11c3784",
        "type": "link in",
        "z": "b70df4b6cc88d09a",
        "name": "link in 73",
        "links": [
            "1e8f3d0638de936c",
            "350acdaf74ad1e92",
            "6f2c5ba3e6f59083",
            "4ef5395a3ff59a2e"
        ],
        "x": 125,
        "y": 40,
        "wires": [
            [
                "fda6a38f1b44263a"
            ]
        ]
    },
    {
        "id": "1e8f3d0638de936c",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "link out 77",
        "mode": "link",
        "links": [
            "3f473766a11c3784"
        ],
        "x": 1295,
        "y": 200,
        "wires": []
    },
    {
        "id": "49a5004745cdf3c3",
        "type": "link in",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "link in 74",
        "links": [
            "05f3de085aa30475",
            "dbecc464b33d6070",
            "a780a0b1af9b2c79",
            "880ceeed52992801",
            "e347b601d0249115",
            "9c2590d80c6812bb"
        ],
        "x": 365,
        "y": 220,
        "wires": [
            [
                "55974a9928ce597e"
            ]
        ]
    },
    {
        "id": "c5c51a15b8e79bf3",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "group": "a0214d355e87bc40",
        "page": "",
        "ui": "",
        "name": "hardware-settings-section-one",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"hardware-settings-container\">\n    <section>\n      <h2>Section one</h2>\n    </section>\n    <section class=\"hardware-settings-section-one-container\">\n      <label>Model</label>\n      <v-select\n        v-model=\"selected_hardware_model\"\n        :items=\"model_list\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('model')\"\n        density=\"compact\"\n      ></v-select>\n    </section>\n    <section class=\"hardware-settings-section-one-container\">\n      <label>CPU</label>\n      <div class=\"text-field-container\" @click=\"openDialog('cpu')\">\n        <v-text-field\n          disabled\n          v-model=\"hardware_cpu\"\n          density=\"compact\"\n          variant=\"outlined\"\n          append-icon=\"mdi-information\"\n        ></v-text-field>\n      </div>\n    </section>\n    <section class=\"hardware-settings-section-one-container\">\n      <label>RAM</label>\n      <div class=\"text-field-container\" @click=\"openDialog('ram')\">\n        <v-text-field\n          disabled\n          v-model=\"hardware_ram\"\n          density=\"compact\"\n          variant=\"outlined\"\n          append-icon=\"mdi-information\"\n        ></v-text-field>\n      </div>\n    </section>\n    <section class=\"hardware-settings-section-one-container\">\n      <label>HAT</label>\n      <v-select\n        v-model=\"selected_hardware_hat\"\n        :items=\"['Adafruit Hat', 'PlanktoScope Hat']\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('hat')\"\n        density=\"compact\"\n      ></v-select>\n    </section>\n    <section class=\"hardware-settings-section-one-container\">\n      <label>Driver</label>\n      <v-select\n        v-model=\"selected_hardware_driver\"\n        :items=\"hardware_driver\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('driver')\"\n        density=\"compact\"\n      ></v-select>\n    </section>\n  </div>\n\n  <!-- Dialogs -->\n  <v-dialog v-model=\"dialogs.model\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Model Information</v-card-title>\n      <v-card-text>This is the model information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('model')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.cpu\" max-width=\"500\">\n    <v-card>\n      <v-card-title>CPU Information</v-card-title>\n      <v-card-text>This is the CPU information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('cpu')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.ram\" max-width=\"500\">\n    <v-card>\n      <v-card-title>RAM Information</v-card-title>\n      <v-card-text>This is the RAM information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('ram')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.hat\" max-width=\"500\">\n    <v-card>\n      <v-card-title>HAT Information</v-card-title>\n      <v-card-text>This is the HAT information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('hat')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.driver\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Driver Information</v-card-title>\n      <v-card-text>This is the driver information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('driver')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: ['msg'],\n  data() {\n    return {\n      selected_hardware_model: '',\n      selected_hardware_driver: '',\n      selected_hardware_hat: '',\n      model_list: [],\n      hardware_driver: [],\n      hardware_hat: [],\n      hardware_cpu: '',\n      hardware_ram: '',\n      dialogs: {\n        model: false,\n        cpu: false,\n        ram: false,\n        hat: false,\n        driver: false,\n      },\n    };\n  },\n  watch: {\n    selected_hardware_model: {\n      handler(newVal) {\n        this.send({ new_model_selected: newVal });\n      }\n    },\n    msg: {\n      handler(newVal) {\n        if (newVal.payload) {\n          const { payload } = newVal;\n          if (payload.model_selected !== undefined) {\n            this.selected_hardware_model = payload.model_selected;\n          }\n          if (payload.selected_hat !== undefined) {\n            this.selected_hardware_hat = payload.selected_hat;\n          }\n          if (payload.hardware_driver !== undefined) {\n            this.selected_hardware_driver = payload.hardware_driver[0];\n            this.hardware_driver = payload.hardware_driver;\n          }\n          if (payload.hardware_cpu !== undefined) {\n            this.hardware_cpu = payload.hardware_cpu;\n          }\n          if (payload.hardware_ram !== undefined) {\n            this.hardware_ram = payload.hardware_ram;\n          }\n          if (payload.model_list !== undefined) {\n            this.model_list = payload.model_list;\n          }\n          if (payload.hardware_hat !== undefined) {\n            this.hardware_hat = payload.hardware_hat;\n          }\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    openDialog(dialogName) {\n      this.dialogs[dialogName] = true;\n    },\n    closeDialog(dialogName) {\n      this.dialogs[dialogName] = false;\n    },\n  }\n};\n</script>\n\n<style>\n.hardware-settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.hardware-settings-container h2 {\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-one-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-one-container label {\n  margin-right: 1rem;\n  min-width: 100px;\n}\n\n.hardware-settings-section-one-container .v-input {\n  max-width: 500px;\n}\n\n.hardware-settings-section-one-container .v-input__details {\n  display: none;\n}\n\n.hardware-settings-section-one-container .text-field-container {\n  display: inline-flex;\n  width: 500px;\n  cursor: pointer;\n}\n\n.hardware-settings-section-one-container .text-field-container .v-text-field {\n  pointer-events: none; /* Disable pointer events for the v-text-field */\n}\n\n.hardware-settings-section-one-container .v-input__append-inner {\n  cursor: pointer;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 360,
        "wires": [
            [
                "0aead36053762ea4"
            ]
        ]
    },
    {
        "id": "4651884da3cb8f8e",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "g": "872edfac5cde1d2c",
        "group": "a0214d355e87bc40",
        "page": "",
        "ui": "",
        "name": "hardware-settings-section-two",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"hardware-settings-container\">\n    <section>\n      <h2>Section two</h2>\n    </section>\n    <section class=\"hardware-settings-section-two-container\">\n      <label>Camera</label>\n      <div class=\"text-field-container\" @click=\"openDialog('camera')\">\n        <v-text-field\n          disabled\n          v-model=\"msg.payload.hardware_camera\"\n          density=\"compact\"\n          variant=\"outlined\"\n          append-icon=\"mdi-information\"\n        ></v-text-field>\n      </div>\n    </section>\n    <section class=\"hardware-settings-section-two-container\">\n      <label>Tube Lens</label>\n      <v-text-field\n        v-model=\"msg.payload.hardware_tube_lens\"\n        density=\"compact\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('tubeLens')\"\n      ></v-text-field>\n    </section>\n    <section class=\"hardware-settings-section-two-container\">\n      <label>Objective Lens</label>\n      <v-text-field\n        v-model=\"msg.payload.hardware_objective_lens\"\n        density=\"compact\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('objectiveLens')\"\n      ></v-text-field>\n    </section>\n  </div>\n\n  <!-- Dialogs -->\n  <v-dialog v-model=\"dialogs.camera\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Camera Information</v-card-title>\n      <v-card-text>This is the camera information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('camera')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.tubeLens\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Tube Lens Information</v-card-title>\n      <v-card-text>This is the tube lens information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('tubeLens')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.objectiveLens\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Objective Lens Information</v-card-title>\n      <v-card-text>This is the objective lens information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('objectiveLens')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selected_hardware_camera: '',\n      selected_hardware_tube_lens: '',\n      selected_hardware_objective_lens: '',\n      hardware_camera: [],\n      hardware_tube_lens: [],\n      hardware_objective_lens: [],\n      dialogs: {\n        camera: false,\n        tubeLens: false,\n        objectiveLens: false,\n      },\n    };\n  },\n  mounted() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (msg.payload.hardware_camera) {\n          this.selected_hardware_camera = msg.payload.hardware_camera;\n        }\n        if (msg.payload.hardware_objective_lens) {\n          this.selected_hardware_objective_lens = msg.payload.hardware_objective_lens;\n        }\n        if (msg.payload.hardware_tube_lens) {\n          this.selected_hardware_tube_lens = msg.payload.hardware_tube_lens;\n        }\n      });\n    }\n  },\n  watch: {\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload.hardware_camera) {\n            this.hardware_camera = msg.payload.hardware_camera;\n          }\n          if (msg.payload.hardware_objective_lens) {\n            this.hardware_objective_lens = msg.payload.hardware_objective_lens;\n          }\n          if (msg.payload.hardware_tube_lens) {\n            this.hardware_tube_lens = msg.payload.hardware_tube_lens;\n          }\n        });\n      },\n      deep: true,\n      immediate: true,\n    }\n  },\n  methods: {\n    openDialog(dialogName) {\n      this.dialogs[dialogName] = true;\n    },\n    closeDialog(dialogName) {\n      this.dialogs[dialogName] = false;\n    },\n  }\n};\n</script>\n\n<style>\n.hardware-settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.hardware-settings-container h2 {\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-two-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-two-container label {\n  margin-right: 1rem;\n  min-width: 100px;\n}\n\n.hardware-settings-section-two-container .v-input {\n  max-width: 500px;\n}\n\n.hardware-settings-section-two-container .v-input__details {\n  display: none;\n}\n\n.hardware-settings-section-two-container .text-field-container {\n  display: inline-flex;\n  width: 500px;\n  cursor: pointer;\n}\n\n.hardware-settings-section-two-container .text-field-container .v-text-field {\n  pointer-events: none; /* Disable pointer events for the v-text-field */\n}\n\n.hardware-settings-section-two-container .v-input__append-inner {\n  cursor: pointer;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "74e49188881722bf",
        "type": "inject",
        "z": "b70df4b6cc88d09a",
        "g": "872edfac5cde1d2c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"hardware_camera\":\"Work in progress\",\"hardware_tube_lens\":\"Work in progress\",\"hardware_objective_lens\":\"Work in progress\"}",
        "payloadType": "json",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "4651884da3cb8f8e"
            ]
        ]
    },
    {
        "id": "f3feab8365d70286",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "g": "e878c471eeb2f3b4",
        "group": "a0214d355e87bc40",
        "page": "",
        "ui": "",
        "name": "hardware-settings-section-three",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"hardware-settings-container\">\n    <section>\n      <h2>Section three</h2>\n    </section>\n    <section class=\"hardware-settings-section-three-container\">\n      <label>Flowcell internal thickness</label>\n      <v-text-field\n        suffix=\"um\"\n        type=\"number\"\n        v-model=\"msg.payload.hardware_flowcell_internal_thickness\"\n        density=\"compact\"\n        variant=\"outlined\"\n        append-icon=\"mdi-information\"\n        @click:append=\"openDialog('flowcellInternalThickness')\"\n      ></v-text-field>\n    </section>\n  </div>\n\n  <!-- Dialog -->\n  <v-dialog v-model=\"dialogs.flowcellInternalThickness\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Flowcell Internal Thickness Information</v-card-title>\n      <v-card-text>This is the flowcell internal thickness information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('flowcellInternalThickness')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selected_hardware_flowcell_internal_thickness: '',\n      hardware_flowcell_internal_thickness: [],\n      dialogs: {\n        flowcellInternalThickness: false,\n      },\n    };\n  },\n  mounted() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (msg.payload.hardware_flowcell_internal_thickness) {\n          this.selected_hardware_flowcell_internal_thickness = msg.payload.hardware_flowcell_internal_thickness;\n        }\n      });\n    }\n  },\n  watch: {\n    '$socket': {\n      handler(newVal, oldVal) {\n        this.$socket.on('msg-input:' + this.id, (msg) => {\n          if (msg.payload.hardware_flowcell_internal_thickness) {\n            this.hardware_flowcell_internal_thickness = msg.payload.hardware_flowcell_internal_thickness;\n          }\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n  methods: {\n    openDialog(dialogName) {\n      this.dialogs[dialogName] = true;\n    },\n    closeDialog(dialogName) {\n      this.dialogs[dialogName] = false;\n    },\n  }\n};\n</script>\n\n<style>\n.hardware-settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.hardware-settings-container h2 {\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-three-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-three-container label {\n  margin-right: 1rem;\n  min-width: 100px;\n}\n\n.hardware-settings-section-three-container .v-input {\n  max-width: 170px;\n}\n\n.hardware-settings-section-three-container .v-input__details {\n  display: none;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "18082ce944ac9542",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "g": "90297191dbca9961",
        "group": "a0214d355e87bc40",
        "page": "",
        "ui": "",
        "name": "hardware-settings-section-four",
        "order": 4,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"hardware-settings-container\">\n    <section>\n      <h2>Section four</h2>\n    </section>\n    <section class=\"hardware-settings-section-four-container\">\n      <label>LED</label>\n      <div class=\"text-field-container\" @click=\"openDialog('hardware_led')\">\n        <v-text-field\n          v-model=\"msg.payload.hardware_led\"\n          density=\"compact\"\n          variant=\"outlined\"\n          append-icon=\"mdi-information\"\n        ></v-text-field>\n      </div>\n    </section>\n    <section class=\"hardware-settings-section-four-container\">\n      <label>Pump</label>\n      <div class=\"text-field-container\" @click=\"openDialog('hardware_pump')\">\n        <v-text-field\n          v-model=\"msg.payload.hardware_pump\"\n          density=\"compact\"\n          variant=\"outlined\"\n          append-icon=\"mdi-information\"\n        ></v-text-field>\n      </div>\n    </section>\n  </div>\n\n  <!-- Dialogs -->\n  <v-dialog v-model=\"dialogs.hardware_led\" max-width=\"500\">\n    <v-card>\n      <v-card-title>LED Information</v-card-title>\n      <v-card-text>This is the LED information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('hardware_led')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <v-dialog v-model=\"dialogs.hardware_pump\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Pump Information</v-card-title>\n      <v-card-text>This is the pump information dialog.</v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"closeDialog('hardware_pump')\">Close</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      dialogs: {\n        hardware_led: false,\n        hardware_pump: false,\n      },\n    };\n  },\n  methods: {\n    openDialog(dialogName) {\n      this.dialogs[dialogName] = true;\n    },\n    closeDialog(dialogName) {\n      this.dialogs[dialogName] = false;\n    },\n  },\n  mounted() {\n    if (this.$socket) {\n      this.$socket.on('msg-input:' + this.id, (msg) => {\n        if (msg.payload.hardware_led) {\n          this.msg.payload.hardware_led = msg.payload.hardware_led;\n        }\n        if (msg.payload.hardware_pump) {\n          this.msg.payload.hardware_pump = msg.payload.hardware_pump;\n        }\n      });\n    }\n  },\n};\n</script>\n\n<style>\n.hardware-settings-container {\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 1rem;\n}\n\n.hardware-settings-container h2 {\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-four-container {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.hardware-settings-section-four-container label {\n  margin-right: 1rem;\n  min-width: 100px;\n}\n\n.hardware-settings-section-four-container .v-input {\n  max-width: 500px;\n}\n\n.hardware-settings-section-four-container .v-input__details {\n  display: none;\n}\n\n.hardware-settings-section-four-container .text-field-container {\n  display: inline-flex;\n  width: 500px;\n  cursor: pointer;\n}\n\n.hardware-settings-section-four-container .text-field-container .v-text-field {\n  pointer-events: none; /* Disable pointer events for the v-text-field */\n}\n\n.hardware-settings-section-four-container .v-input__append-inner {\n  cursor: pointer;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "0d01236006fd6ee9",
        "type": "inject",
        "z": "b70df4b6cc88d09a",
        "g": "90297191dbca9961",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"hardware_led\":\"Work in progress\",\"hardware_pump\":\"Work in progress\"}",
        "payloadType": "json",
        "x": 580,
        "y": 840,
        "wires": [
            [
                "18082ce944ac9542"
            ]
        ]
    },
    {
        "id": "59a118377d0b7b47",
        "type": "inject",
        "z": "b70df4b6cc88d09a",
        "name": "Call pop-pup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"show\":true}",
        "payloadType": "json",
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "2256e9c9ee162c6a"
            ]
        ]
    },
    {
        "id": "2256e9c9ee162c6a",
        "type": "ui-template",
        "z": "b70df4b6cc88d09a",
        "group": "",
        "page": "1d404f13a8a402cc",
        "ui": "",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <div>\n        <div v-if=\"showAlert\" class=\"alert\">\n            <span class=\"closebtn\" @click=\"closeAlert\">&times;</span> \n            You just modified the data, redo the <a class=\"goTo\" @click=\"navigateToCalibration\"><strong>calibration</strong></a>.\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                showAlert: false,\n                alertVariable: null\n            }\n        },\n        watch: {\n            '$socket': {\n                handler(newVal, oldVal) {\n                    this.$socket.on('msg-input:' + this.id, (msg) => {\n                        if (msg.payload && msg.payload.show) {\n                            this.showAlert = true;\n                            // setTimeout(() => {\n                            //     this.showAlert = false;\n                            // }, 5000);\n                        }\n                    });\n                },\n                deep: true,\n                immediate: true\n            },\n        },\n        methods: {\n            closeAlert: function () {\n                this.showAlert = false;\n            },\n            navigateToCalibration: function () {\n                this.send({payload: {\"page\":\"Calibration\"}})\n            }\n        },\n    }\n</script>\n\n<style>\n    .alert {\n        padding: 20px;\n        background-color: orange;\n        color: white;\n        margin-bottom: 15px;\n        position: fixed;\n        top: 70px;\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 1000;\n        width: auto;\n        max-width: 80%;\n        text-align: center;\n        border-radius: 5px;\n    }\n\n    .closebtn {\n        margin-left: 15px;\n        color: white;\n        font-weight: bold;\n        float: right;\n        font-size: 22px;\n        line-height: 20px;\n        cursor: pointer;\n        transition: 0.3s;\n    }\n\n    .closebtn:hover {\n        color: black;\n    }\n\n    .goTo {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:page",
        "className": "",
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "350acdaf74ad1e92"
            ]
        ]
    },
    {
        "id": "350acdaf74ad1e92",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "name": "link out 78",
        "mode": "link",
        "links": [
            "3f473766a11c3784"
        ],
        "x": 455,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2b02520ad1df73ae",
        "type": "persistent value",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "",
        "valuesConfig": "176d84b611842be2",
        "valuesConfigName": "Hard-coded value",
        "valueId": "120f5c10-49a6-11ef-9331-19c39f8156d0",
        "value": "model_list",
        "command": "read",
        "msgProperty": "payload.model_list",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 430,
        "y": 400,
        "wires": [
            [
                "c5c51a15b8e79bf3"
            ],
            []
        ]
    },
    {
        "id": "b0f02965c34beb87",
        "type": "link in",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "link in 81",
        "links": [
            "05f3de085aa30475",
            "dbecc464b33d6070",
            "a780a0b1af9b2c79",
            "880ceeed52992801",
            "e347b601d0249115",
            "9c2590d80c6812bb"
        ],
        "x": 205,
        "y": 400,
        "wires": [
            [
                "2b02520ad1df73ae",
                "7d5d703c8feb5408",
                "7d7c8138a237f36d",
                "303805b28bef8dbe"
            ]
        ]
    },
    {
        "id": "303805b28bef8dbe",
        "type": "persistent value",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "payload.model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 440,
        "y": 360,
        "wires": [
            [
                "c5c51a15b8e79bf3"
            ],
            []
        ]
    },
    {
        "id": "0aead36053762ea4",
        "type": "persistent value",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "write",
        "msgProperty": "new_model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1100,
        "y": 360,
        "wires": [
            [
                "453c20a23e389c2c"
            ],
            []
        ]
    },
    {
        "id": "7d5d703c8feb5408",
        "type": "file in",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "Get CPU name",
        "filename": "/sys/firmware/devicetree/base/model",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "e9b7b351f0e36cb9"
            ]
        ]
    },
    {
        "id": "e9b7b351f0e36cb9",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "createHardwareCpuPayload",
        "func": "const hardware_cpu = msg.payload;\n\nmsg = {\n    payload: {\n        hardware_cpu: hardware_cpu\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 460,
        "wires": [
            [
                "c5c51a15b8e79bf3"
            ]
        ]
    },
    {
        "id": "7d7c8138a237f36d",
        "type": "http request",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "Get RAM",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/admin/prometheus/api/v1/query?query=node_memory_MemTotal_bytes%7B%7D",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "bef597cefab44dce"
            ]
        ]
    },
    {
        "id": "e8694a78adb3d88a",
        "type": "file in",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "Get CPU name",
        "filename": "payload.filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 920,
        "y": 540,
        "wires": [
            [
                "6ca3f7475a1bb35d"
            ]
        ]
    },
    {
        "id": "102834d0d6eb6a38",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "getFilenameForModel",
        "func": "var filename = \"/home/pi/device-backend/default-configs/\";\n\nif (msg.model_selected == \"PlanktoScope v2.1\") {\n    filename += \"v2.1.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.3\") {\n    filename += \"v2.3.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.5\") {\n    filename += \"v2.5.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.6\") {\n    filename += \"v2.6.hardware.json\"\n}\n\nmsg.payload = {\n    filename: filename\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 540,
        "wires": [
            [
                "e8694a78adb3d88a"
            ]
        ]
    },
    {
        "id": "d3a5f61d61a11b45",
        "type": "persistent value",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 440,
        "y": 540,
        "wires": [
            [
                "102834d0d6eb6a38"
            ],
            []
        ]
    },
    {
        "id": "6ca3f7475a1bb35d",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "extractStepperType (HAT)",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst hat = parsedData.stepper_type;\n\nif (hat == \"pscope_hat\") {\n    msg.payload = {\n        selected_hat: \"PlanktoScope Hat\"\n    };\n} else if (hat == \"adafruit\") {\n    msg.payload = {\n        selected_hat: \"Adafruit Hat\"\n    };\n} else {\n    msg.payload = {\n        selected_hat: hat\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "c5c51a15b8e79bf3"
            ]
        ]
    },
    {
        "id": "944fd4bbbb946194",
        "type": "file in",
        "z": "b70df4b6cc88d09a",
        "g": "e878c471eeb2f3b4",
        "name": "Get CPU name",
        "filename": "/home/pi/PlanktoScope/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 300,
        "y": 740,
        "wires": [
            [
                "3a156da7c106e28d"
            ]
        ]
    },
    {
        "id": "3a156da7c106e28d",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "e878c471eeb2f3b4",
        "name": "createHardwareCpuPayload",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst cellType = parsedData.acq_celltype;\n\nmsg.payload = {\n    hardware_flowcell_internal_thickness: cellType\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 740,
        "wires": [
            [
                "f3feab8365d70286"
            ]
        ]
    },
    {
        "id": "4c0ac6db11a8f2c3",
        "type": "link in",
        "z": "b70df4b6cc88d09a",
        "g": "e878c471eeb2f3b4",
        "name": "link in 86",
        "links": [
            "8fc7fbbfd63d3707",
            "442836e3b197e456",
            "f276c3d37dec61eb",
            "d8996acac981501a",
            "05f3de085aa30475",
            "a780a0b1af9b2c79",
            "880ceeed52992801",
            "e347b601d0249115",
            "9c2590d80c6812bb"
        ],
        "x": 185,
        "y": 740,
        "wires": [
            [
                "944fd4bbbb946194"
            ]
        ]
    },
    {
        "id": "5ee536271d7c7790",
        "type": "ui-event",
        "z": "b70df4b6cc88d09a",
        "ui": "1eeac55ba6b9065f",
        "name": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "05f3de085aa30475"
            ]
        ]
    },
    {
        "id": "bef597cefab44dce",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "Set payload.ram",
        "func": "const parsedData = JSON.parse(msg.payload);\n\n// Fonction pour convertir des octets en gigaoctets (GB)\nfunction bytesToGB(bytes) {\n    return bytes / 1e9; // 1 GB = 10^9 bytes\n}\n\n// Fonction pour convertir des octets en gibioctets (GiB)\nfunction bytesToGiB(bytes) {\n    return bytes / (1024 ** 3); // 1 GiB = 1024^3 bytes\n}\n\n// Extraire la valeur souhaitée\nconst value = parseInt(parsedData.data.result[0].value[1], 10);\n\n// Convertir en GB et GiB\nconst totalRAMGB = bytesToGB(value).toFixed(2); // Convertir et arrondir à 2 décimales\nconst totalRAMGiB = bytesToGiB(value).toFixed(2); // Convertir et arrondir à 2 décimales\n\n// Créer un nouveau payload avec la valeur arrondie\nmsg.payload = {\n    hardware_ram: totalRAMGB + \" GB\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 500,
        "wires": [
            [
                "c5c51a15b8e79bf3"
            ]
        ]
    },
    {
        "id": "f8e5f6cb539b3f29",
        "type": "link in",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "link in 91",
        "links": [
            "ebb7bbeca4de1d9c",
            "453c20a23e389c2c"
        ],
        "x": 245,
        "y": 540,
        "wires": [
            [
                "d3a5f61d61a11b45"
            ]
        ]
    },
    {
        "id": "453c20a23e389c2c",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "g": "a193634e73cb129b",
        "name": "link out 92",
        "mode": "link",
        "links": [
            "f8e5f6cb539b3f29"
        ],
        "x": 1305,
        "y": 360,
        "wires": []
    },
    {
        "id": "816b6e4b808a51b8",
        "type": "inject",
        "z": "b70df4b6cc88d09a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "9c2590d80c6812bb"
            ]
        ]
    },
    {
        "id": "9c2590d80c6812bb",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "name": "link out 101",
        "mode": "link",
        "links": [
            "49a5004745cdf3c3",
            "4c0ac6db11a8f2c3",
            "b0f02965c34beb87"
        ],
        "x": 505,
        "y": 100,
        "wires": []
    },
    {
        "id": "13fc468b0d772e60",
        "type": "switch",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1170,
        "y": 220,
        "wires": [
            [
                "1e8f3d0638de936c"
            ],
            [
                "2599555452533b5a"
            ]
        ]
    },
    {
        "id": "02992a4ffb79bff1",
        "type": "function",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 220,
        "wires": [
            [
                "13fc468b0d772e60"
            ]
        ]
    },
    {
        "id": "2599555452533b5a",
        "type": "switch",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 240,
        "wires": [
            [
                "0d78c0467054ebc9"
            ],
            [
                "c7beb866c037aefc"
            ]
        ]
    },
    {
        "id": "0d78c0467054ebc9",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "link out 125",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1435,
        "y": 220,
        "wires": []
    },
    {
        "id": "c7beb866c037aefc",
        "type": "link out",
        "z": "b70df4b6cc88d09a",
        "g": "da310b26268026a0",
        "name": "link out 126",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1435,
        "y": 260,
        "wires": []
    },
    {
        "id": "83b6394625e71c0f",
        "type": "inject",
        "z": "a697ff46c6e7b7fb",
        "name": "",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "a3a9370294d86cb2"
            ]
        ]
    },
    {
        "id": "a3a9370294d86cb2",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "name": "link out 81",
        "mode": "link",
        "links": [
            "7b83d675be7b73a9",
            "01ba7a39a6150e16"
        ],
        "x": 255,
        "y": 120,
        "wires": []
    },
    {
        "id": "668595394db47c54",
        "type": "ui-control",
        "z": "a697ff46c6e7b7fb",
        "name": "",
        "ui": "1eeac55ba6b9065f",
        "events": "all",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "71e6c09920f85552"
            ]
        ]
    },
    {
        "id": "9d2388378e60b099",
        "type": "link in",
        "z": "a697ff46c6e7b7fb",
        "name": "link in 78",
        "links": [
            "078a7c562c7ec691",
            "1a8330a03101a150",
            "cba7a0cba93534cc",
            "d015e87016b2d964"
        ],
        "x": 105,
        "y": 60,
        "wires": [
            [
                "668595394db47c54"
            ]
        ]
    },
    {
        "id": "49bf72922f5349fd",
        "type": "persistent value",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "DATA",
        "valueId": "3a134aa0-42a3-11ef-89ad-e57161842148",
        "value": "operator_name",
        "command": "read",
        "msgProperty": "operator_name",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "c2be1508adc96095"
            ],
            []
        ]
    },
    {
        "id": "c2be1508adc96095",
        "type": "ui-template",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "group": "88ffa2caedbdccbb",
        "page": "",
        "ui": "",
        "name": "top-header-monitoring",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"header-monitoring-container\">\n    <div class=\"header-monitoring-container-left\" @click=\"navigateToHome\">\n      <img\n        src=\"https://pbs.twimg.com/profile_images/1656689767675822084/qIsmUgtr_400x400.jpg\"\n        alt=\"PlanktoScope logo\"\n      />\n      <p>PlanktoScope GUI</p>\n    </div>\n\n    <div class=\"header-monitoring-container-right\">\n      <div class=\"header-monitoring-information-container\">\n        <p id=\"date\"></p>\n        <p>-</p>\n        <p id=\"time-first-visit\"></p>\n        <span\n          class=\"mdi mdi-account\"\n          :style=\"{ color: 'black' }\"\n          @click=\"menu = true\"\n        ></span>\n      </div>\n    </div>\n  </div>\n  <v-menu class=\"my-menu\" v-model=\"menu\">\n    <v-list>\n      <!-- Section 1: Profile -->\n      <v-list->\n        <v-list-item-content>\n          <v-list-item-title class=\"black--text\"><v-icon class=\"gap-icon-profil\" color=\"black\">mdi-account</v-icon>{{ msg.operator_name }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 2: Menu Items with Icons -->\n      <v-list-item\n        v-for=\"item in menuItemsSection2\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n\n      <!-- Divider -->\n      <v-divider></v-divider>\n\n      <!-- Section 3: Reboot and Shutdown -->\n      <v-list-item\n        v-for=\"item in menuItemsSection3\"\n        :key=\"item.title\"\n        @click=\"menuItemClicked(item)\"\n      >\n        <v-list-item-content>\n          <v-list-item-title><v-icon class=\"gap-icon\" color=\"#076eac\">{{ item.icon }}</v-icon>{{ item.title }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list>\n  </v-menu>\n</template>\n\n<script>\nexport default {\n  name: \"RealTimeInfo\",\n  data() {\n    return {\n      menu: false,\n      menuItemsSection2: [\n        { title: 'Home', icon: 'mdi-home' },\n        { title: 'Settings', icon: 'mdi-cog' },\n        { title: 'Manage your data', icon: 'mdi-image' },\n        { title: 'Calibration', icon: 'mdi-bullseye' },\n        { title: 'Hardware', icon: 'mdi-cog-box' },\n        { title: 'Documentation', icon: 'mdi-text-box-search-outline' },\n        { title: 'Monitoring', icon: 'mdi-chart-line' }\n      ],\n      menuItemsSection3: [\n        { title: 'Reboot', icon: 'mdi-restart' },\n        { title: 'Shutdown', icon: 'mdi-power' }\n      ]\n    };\n  },\n  mounted() {\n    this.updateDateTime();\n    setInterval(this.updateDateTime, 1000);\n  },\n  methods: {\n    updateDateTime() {\n      const now = new Date();\n\n      const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n\n      const timeFormatter = new Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n        timeZone: \"UTC\",\n      });\n\n      const date = dateFormatter.format(now);\n      const time = timeFormatter.format(now) + \" (UTC)\";\n\n      document.getElementById(\"date\").innerText = date;\n      document.getElementById(\"time-first-visit\").innerText = time;\n    },\n    menuItemClicked(item) {\n        const currentUrl = new URL(window.location.href);\n        const baseUrlWithoutPort = currentUrl.protocol + '//' + currentUrl.hostname;\n\n        if (item.title == \"Gallery\") {\n            const relativePath = '/ps/data/browse/files/';\n            const fullUrl = new URL(relativePath, baseUrlWithoutPort);\n\n            open(fullUrl.href, '_blank');\n        } else if (item.title == \"Documentation\") {\n            open(\"https://docs-edge.planktoscope.community\", '_blank');\n        } else if (item.title == \"Reboot\" || item.title == \"Shutdown\") {\n            if (confirm(\"Are you sure you want to do this action ?\")) {\n                this.send({ payload: item.title });\n            }\n        } else {\n            this.send({payload: item.title});\n        }\n    },\n    navigateToHome() {\n      this.send(\"Home\");\n    }\n  },\n};\n</script>\n\n<style>\n  .my-menu {\n    display: flex;\n    align-items: flex-tart;\n    justify-content: flex-end;\n  }\n\n  .gap-icon {\n    margin-right: 1rem;\n  }\n\n  .gap-icon-profil {\n    font-size: 35px;\n    height: 3rem;\n    width: 3rem;\n  }\n\n  .header-monitoring-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    border-bottom: 1px solid black;\n    display: flex;\n  }\n\n  .header-monitoring-container-left {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 1rem;\n    cursor: pointer;\n  }\n\n  .header-monitoring-container-left img {\n    height: 2vw;\n    width: 2vw;\n    margin-right: 0.6rem;\n  }\n\n  .header-monitoring-container-left p {\n    font-size: 1vw;\n    color: black;\n    font-weight: 600;\n  }\n\n  .header-monitoring-container-right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .header-monitoring-information-container {\n    display: flex;\n    align-items: center;\n    margin-right: 1rem;\n  }\n\n  .header-monitoring-information-container p {\n    margin: 0 5px;\n    font-size: 0.8vw;\n    color: black;\n  }\n\n  .header-monitoring-information-container span {\n    color: black;\n    font-size: 35px;\n    cursor: pointer;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 240,
        "wires": [
            [
                "e7a72f71ca32a7be"
            ]
        ]
    },
    {
        "id": "078a7c562c7ec691",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "link out 82",
        "mode": "link",
        "links": [
            "9d2388378e60b099"
        ],
        "x": 1105,
        "y": 220,
        "wires": []
    },
    {
        "id": "7b83d675be7b73a9",
        "type": "link in",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "link in 79",
        "links": [
            "a3a9370294d86cb2"
        ],
        "x": 145,
        "y": 240,
        "wires": [
            [
                "49bf72922f5349fd"
            ]
        ]
    },
    {
        "id": "7e44e412732eb023",
        "type": "ui-template",
        "z": "a697ff46c6e7b7fb",
        "g": "cec7b5c348ba4e10",
        "group": "d80f187d2b6ea2f1",
        "page": "",
        "ui": "",
        "name": "left-pannel",
        "order": 1,
        "width": "3",
        "height": "7",
        "head": "",
        "format": "<template>\n  <div class=\"left-panel-container\">\n    <iframe src=\"http://92.167.184.163/admin/grafana/d-solo/host-summary/host-summary?orgId=1&refresh=5s&kiosk=&from=1722345929943&to=1722346229943&theme=dark&panelId=266\" width=\"450\" height=\"200\" frameborder=\"0\"></iframe>\n    <iframe src=\"http://92.167.184.163/admin/grafana/d-solo/host-summary/host-summary?orgId=1&refresh=5s&kiosk=&from=1722345959872&to=1722346259872&theme=dark&panelId=16\" width=\"450\" height=\"200\" frameborder=\"0\"></iframe>\n    <iframe src=\"http://92.167.184.163/admin/grafana/d-solo/host-summary/host-summary?orgId=1&refresh=5s&kiosk=&from=1722345972787&to=1722346272787&theme=dark&panelId=154\" width=\"450\" height=\"200\" frameborder=\"0\"></iframe>\n    <v-btn color=\"#076eac\" dark @click=\"moreDetails\">More details</v-btn>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    moreDetails() {\n      // URL relative à ouvrir\n      const relativeUrl = '/admin/grafana/d/host-summary/host-summary?orgId=1&refresh=5s&kiosk';\n      \n      // Fonction pour enlever le port d'une URL\n      function removePortFromUrl(url) {\n        return url.replace(/:\\d+/, ''); // Enlève les ports (comme :8080)\n      }\n      \n      // Récupérer dynamiquement la base URL\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}`;\n      \n      // Construire l'URL complète\n      const fullUrl = `${removePortFromUrl(baseUrl)}${relativeUrl}`;\n      \n      // Ouvrir la nouvelle fenêtre\n      window.open(fullUrl, '_blank');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.left-panel-container {\n  background-color: rgb(24, 27, 31);\n  border-radius: 4px;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column; \n  align-items: center;\n  justify-content: center;\n}\n\niframe {\n  margin-bottom: 1rem;\n  width: 75%;\n}\n\niframe .grafana-app {\n  background-color: transparent !important;\n  border: none !important;\n}\n\nv-btn {\n  margin-top: 1rem;\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 510,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f8fd4c2266066516",
        "type": "ui-template",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "group": "d80f187d2b6ea2f1",
        "page": "",
        "ui": "",
        "name": "right-pannel",
        "order": 2,
        "width": "9",
        "height": "1",
        "head": "",
        "format": "<template>\n  <div class=\"right-pannel-container\">\n    <div class=\"right-pannel-text\">\n      <h3>Important Notice: Restarting Processes</h3>\n      <p>\n        Please be aware that managing the following processes: Pump, Focus, Light, Camera, Segmenter, may cause temporary\n        disruptions in system operations and data processing.\n      </p>\n    </div>\n\n    <div class=\"right-pannel-process\">\n      <section id=\"segmenter-process\" class=\"process-section\" @click=\"toggleCheckbox('segmenter')\">\n        <div class=\"process-header\">\n          <v-checkbox label=\"Segmenter\" v-model=\"selectedProcesses.segmenter\" @click.stop></v-checkbox>\n        </div>\n        <div class=\"process-details\">\n          <p><span id=\"bold\">Runtime: </span><span id=\"light\">12 hours, 34 minutes</span></p>\n          <p><span id=\"bold\"> Restart Time: </span><span id=\"light\">2024-07-05 14:30:00</span></p>\n          <p><span id=\"bold\">Status: </span><span id=\"light\">{{ msg.payload.segmenterStatus }}</span></p>\n        </div>\n      </section>\n      <section id=\"hardware-process\" class=\"process-section\" @click=\"toggleCheckbox('hardware')\">\n        <div class=\"process-header\">\n          <v-checkbox label=\"Hardware\" v-model=\"selectedProcesses.hardware\" @click.stop></v-checkbox>\n        </div>\n        <div class=\"process-details\">\n          <p><span id=\"bold\">Runtime:</span><span id=\"light\"> 12 hours, 34 minutes</span></p>\n          <p><span id=\"bold\">Last Restart Time:</span><span id=\"light\"> 2024-07-05 14:30:00</span></p>\n          <p><span id=\"bold\">Status: </span><span id=\"light\">{{ msg.payload.hardwareStatus }}</span></p>\n        </div>\n      </section>\n    </div>\n\n    <div class=\"button-div\">\n      <v-btn color=\"red\" dark @click=\"run\">Run</v-btn>\n      <v-btn color=\"red\" dark @click=\"kill\">Kill</v-btn>\n      <v-btn color=\"red\" dark @click=\"restart\">Restart</v-btn>\n    </div>\n  </div>\n  <div class=\"right-pannel-container\">\n    <div class=\"right-pannel-text\">\n      <h3>Important Notice: Accessing Backend Logs</h3>\n      <p>Please be aware that accessing backend logs requires proper understanding.</p>\n    </div>\n    <div class=\"button-div\">\n      <v-btn color=\"#076eac\" dark @click=\"controllersLogs\">Controllers Logs</v-btn>\n      <v-btn color=\"#076eac\" dark @click=\"processLogs\">Process Logs</v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedProcesses: {\n        segmenter: false,\n        hardware: false\n      },\n    };\n  },\n  methods: {\n    run() {\n      this.send({payload: {\n        process: this.selectedProcesses,\n        action: 'run'\n      }})\n    },\n    kill() {\n      this.send({payload: {\n        process: this.selectedProcesses,\n        action: 'kill'\n      }})\n    },\n    restart() {\n      this.send({payload: {\n        process: this.selectedProcesses,\n        action: 'restart'\n      }})\n    },\n    controllersLogs() {\n      this.send({payload: \"Controllers Logs button clicked\"});\n    },\n    processLogs() {\n      this.send({payload: \"Process Logs button clicked\"});\n    },\n    toggleCheckbox(process) {\n      this.selectedProcesses[process] = !this.selectedProcesses[process];\n    },\n  },\n};\n</script>\n\n<style scoped>\n  .right-pannel-container {\n    background-color: rgba(0, 0, 0, 0.87);\n    border-radius: 4px;\n    padding: 1rem;\n    margin-bottom: 1rem;\n    color: white;\n  }\n\n  .right-pannel-text {\n    margin-bottom: 1rem;\n  }\n\n  .right-pannel-process {\n    display: flex;\n    align-items: center;\n  }\n\n  .process-section {\n    background-color: #161616;\n    padding: 0rem 1rem;\n    padding-bottom: 0.7rem;\n    border-radius: 4px;\n    margin-bottom: 1rem;\n    margin-right: 1rem;\n    width: 300px;\n    color: #ffffff;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n\n  .process-section:hover {\n    box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);\n  }\n\n  .process-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: bold;\n  }\n\n  .process-details span#bold {\n    font-weight: bold;\n  }\n\n  .process-details span#light {\n    font-weight: light;\n  }\n\n  .status {\n    line-height: 0px;\n    font-size: 2.5rem;\n  }\n\n  .status.ko {\n    color: red;\n  }\n\n  .status.working {\n    color: green;\n  }\n\n  .button-div {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n  }\n\n  .button-div .v-btn {\n    margin: 0.25rem;\n  }\n\n  .v-selection-control__wrapper {\n    margin-right: 10px;\n  }\n  \n  .v-label {\n    opacity: unset;\n  }\n\n  .v-selection-control--density-default {\n    --v-selection-control-size: 20px\n  }\n\n  .v-input__details {\n    display: none;\n  }\n</style>\n",
        "storeOutMessages": true,
        "passthru": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 510,
        "y": 520,
        "wires": [
            [
                "ee91ce21184552fa",
                "31e5b0e4d97debdb"
            ]
        ]
    },
    {
        "id": "0395251fd0d40dfe",
        "type": "inject",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"segmenterStatus\":\"Working\",\"hardwareStatus\":\"KO\"}",
        "payloadType": "json",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "f8fd4c2266066516"
            ]
        ]
    },
    {
        "id": "04b077947f323ffb",
        "type": "persistent value",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "valuesConfig": "3da386409fa03189",
        "valuesConfigName": "Setting metadata",
        "valueId": "bad09130-49af-11ef-9331-19c39f8156d0",
        "value": "model_selected",
        "command": "read",
        "msgProperty": "model_selected",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "true",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 900,
        "y": 520,
        "wires": [
            [
                "4bd4ed61fe231982"
            ],
            []
        ]
    },
    {
        "id": "4bd4ed61fe231982",
        "type": "function",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "function 9",
        "func": "var filename = \"/home/pi/device-backend/default-configs/\";\n\nif (msg.model_selected == \"PlanktoScope v2.1\") {\n    filename += \"v2.1.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.3\") {\n    filename += \"v2.3.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.5\") {\n    filename += \"v2.5.hardware.json\"\n} else if (msg.model_selected == \"PlanktoScope v2.6\") {\n    filename += \"v2.6.hardware.json\"\n}\n\nmsg.payload = {\n    filename: filename\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 520,
        "wires": [
            [
                "07b89d6d2f243410"
            ]
        ]
    },
    {
        "id": "07b89d6d2f243410",
        "type": "file in",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "Get CPU name",
        "filename": "payload.filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1300,
        "y": 520,
        "wires": [
            [
                "ac21946563059ca9"
            ]
        ]
    },
    {
        "id": "ac21946563059ca9",
        "type": "function",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "function 10",
        "func": "const parsedData = JSON.parse(msg.payload);\nconst hat = parsedData.stepper_type;\n\nmsg.payload = {\n    selected_hat: hat\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "ab09fc7b9f3e8189"
            ]
        ]
    },
    {
        "id": "71e6c09920f85552",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "name": "link out 85",
        "mode": "link",
        "links": [
            "4e702497cc2722ce"
        ],
        "x": 295,
        "y": 60,
        "wires": []
    },
    {
        "id": "ab09fc7b9f3e8189",
        "type": "switch",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "property": "payload.selected_hat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "adafruithat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pscope_hat",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "7ba43cf89d3a06cd"
            ],
            [
                "b96b929fdeaef889"
            ]
        ]
    },
    {
        "id": "ee91ce21184552fa",
        "type": "switch",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Controllers Logs button clicked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Process Logs button clicked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 520,
        "wires": [
            [
                "04b077947f323ffb"
            ],
            [
                "7fd6408cf7e06683"
            ]
        ]
    },
    {
        "id": "1a8330a03101a150",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "link out 86",
        "mode": "link",
        "links": [
            "9d2388378e60b099"
        ],
        "x": 1615,
        "y": 580,
        "wires": []
    },
    {
        "id": "cba7a0cba93534cc",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "9d2388378e60b099"
        ],
        "x": 1615,
        "y": 620,
        "wires": []
    },
    {
        "id": "7fd6408cf7e06683",
        "type": "change",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"url\":\"/admin/dozzle/show?name=apps_ps_backend_proc-segmenter-server-1\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "d015e87016b2d964"
            ]
        ]
    },
    {
        "id": "d015e87016b2d964",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "link out 88",
        "mode": "link",
        "links": [
            "9d2388378e60b099"
        ],
        "x": 935,
        "y": 560,
        "wires": []
    },
    {
        "id": "7ba43cf89d3a06cd",
        "type": "change",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"url\":\"/admin/cockpit/system/logs#/?prio=debug&service=planktoscope-org.device-backend.controller-adafruithat.service\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 580,
        "wires": [
            [
                "1a8330a03101a150"
            ]
        ]
    },
    {
        "id": "b96b929fdeaef889",
        "type": "change",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"url\":\"/admin/cockpit/system/logs#/?prio=debug&service=planktoscope-org.device-backend.controller-planktoscopehat.service\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 620,
        "wires": [
            [
                "cba7a0cba93534cc"
            ]
        ]
    },
    {
        "id": "31e5b0e4d97debdb",
        "type": "debug",
        "z": "a697ff46c6e7b7fb",
        "g": "6dabc68acbd23974",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 600,
        "wires": []
    },
    {
        "id": "4207f0b5f0838c18",
        "type": "switch",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "",
        "property": "payload.page",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "078a7c562c7ec691"
            ],
            [
                "7992408ecc427d92"
            ]
        ]
    },
    {
        "id": "e7a72f71ca32a7be",
        "type": "function",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "Prepare payload to navigate",
        "func": "var title = msg.payload;\n\nif (title == \"Home\") {\n    msg.payload = {\"page\":\"Home\"}\n} else if (title == \"Settings\") {\n    msg.payload = {\"page\":\"Settings\"}\n} else if (title == \"Calibration\") {\n    msg.payload = {\"page\":\"Calibration\"}\n} else if (title == \"Hardware\") {\n    msg.payload = {\"page\":\"Hardware\"}\n} else if (title == \"Monitoring\") {\n    msg.payload = {\"page\":\"Monitoring\"}\n} else if (title == \"Reboot\") {\n    msg.payload = \"Reboot\"\n} else if (title == \"Shutdown\") {\n    msg.payload = \"Restart\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "4207f0b5f0838c18"
            ]
        ]
    },
    {
        "id": "7992408ecc427d92",
        "type": "switch",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Reboot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "67fcf51f541bd536"
            ],
            [
                "757e7132e148e450"
            ]
        ]
    },
    {
        "id": "67fcf51f541bd536",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "link out 127",
        "mode": "link",
        "links": [
            "960c1b4e1358e139"
        ],
        "x": 1235,
        "y": 240,
        "wires": []
    },
    {
        "id": "757e7132e148e450",
        "type": "link out",
        "z": "a697ff46c6e7b7fb",
        "g": "7cb61834f7876229",
        "name": "link out 128",
        "mode": "link",
        "links": [
            "6810166ee9e618d8"
        ],
        "x": 1235,
        "y": 280,
        "wires": []
    },
    {
        "id": "bbc0bc87e0f09f5b",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "GET '/'",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "0854e44cb2b0fbe9"
            ]
        ]
    },
    {
        "id": "18255927be48f937",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "bbc0bc87e0f09f5b"
            ]
        ]
    },
    {
        "id": "0854e44cb2b0fbe9",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "206c71a30bd99da7",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/visualization/load_df'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/visualization/load_df",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 520,
        "wires": [
            [
                "9774e2ca3ead05bb"
            ]
        ]
    },
    {
        "id": "fe34907b0cae07f4",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "cefb98de09fd2a3a"
            ]
        ]
    },
    {
        "id": "9774e2ca3ead05bb",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 520,
        "wires": []
    },
    {
        "id": "cefb98de09fd2a3a",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"path\" : \"C:/Users/luffy/.node-red/data/dir1/1.tsv\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "206c71a30bd99da7"
            ]
        ]
    },
    {
        "id": "86924f9c1bc721a9",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/visualization/load_df'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/visualization/dash_page",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "43140dad3ee98908"
            ]
        ]
    },
    {
        "id": "884d9885f48e414a",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "cb02c42521f2c0ba"
            ]
        ]
    },
    {
        "id": "43140dad3ee98908",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 620,
        "wires": []
    },
    {
        "id": "cb02c42521f2c0ba",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"data\" : \"C:/Users/luffy/.node-red/data/dir1/1.tsv\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 620,
        "wires": [
            [
                "86924f9c1bc721a9"
            ]
        ]
    },
    {
        "id": "4de50fb2a7309376",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"number\" : 6}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "5bf639c387966fde"
            ]
        ]
    },
    {
        "id": "5bf639c387966fde",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/add'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/add",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "dd141acc69d5a530"
            ]
        ]
    },
    {
        "id": "3965d2d17eb2212e",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "4de50fb2a7309376"
            ]
        ]
    },
    {
        "id": "dd141acc69d5a530",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 300,
        "wires": []
    },
    {
        "id": "a8c96d509923981f",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/visualization/load_df'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/visualization/dash_page",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "2d2e22263a73ad77"
            ]
        ]
    },
    {
        "id": "bc87087cc84868d1",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "4b5b56b73232d834"
            ]
        ]
    },
    {
        "id": "2d2e22263a73ad77",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 460,
        "wires": []
    },
    {
        "id": "4b5b56b73232d834",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"data\" : \"C:/Users/luffy/.node-red/data/dir1/1.tsv\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "a8c96d509923981f"
            ]
        ]
    },
    {
        "id": "4ab12b75f7a87936",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "GET '/data'",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/data",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "1062c2ab9dbc38e5"
            ]
        ]
    },
    {
        "id": "7a5f8dfe0e7d5625",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "4ab12b75f7a87936"
            ]
        ]
    },
    {
        "id": "1062c2ab9dbc38e5",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "d72a76c7a1767e70",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/empty'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/empty",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "0e3c76fe2f48be32"
            ]
        ]
    },
    {
        "id": "904d87c97d6f8cd7",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "ac8854572179184d"
            ]
        ]
    },
    {
        "id": "0e3c76fe2f48be32",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac8854572179184d",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"data\" : \"C:/Users/luffy/.node-red/data/dir1/1.tsv\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "d72a76c7a1767e70"
            ]
        ]
    },
    {
        "id": "e00d17246d85861e",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "f4050d75e5e66bf0"
            ]
        ]
    },
    {
        "id": "f4050d75e5e66bf0",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"create scatter plot\",\"args\":[\"object_x\",\"object_y\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 760,
        "wires": [
            [
                "b479ee2fce53de87"
            ]
        ]
    },
    {
        "id": "b479ee2fce53de87",
        "type": "mqtt out",
        "z": "e5dc348791e54690",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "6cd38e8c5ce95306",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "f71ca6b8aa7eeab9"
            ]
        ]
    },
    {
        "id": "f71ca6b8aa7eeab9",
        "type": "change",
        "z": "e5dc348791e54690",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"load dataframe\",\"args\":[\"C:\\\\Users\\\\luffy\\\\.node-red\\\\data\\\\BTS2023_S2\\\\ecotaxa_export.tsv\"]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "5c1c4bbc351cdfcd"
            ]
        ]
    },
    {
        "id": "5c1c4bbc351cdfcd",
        "type": "mqtt out",
        "z": "e5dc348791e54690",
        "name": "",
        "topic": "visualization/commands",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a973d821cae4ecce",
        "x": 590,
        "y": 700,
        "wires": []
    },
    {
        "id": "9de03f38e2fd9c77",
        "type": "http request",
        "z": "e5dc348791e54690",
        "name": "POST '/add'",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/create_dash_app/1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e438016a556f71a4",
        "type": "inject",
        "z": "e5dc348791e54690",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "9de03f38e2fd9c77"
            ]
        ]
    },
    {
        "id": "41ab5a124355a9d6",
        "type": "mqtt in",
        "z": "e5dc348791e54690",
        "name": "",
        "topic": "visualization/chartPage",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a973d821cae4ecce",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 860,
        "wires": [
            [
                "de7c34487160c9b0"
            ]
        ]
    },
    {
        "id": "de7c34487160c9b0",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 860,
        "wires": []
    },
    {
        "id": "f31a598d.9fd2c8",
        "type": "function",
        "z": "e5dc348791e54690",
        "name": "Set base path",
        "func": "//restrict to c:\\temp\\\nvar basePath = \"c:\\\\temp\\\\\";\nvar filename = msg.req.params.fn;\n\n\nif(filename.includes(\"..\\\\\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if(filename.includes(\"../\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} \n//TODO: add more checks\n\nmsg.filename = basePath + filename;\nreturn [msg, null];//fire output 1\n\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1060,
        "wires": [
            [
                "34dc99e5.495466"
            ],
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "98261154.3006",
        "type": "http response",
        "z": "e5dc348791e54690",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 1100,
        "wires": []
    },
    {
        "id": "34dc99e5.495466",
        "type": "file in",
        "z": "e5dc348791e54690",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 1040,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "38d65d59.1d8aa2",
        "type": "catch",
        "z": "e5dc348791e54690",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 180,
        "y": 1140,
        "wires": [
            [
                "3b8014a.86ad8ec",
                "5b18a8e7.fb8da8"
            ]
        ]
    },
    {
        "id": "3b8014a.86ad8ec",
        "type": "function",
        "z": "e5dc348791e54690",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1140,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "5b18a8e7.fb8da8",
        "type": "debug",
        "z": "e5dc348791e54690",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 190,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5de7cbb4.fa21a4",
        "type": "comment",
        "z": "e5dc348791e54690",
        "name": "Create http endpoint <nodered>/files/xxx  where xxx is the file name to download",
        "info": "",
        "x": 400,
        "y": 1000,
        "wires": []
    },
    {
        "id": "67ecfa7f.3f0e24",
        "type": "http in",
        "z": "e5dc348791e54690",
        "name": "",
        "url": "/files/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1060,
        "wires": [
            [
                "f31a598d.9fd2c8"
            ]
        ]
    },
    {
        "id": "8c8ca30fb254dd30",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "f2795c20-4991-11ef-9554-a70fc822169d",
        "value": "map",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 640,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b0bc94ac79aa3a19",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "8c8ca30fb254dd30"
            ]
        ]
    },
    {
        "id": "cd40f94b90bb753c",
        "type": "link in",
        "z": "819880c202d2361a",
        "name": "Map_data",
        "links": [
            "7786016a46447829"
        ],
        "x": 205,
        "y": 380,
        "wires": [
            [
                "b0bc94ac79aa3a19"
            ]
        ]
    },
    {
        "id": "f956f2fc9eea0915",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "76bbfc11bc36d04f"
            ]
        ]
    },
    {
        "id": "76bbfc11bc36d04f",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "f2795c20-4991-11ef-9554-a70fc822169d",
        "value": "map",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 640,
        "y": 440,
        "wires": [
            [
                "59ce6997be56f12a"
            ],
            []
        ]
    },
    {
        "id": "8185c9da69152b2e",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 84",
        "mode": "link",
        "links": [
            "89615d017cc8a981"
        ],
        "x": 1105,
        "y": 440,
        "wires": []
    },
    {
        "id": "59ce6997be56f12a",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datas",
                "pt": "msg",
                "to": "[payload]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 440,
        "wires": [
            [
                "8185c9da69152b2e",
                "038e1c7598c4bf86"
            ]
        ]
    },
    {
        "id": "038e1c7598c4bf86",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "3eb98dae75c1b643",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "5ebecef446ebeaef",
                "369c0216a3a1971c",
                "b84c429ada986a99",
                "6d02b95d356f152c",
                "627d69cf15ac5802",
                "9eeb4391fcd96b4a"
            ]
        ]
    },
    {
        "id": "5ebecef446ebeaef",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "f2795c20-4991-11ef-9554-a70fc822169d",
        "value": "map",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 620,
        "y": 20,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ffc60f36a0757a7e",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "a9ee5ba0-4995-11ef-9554-a70fc822169d",
        "value": "datatable",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 660,
        "y": 720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ee9ccf90e1c6a283",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 720,
        "wires": [
            [
                "ffc60f36a0757a7e"
            ]
        ]
    },
    {
        "id": "959eae8c211e5426",
        "type": "link in",
        "z": "819880c202d2361a",
        "name": "DataTable_data",
        "links": [
            "1b3f2f52d79a978f"
        ],
        "x": 205,
        "y": 720,
        "wires": [
            [
                "ee9ccf90e1c6a283"
            ]
        ]
    },
    {
        "id": "8740362da1f8b258",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 780,
        "wires": [
            [
                "0655a92cf3fcd5ed"
            ]
        ]
    },
    {
        "id": "0655a92cf3fcd5ed",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "a9ee5ba0-4995-11ef-9554-a70fc822169d",
        "value": "datatable",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 660,
        "y": 780,
        "wires": [
            [
                "f31227fc3a4d2394"
            ],
            []
        ]
    },
    {
        "id": "fcb87e389542e76b",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 85",
        "mode": "link",
        "links": [
            "7e538b792d597d2e"
        ],
        "x": 1105,
        "y": 780,
        "wires": []
    },
    {
        "id": "f31227fc3a4d2394",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datas",
                "pt": "msg",
                "to": "[payload]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 780,
        "wires": [
            [
                "fcb87e389542e76b",
                "f37c3501eb06835d"
            ]
        ]
    },
    {
        "id": "f37c3501eb06835d",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 740,
        "wires": []
    },
    {
        "id": "369c0216a3a1971c",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "a9ee5ba0-4995-11ef-9554-a70fc822169d",
        "value": "datatable",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 640,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d500801594206f28",
        "type": "link in",
        "z": "819880c202d2361a",
        "name": "ChartSection_data",
        "links": [
            "85270dcda34b8cc8"
        ],
        "x": 205,
        "y": 1080,
        "wires": [
            [
                "f222028ac3f6f4ac"
            ]
        ]
    },
    {
        "id": "b84c429ada986a99",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 670,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f222028ac3f6f4ac",
        "type": "switch",
        "z": "819880c202d2361a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "payload.command=\"add iframe\"",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "payload.command=\"remove iframe\"",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "payload.command=\"add metadata\"",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 1080,
        "wires": [
            [
                "bfc2e78044186814"
            ],
            [
                "58e8007c78b0bfab"
            ],
            [
                "7df0ccccf7fc4cf0"
            ]
        ]
    },
    {
        "id": "6e8cebbc4f58111b",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "read",
        "msgProperty": "data",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "aaeb1af22ba7c6cf"
            ],
            []
        ]
    },
    {
        "id": "41f01d48f714d4e7",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "read",
        "msgProperty": "data",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "1bb4d85eda81ad6b"
            ],
            []
        ]
    },
    {
        "id": "aaeb1af22ba7c6cf",
        "type": "function",
        "z": "819880c202d2361a",
        "name": "add iframe",
        "func": "// Retrieve the JSON object from msg.data\nlet jsonData = msg.data;\n\n// Check if jsonData is indeed an array\nif (Array.isArray(jsonData)) {\n    // Retrieve the string from msg.payload\n    let newString = msg.payload;\n    \n    // Add the new string to the jsonData array\n    jsonData.push(newString);\n    \n    // Update msg.data with the modified JSON object\n    msg.data = jsonData;\n} else {\n    // If jsonData is not an array, log an error\n    node.error(\"msg.data is not an array\");\n}\n\n// Return the updated msg\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1020,
        "wires": [
            [
                "f332effdeabfbc7a",
                "54706e776e028fdc"
            ]
        ]
    },
    {
        "id": "f332effdeabfbc7a",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "write",
        "msgProperty": "data",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1470,
        "y": 1020,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1bb4d85eda81ad6b",
        "type": "function",
        "z": "819880c202d2361a",
        "name": "remove iframe",
        "func": "// Retrieve the JSON object from msg.data\nlet jsonData = msg.data;\n\n// Check if jsonData is indeed an array\nif (Array.isArray(jsonData)) {\n    // Retrieve the string from msg.payload\n    let stringToRemove = msg.payload;\n    \n    // Find the index of the string in the array\n    let index = jsonData.indexOf(stringToRemove);\n    \n    // If the string is found in the array, remove it\n    if (index !== -1) {\n        jsonData.splice(index, 1);\n    } else {\n        // If the string is not found, log a warning\n        node.warn(\"Couldn't remove the chart\");\n    }\n    \n    // Update msg.data with the modified JSON object\n    msg.data = jsonData;\n} else {\n    // If jsonData is not an array, log an error\n    node.error(\"msg.data is not an array\");\n}\n\n// Return the updated msg\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1120,
        "wires": [
            [
                "39ec7525e3a3e3ee",
                "8154cef8fc727e6e"
            ]
        ]
    },
    {
        "id": "39ec7525e3a3e3ee",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "write",
        "msgProperty": "data",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 1470,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bfc2e78044186814",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "6e8cebbc4f58111b"
            ]
        ]
    },
    {
        "id": "58e8007c78b0bfab",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1120,
        "wires": [
            [
                "41f01d48f714d4e7"
            ]
        ]
    },
    {
        "id": "54706e776e028fdc",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 980,
        "wires": []
    },
    {
        "id": "8154cef8fc727e6e",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e1e6b375097337b2",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 540,
        "y": 1200,
        "wires": [
            [
                "180eb1a7b9c5fb48"
            ]
        ]
    },
    {
        "id": "180eb1a7b9c5fb48",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "b2a02b80-4999-11ef-9554-a70fc822169d",
        "value": "chartsection_charts",
        "command": "read",
        "msgProperty": "datas",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 830,
        "y": 1200,
        "wires": [
            [
                "5567e81e4ec9703a"
            ],
            []
        ]
    },
    {
        "id": "5567e81e4ec9703a",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 86",
        "mode": "link",
        "links": [
            "fe2841e73b262323"
        ],
        "x": 1085,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7df0ccccf7fc4cf0",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.metadata",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "475a735bfad6459e",
                "da725deb9e69fc0b"
            ]
        ]
    },
    {
        "id": "475a735bfad6459e",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "98b8b560-4a6c-11ef-aec9-29e63ad077bb",
        "value": "chartsection_metadata",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 860,
        "y": 1320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8d27b66f58bf23f0",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 500,
        "y": 1380,
        "wires": [
            [
                "7d3eb9864d068ad6"
            ]
        ]
    },
    {
        "id": "7d3eb9864d068ad6",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "98b8b560-4a6c-11ef-aec9-29e63ad077bb",
        "value": "chartsection_metadata",
        "command": "read",
        "msgProperty": "metadatas",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 800,
        "y": 1380,
        "wires": [
            [
                "604de0ff710ad0b3"
            ],
            []
        ]
    },
    {
        "id": "604de0ff710ad0b3",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1380,
        "wires": [
            [
                "986bcf8e0120a93f"
            ]
        ]
    },
    {
        "id": "986bcf8e0120a93f",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "fe2841e73b262323"
        ],
        "x": 1315,
        "y": 1380,
        "wires": []
    },
    {
        "id": "da725deb9e69fc0b",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6d02b95d356f152c",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "98b8b560-4a6c-11ef-aec9-29e63ad077bb",
        "value": "chartsection_metadata",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 680,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "59c97a6215bdd3c2",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "c3613240-4d89-11ef-8784-530357231a16",
        "value": "timeline",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 650,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cfba3a456219f2ea",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "59c97a6215bdd3c2"
            ]
        ]
    },
    {
        "id": "df844b0b197b9687",
        "type": "link in",
        "z": "819880c202d2361a",
        "name": "Timeline_data",
        "links": [
            "b5cd94b563000b24"
        ],
        "x": 205,
        "y": 580,
        "wires": [
            [
                "cfba3a456219f2ea"
            ]
        ]
    },
    {
        "id": "932ca6ade71dc4b6",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 640,
        "wires": [
            [
                "b9bf7a3b229eb8f8"
            ]
        ]
    },
    {
        "id": "b9bf7a3b229eb8f8",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "c3613240-4d89-11ef-8784-530357231a16",
        "value": "timeline",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 650,
        "y": 640,
        "wires": [
            [
                "46ef6628fe7e7fb3"
            ],
            []
        ]
    },
    {
        "id": "252e4d385f355983",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 88",
        "mode": "link",
        "links": [
            "677adf66aaeb8215"
        ],
        "x": 1105,
        "y": 640,
        "wires": []
    },
    {
        "id": "46ef6628fe7e7fb3",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datas",
                "pt": "msg",
                "to": "[payload]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 640,
        "wires": [
            [
                "252e4d385f355983",
                "23969a2d525e8a40"
            ]
        ]
    },
    {
        "id": "23969a2d525e8a40",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 56",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 600,
        "wires": []
    },
    {
        "id": "627d69cf15ac5802",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "f2795c20-4991-11ef-9554-a70fc822169d",
        "value": "map",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 620,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9eeb4391fcd96b4a",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "2a3ef590-5011-11ef-8a3a-f1ecc38ac21c",
        "value": "infotable",
        "command": "reset",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 640,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9d40eadc6ea7ac5d",
        "type": "debug",
        "z": "819880c202d2361a",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 880,
        "wires": []
    },
    {
        "id": "f8a5c23da18b66bc",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "2a3ef590-5011-11ef-8a3a-f1ecc38ac21c",
        "value": "infotable",
        "command": "write",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 650,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7db6407c571e6e54",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.src",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "f8a5c23da18b66bc"
            ]
        ]
    },
    {
        "id": "51a9c4ce41597853",
        "type": "link in",
        "z": "819880c202d2361a",
        "name": "DataTable_data",
        "links": [
            "1328d8289798347b"
        ],
        "x": 205,
        "y": 860,
        "wires": [
            [
                "7db6407c571e6e54"
            ]
        ]
    },
    {
        "id": "4a6e361a18f312ec",
        "type": "inject",
        "z": "819880c202d2361a",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 400,
        "y": 920,
        "wires": [
            [
                "5dfa6ca34eb0e990"
            ]
        ]
    },
    {
        "id": "5dfa6ca34eb0e990",
        "type": "persistent value",
        "z": "819880c202d2361a",
        "name": "",
        "valuesConfig": "4f4513db7c879892",
        "valuesConfigName": "Visualization_Graphs",
        "valueId": "2a3ef590-5011-11ef-8a3a-f1ecc38ac21c",
        "value": "infotable",
        "command": "read",
        "msgProperty": "payload",
        "dynamicControl": false,
        "dynamicCommandMsgProperty": "command",
        "dynamicValueMsgProperty": "topic",
        "deepCloneValue": false,
        "outputPreviousValue": false,
        "outputPreviousValueMsgProperty": "previous_value",
        "collectValues": false,
        "collectValuesMsgProperty": "values",
        "blockIfEnable": false,
        "blockIfRule": "eq",
        "blockIfCompareValue": "",
        "outputMetaData": false,
        "outputMetaDataMsgProperty": "meta",
        "x": 650,
        "y": 920,
        "wires": [
            [
                "b2b75e9dcd7cb2e6"
            ],
            []
        ]
    },
    {
        "id": "4495f51c704206a4",
        "type": "link out",
        "z": "819880c202d2361a",
        "name": "link out 89",
        "mode": "link",
        "links": [
            "6f59b7c66be79b8f"
        ],
        "x": 1105,
        "y": 920,
        "wires": []
    },
    {
        "id": "b2b75e9dcd7cb2e6",
        "type": "change",
        "z": "819880c202d2361a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "datas",
                "pt": "msg",
                "to": "[payload]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 920,
        "wires": [
            [
                "4495f51c704206a4",
                "9d40eadc6ea7ac5d"
            ]
        ]
    }
]